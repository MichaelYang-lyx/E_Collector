import e,{Buffer as t}from"buffer";import a from"crypto";import d from"fs";import i from"path";import p from"os";import r from"tty";import n from"util";import s from"url";import o from"child_process";import l from"http";import m from"https";import c from"stream";import u from"zlib";import h from"net";import f from"tls";import v from"events";import b from"punycode";function g(e,t){return t.forEach((function(t){t&&"string"!=typeof t&&!Array.isArray(t)&&Object.keys(t).forEach((function(a){if("default"!==a&&!(a in e)){var d=Object.getOwnPropertyDescriptor(t,a);Object.defineProperty(e,a,d.get?d:{enumerable:!0,get:function(){return t[a]}})}}))})),Object.freeze(e)}var y="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function w(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function _(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var a=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};a.prototype=t.prototype}else a={};return Object.defineProperty(a,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var d=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(a,t,d.get?d:{enumerable:!0,get:function(){return e[t]}})})),a}var S={},E={},N={};const{Buffer:T}=e,{createHash:k,createHmac:A}=a,x={},C=e=>{switch(e){case"sha256":case"sha3-256":case"blake2s256":return 32;case"sha512":case"sha3-512":case"blake2b512":return 64;case"sha224":case"sha3-224":return 28;case"sha384":case"sha3-384":return 48;case"sha1":return 20;case"md5":return 16;default:{let t=x[e];return void 0===t&&(t=k(e).digest().length,x[e]=t),t}}},M=(e,t,a,d)=>{const i=T.isBuffer(a)?a:T.from(a),p=d&&d.length?T.from(d):T.alloc(t,0);return A(e,p).update(i).digest()},D=(e,t,a,d,i)=>{const p=T.isBuffer(i)?i:T.from(i||""),r=p.length,n=Math.ceil(d/t);if(n>255)throw new Error(`OKM length ${d} is too long for ${e} hash`);const s=T.alloc(t*n+r+1);for(let d=1,i=0,o=0;d<=n;++d)p.copy(s,o),s[o+r]=d,A(e,a).update(s.slice(i,o+r+1)).digest().copy(s,o),i=o,o+=t;return s.slice(0,d)};function O(e,t,{salt:a="",info:d="",hash:i="SHA-256"}={}){i=i.toLowerCase().replace("-","");const p=C(i),r=M(i,p,e,a);return D(i,p,r,t,d)}Object.defineProperties(O,{hash_length:{configurable:!1,enumerable:!1,writable:!1,value:C},extract:{configurable:!1,enumerable:!1,writable:!1,value:M},expand:{configurable:!1,enumerable:!1,writable:!1,value:D}});var I,V,R,L,P,B,F,j=O,K={exports:{}},U={exports:{}};function q(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}function z(){return R||(R=1,"function"==typeof process.addon?U.exports=process.addon.bind(process):U.exports=function(){if(V)return I;V=1;var e=d,t=i,a=p,r="function"==typeof __webpack_require__?__non_webpack_require__:q,n=process.config&&process.config.variables||{},s=!!process.env.PREBUILDS_ONLY,o=process.versions.modules,l=process.versions&&process.versions.electron||process.env.ELECTRON_RUN_AS_NODE||"undefined"!=typeof window&&window.process&&"renderer"===window.process.type?"electron":process.versions&&process.versions.nw?"node-webkit":"node",m=process.env.npm_config_arch||a.arch(),c=process.env.npm_config_platform||a.platform(),u=process.env.LIBC||(function(t){return"linux"===t&&e.existsSync("/etc/alpine-release")}(c)?"musl":"glibc"),h=process.env.ARM_VERSION||("arm64"===m?"8":n.arm_version)||"",f=(process.versions.uv||"").split(".")[0];function v(e){return r(v.resolve(e))}function b(t){try{return e.readdirSync(t)}catch(e){return[]}}function g(e,a){var d=b(e).filter(a);return d[0]&&t.join(e,d[0])}function y(e){return/\.node$/.test(e)}function w(e){var t=e.split("-");if(2===t.length){var a=t[0],d=t[1].split("+");if(a&&d.length&&d.every(Boolean))return{name:e,platform:a,architectures:d}}}function _(e,t){return function(a){return null!=a&&a.platform===e&&a.architectures.includes(t)}}function S(e,t){return e.architectures.length-t.architectures.length}function E(e){var t=e.split("."),a={file:e,specificity:0};if("node"===t.pop()){for(var d=0;d<t.length;d++){var i=t[d];if("node"===i||"electron"===i||"node-webkit"===i)a.runtime=i;else if("napi"===i)a.napi=!0;else if("abi"===i.slice(0,3))a.abi=i.slice(3);else if("uv"===i.slice(0,2))a.uv=i.slice(2);else if("armv"===i.slice(0,4))a.armv=i.slice(4);else{if("glibc"!==i&&"musl"!==i)continue;a.libc=i}a.specificity++}return a}}function N(e,t){return function(a){return!(null==a||a.runtime!==e&&!function(e){return"node"===e.runtime&&e.napi}(a)||a.abi!==t&&!a.napi||a.uv&&a.uv!==f||a.armv&&a.armv!==h||a.libc&&a.libc!==u)}}function T(e){return function(t,a){return t.runtime!==a.runtime?t.runtime===e?-1:1:t.abi!==a.abi?t.abi?-1:1:t.specificity!==a.specificity?t.specificity>a.specificity?-1:1:0}}return I=v,v.resolve=v.path=function(e){e=t.resolve(e||".");try{var a=r(t.join(e,"package.json")).name.toUpperCase().replace(/-/g,"_");process.env[a+"_PREBUILD"]&&(e=process.env[a+"_PREBUILD"])}catch(e){}if(!s){var d=g(t.join(e,"build/Release"),y);if(d)return d;var i=g(t.join(e,"build/Debug"),y);if(i)return i}var p=k(e);if(p)return p;var n=k(t.dirname(process.execPath));if(n)return n;var v=["platform="+c,"arch="+m,"runtime="+l,"abi="+o,"uv="+f,h?"armv="+h:"","libc="+u,"node="+process.versions.node,process.versions.electron?"electron="+process.versions.electron:"","function"==typeof __webpack_require__?"webpack=true":""].filter(Boolean).join(" ");throw new Error("No native build was found for "+v+"\n    loaded from: "+e+"\n");function k(e){var a=b(t.join(e,"prebuilds")).map(w).filter(_(c,m)).sort(S)[0];if(a){var d=t.join(e,"prebuilds",a.name),i=b(d).map(E).filter(N(l,o)).sort(T(l))[0];return i?t.join(d,i.file):void 0}}},v.parseTags=E,v.matchTags=N,v.compareTags=T,v.parseTuple=w,v.matchTuple=_,v.compareTuples=S,I}()),U.exports}function $(){if(P)return L;P=1;const e="Impossible case. Please create issue.",t="The tweak was out of range or the resulted private key is invalid",a="The tweak was out of range or equal to zero",d="Unknow error on context randomization",i="Private Key is invalid",p="Public Key could not be parsed",r="Public Key serialization error",n="The sum of the public keys is not valid",s="Signature could not be parsed",o="The nonce generation function failed, or the private key was invalid",l="Public key could not be recover",m="Scalar was invalid (zero or overflow)";function c(e,t){if(!e)throw new Error(t)}function u(e,t,a){if(c(t instanceof Uint8Array,`Expected ${e} to be an Uint8Array`),void 0!==a)if(Array.isArray(a)){const d=`Expected ${e} to be an Uint8Array with length [${a.join(", ")}]`;c(a.includes(t.length),d)}else{const d=`Expected ${e} to be an Uint8Array with length ${a}`;c(t.length===a,d)}}function h(e){c("Boolean"===v(e),"Expected compressed to be a Boolean")}function f(e=(e=>new Uint8Array(e)),t){return"function"==typeof e&&(e=e(t)),u("output",e,t),e}function v(e){return Object.prototype.toString.call(e).slice(8,-1)}return L=b=>({contextRandomize(e){if(c(null===e||e instanceof Uint8Array,"Expected seed to be an Uint8Array or null"),null!==e&&u("seed",e,32),1===b.contextRandomize(e))throw new Error(d)},privateKeyVerify:e=>(u("private key",e,32),0===b.privateKeyVerify(e)),privateKeyNegate(t){switch(u("private key",t,32),b.privateKeyNegate(t)){case 0:return t;case 1:throw new Error(e)}},privateKeyTweakAdd(e,a){switch(u("private key",e,32),u("tweak",a,32),b.privateKeyTweakAdd(e,a)){case 0:return e;case 1:throw new Error(t)}},privateKeyTweakMul(e,t){switch(u("private key",e,32),u("tweak",t,32),b.privateKeyTweakMul(e,t)){case 0:return e;case 1:throw new Error(a)}},publicKeyVerify:e=>(u("public key",e,[33,65]),0===b.publicKeyVerify(e)),publicKeyCreate(e,t=!0,a){switch(u("private key",e,32),h(t),a=f(a,t?33:65),b.publicKeyCreate(a,e)){case 0:return a;case 1:throw new Error(i);case 2:throw new Error(r)}},publicKeyConvert(e,t=!0,a){switch(u("public key",e,[33,65]),h(t),a=f(a,t?33:65),b.publicKeyConvert(a,e)){case 0:return a;case 1:throw new Error(p);case 2:throw new Error(r)}},publicKeyNegate(t,a=!0,d){switch(u("public key",t,[33,65]),h(a),d=f(d,a?33:65),b.publicKeyNegate(d,t)){case 0:return d;case 1:throw new Error(p);case 2:throw new Error(e);case 3:throw new Error(r)}},publicKeyCombine(e,t=!0,a){c(Array.isArray(e),"Expected public keys to be an Array"),c(e.length>0,"Expected public keys array will have more than zero items");for(const t of e)u("public key",t,[33,65]);switch(h(t),a=f(a,t?33:65),b.publicKeyCombine(a,e)){case 0:return a;case 1:throw new Error(p);case 2:throw new Error(n);case 3:throw new Error(r)}},publicKeyTweakAdd(e,a,d=!0,i){switch(u("public key",e,[33,65]),u("tweak",a,32),h(d),i=f(i,d?33:65),b.publicKeyTweakAdd(i,e,a)){case 0:return i;case 1:throw new Error(p);case 2:throw new Error(t)}},publicKeyTweakMul(e,t,d=!0,i){switch(u("public key",e,[33,65]),u("tweak",t,32),h(d),i=f(i,d?33:65),b.publicKeyTweakMul(i,e,t)){case 0:return i;case 1:throw new Error(p);case 2:throw new Error(a)}},signatureNormalize(e){switch(u("signature",e,64),b.signatureNormalize(e)){case 0:return e;case 1:throw new Error(s)}},signatureExport(t,a){u("signature",t,64);const d={output:a=f(a,72),outputlen:72};switch(b.signatureExport(d,t)){case 0:return a.slice(0,d.outputlen);case 1:throw new Error(s);case 2:throw new Error(e)}},signatureImport(t,a){switch(u("signature",t),a=f(a,64),b.signatureImport(a,t)){case 0:return a;case 1:throw new Error(s);case 2:throw new Error(e)}},ecdsaSign(t,a,d={},i){u("message",t,32),u("private key",a,32),c("Object"===v(d),"Expected options to be an Object"),void 0!==d.data&&u("options.data",d.data),void 0!==d.noncefn&&c("Function"===v(d.noncefn),"Expected options.noncefn to be a Function");const p={signature:i=f(i,64),recid:null};switch(b.ecdsaSign(p,t,a,d.data,d.noncefn)){case 0:return p;case 1:throw new Error(o);case 2:throw new Error(e)}},ecdsaVerify(e,t,a){switch(u("signature",e,64),u("message",t,32),u("public key",a,[33,65]),b.ecdsaVerify(e,t,a)){case 0:return!0;case 3:return!1;case 1:throw new Error(s);case 2:throw new Error(p)}},ecdsaRecover(t,a,d,i=!0,p){switch(u("signature",t,64),c("Number"===v(a)&&a>=0&&a<=3,"Expected recovery id to be a Number within interval [0, 3]"),u("message",d,32),h(i),p=f(p,i?33:65),b.ecdsaRecover(p,t,a,d)){case 0:return p;case 1:throw new Error(s);case 2:throw new Error(l);case 3:throw new Error(e)}},ecdh(e,t,a={},d){switch(u("public key",e,[33,65]),u("private key",t,32),c("Object"===v(a),"Expected options to be an Object"),void 0!==a.data&&u("options.data",a.data),void 0!==a.hashfn?(c("Function"===v(a.hashfn),"Expected options.hashfn to be a Function"),void 0!==a.xbuf&&u("options.xbuf",a.xbuf,32),void 0!==a.ybuf&&u("options.ybuf",a.ybuf,32),u("output",d)):d=f(d,32),b.ecdh(d,e,t,a.data,a.hashfn,a.xbuf,a.ybuf)){case 0:return d;case 1:throw new Error(p);case 2:throw new Error(m)}}}),L}var H,Y,W,G={},Z={name:"elliptic",version:"6.5.4",description:"EC cryptography",main:"lib/elliptic.js",files:["lib"],scripts:{lint:"eslint lib test","lint:fix":"npm run lint -- --fix",unit:"istanbul test _mocha --reporter=spec test/index.js",test:"npm run lint && npm run unit",version:"grunt dist && git add dist/"},repository:{type:"git",url:"git@github.com:indutny/elliptic"},keywords:["EC","Elliptic","curve","Cryptography"],author:"Fedor Indutny <fedor@indutny.com>",license:"MIT",bugs:{url:"https://github.com/indutny/elliptic/issues"},homepage:"https://github.com/indutny/elliptic",devDependencies:{brfs:"^2.0.2",coveralls:"^3.1.0",eslint:"^7.6.0",grunt:"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1",istanbul:"^0.4.5",mocha:"^8.0.1"},dependencies:{"bn.js":"^4.11.9",brorand:"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1",inherits:"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"}},J={},X={exports:{}};function Q(){return H||(H=1,function(e,t){function a(e,t){if(!e)throw new Error(t||"Assertion failed")}function d(e,t){e.super_=t;var a=function(){};a.prototype=t.prototype,e.prototype=new a,e.prototype.constructor=e}function i(e,t,a){if(i.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(a=t,t=10),this._init(e||0,t||10,a||"be"))}var p;"object"==typeof e?e.exports=i:t.BN=i,i.BN=i,i.wordSize=26;try{p="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:require("buffer").Buffer}catch(e){}function r(e,t){var a=e.charCodeAt(t);return a>=65&&a<=70?a-55:a>=97&&a<=102?a-87:a-48&15}function n(e,t,a){var d=r(e,a);return a-1>=t&&(d|=r(e,a-1)<<4),d}function s(e,t,a,d){for(var i=0,p=Math.min(e.length,a),r=t;r<p;r++){var n=e.charCodeAt(r)-48;i*=d,i+=n>=49?n-49+10:n>=17?n-17+10:n}return i}i.isBN=function(e){return e instanceof i||null!==e&&"object"==typeof e&&e.constructor.wordSize===i.wordSize&&Array.isArray(e.words)},i.max=function(e,t){return e.cmp(t)>0?e:t},i.min=function(e,t){return e.cmp(t)<0?e:t},i.prototype._init=function(e,t,d){if("number"==typeof e)return this._initNumber(e,t,d);if("object"==typeof e)return this._initArray(e,t,d);"hex"===t&&(t=16),a(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<e.length&&(16===t?this._parseHex(e,i,d):(this._parseBase(e,t,i),"le"===d&&this._initArray(this.toArray(),t,d)))},i.prototype._initNumber=function(e,t,d){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(a(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===d&&this._initArray(this.toArray(),t,d)},i.prototype._initArray=function(e,t,d){if(a("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var p,r,n=0;if("be"===d)for(i=e.length-1,p=0;i>=0;i-=3)r=e[i]|e[i-1]<<8|e[i-2]<<16,this.words[p]|=r<<n&67108863,this.words[p+1]=r>>>26-n&67108863,(n+=24)>=26&&(n-=26,p++);else if("le"===d)for(i=0,p=0;i<e.length;i+=3)r=e[i]|e[i+1]<<8|e[i+2]<<16,this.words[p]|=r<<n&67108863,this.words[p+1]=r>>>26-n&67108863,(n+=24)>=26&&(n-=26,p++);return this.strip()},i.prototype._parseHex=function(e,t,a){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var d=0;d<this.length;d++)this.words[d]=0;var i,p=0,r=0;if("be"===a)for(d=e.length-1;d>=t;d-=2)i=n(e,t,d)<<p,this.words[r]|=67108863&i,p>=18?(p-=18,r+=1,this.words[r]|=i>>>26):p+=8;else for(d=(e.length-t)%2==0?t+1:t;d<e.length;d+=2)i=n(e,t,d)<<p,this.words[r]|=67108863&i,p>=18?(p-=18,r+=1,this.words[r]|=i>>>26):p+=8;this.strip()},i.prototype._parseBase=function(e,t,a){this.words=[0],this.length=1;for(var d=0,i=1;i<=67108863;i*=t)d++;d--,i=i/t|0;for(var p=e.length-a,r=p%d,n=Math.min(p,p-r)+a,o=0,l=a;l<n;l+=d)o=s(e,l,l+d,t),this.imuln(i),this.words[0]+o<67108864?this.words[0]+=o:this._iaddn(o);if(0!==r){var m=1;for(o=s(e,l,e.length,t),l=0;l<r;l++)m*=t;this.imuln(m),this.words[0]+o<67108864?this.words[0]+=o:this._iaddn(o)}this.strip()},i.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},i.prototype.clone=function(){var e=new i(null);return this.copy(e),e},i.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},i.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},i.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},i.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var o=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],m=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(e,t,a){a.negative=t.negative^e.negative;var d=e.length+t.length|0;a.length=d,d=d-1|0;var i=0|e.words[0],p=0|t.words[0],r=i*p,n=67108863&r,s=r/67108864|0;a.words[0]=n;for(var o=1;o<d;o++){for(var l=s>>>26,m=67108863&s,c=Math.min(o,t.length-1),u=Math.max(0,o-e.length+1);u<=c;u++){var h=o-u|0;l+=(r=(i=0|e.words[h])*(p=0|t.words[u])+m)/67108864|0,m=67108863&r}a.words[o]=0|m,s=0|l}return 0!==s?a.words[o]=0|s:a.length--,a.strip()}i.prototype.toString=function(e,t){var d;if(t=0|t||1,16===(e=e||10)||"hex"===e){d="";for(var i=0,p=0,r=0;r<this.length;r++){var n=this.words[r],s=(16777215&(n<<i|p)).toString(16);d=0!=(p=n>>>24-i&16777215)||r!==this.length-1?o[6-s.length]+s+d:s+d,(i+=2)>=26&&(i-=26,r--)}for(0!==p&&(d=p.toString(16)+d);d.length%t!=0;)d="0"+d;return 0!==this.negative&&(d="-"+d),d}if(e===(0|e)&&e>=2&&e<=36){var c=l[e],u=m[e];d="";var h=this.clone();for(h.negative=0;!h.isZero();){var f=h.modn(u).toString(e);d=(h=h.idivn(u)).isZero()?f+d:o[c-f.length]+f+d}for(this.isZero()&&(d="0"+d);d.length%t!=0;)d="0"+d;return 0!==this.negative&&(d="-"+d),d}a(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&a(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},i.prototype.toJSON=function(){return this.toString(16)},i.prototype.toBuffer=function(e,t){return a(void 0!==p),this.toArrayLike(p,e,t)},i.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},i.prototype.toArrayLike=function(e,t,d){var i=this.byteLength(),p=d||Math.max(1,i);a(i<=p,"byte array longer than desired length"),a(p>0,"Requested array length <= 0"),this.strip();var r,n,s="le"===t,o=new e(p),l=this.clone();if(s){for(n=0;!l.isZero();n++)r=l.andln(255),l.iushrn(8),o[n]=r;for(;n<p;n++)o[n]=0}else{for(n=0;n<p-i;n++)o[n]=0;for(n=0;!l.isZero();n++)r=l.andln(255),l.iushrn(8),o[p-n-1]=r}return o},Math.clz32?i.prototype._countBits=function(e){return 32-Math.clz32(e)}:i.prototype._countBits=function(e){var t=e,a=0;return t>=4096&&(a+=13,t>>>=13),t>=64&&(a+=7,t>>>=7),t>=8&&(a+=4,t>>>=4),t>=2&&(a+=2,t>>>=2),a+t},i.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,a=0;return 0==(8191&t)&&(a+=13,t>>>=13),0==(127&t)&&(a+=7,t>>>=7),0==(15&t)&&(a+=4,t>>>=4),0==(3&t)&&(a+=2,t>>>=2),0==(1&t)&&a++,a},i.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var a=this._zeroBits(this.words[t]);if(e+=a,26!==a)break}return e},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},i.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return 0!==this.negative},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},i.prototype.ior=function(e){return a(0==(this.negative|e.negative)),this.iuor(e)},i.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},i.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},i.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var a=0;a<t.length;a++)this.words[a]=this.words[a]&e.words[a];return this.length=t.length,this.strip()},i.prototype.iand=function(e){return a(0==(this.negative|e.negative)),this.iuand(e)},i.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},i.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},i.prototype.iuxor=function(e){var t,a;this.length>e.length?(t=this,a=e):(t=e,a=this);for(var d=0;d<a.length;d++)this.words[d]=t.words[d]^a.words[d];if(this!==t)for(;d<t.length;d++)this.words[d]=t.words[d];return this.length=t.length,this.strip()},i.prototype.ixor=function(e){return a(0==(this.negative|e.negative)),this.iuxor(e)},i.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},i.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},i.prototype.inotn=function(e){a("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),d=e%26;this._expand(t),d>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return d>0&&(this.words[i]=~this.words[i]&67108863>>26-d),this.strip()},i.prototype.notn=function(e){return this.clone().inotn(e)},i.prototype.setn=function(e,t){a("number"==typeof e&&e>=0);var d=e/26|0,i=e%26;return this._expand(d+1),this.words[d]=t?this.words[d]|1<<i:this.words[d]&~(1<<i),this.strip()},i.prototype.iadd=function(e){var t,a,d;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(a=this,d=e):(a=e,d=this);for(var i=0,p=0;p<d.length;p++)t=(0|a.words[p])+(0|d.words[p])+i,this.words[p]=67108863&t,i=t>>>26;for(;0!==i&&p<a.length;p++)t=(0|a.words[p])+i,this.words[p]=67108863&t,i=t>>>26;if(this.length=a.length,0!==i)this.words[this.length]=i,this.length++;else if(a!==this)for(;p<a.length;p++)this.words[p]=a.words[p];return this},i.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},i.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var a,d,i=this.cmp(e);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(a=this,d=e):(a=e,d=this);for(var p=0,r=0;r<d.length;r++)p=(t=(0|a.words[r])-(0|d.words[r])+p)>>26,this.words[r]=67108863&t;for(;0!==p&&r<a.length;r++)p=(t=(0|a.words[r])+p)>>26,this.words[r]=67108863&t;if(0===p&&r<a.length&&a!==this)for(;r<a.length;r++)this.words[r]=a.words[r];return this.length=Math.max(this.length,r),a!==this&&(this.negative=1),this.strip()},i.prototype.sub=function(e){return this.clone().isub(e)};var u=function(e,t,a){var d,i,p,r=e.words,n=t.words,s=a.words,o=0,l=0|r[0],m=8191&l,c=l>>>13,u=0|r[1],h=8191&u,f=u>>>13,v=0|r[2],b=8191&v,g=v>>>13,y=0|r[3],w=8191&y,_=y>>>13,S=0|r[4],E=8191&S,N=S>>>13,T=0|r[5],k=8191&T,A=T>>>13,x=0|r[6],C=8191&x,M=x>>>13,D=0|r[7],O=8191&D,I=D>>>13,V=0|r[8],R=8191&V,L=V>>>13,P=0|r[9],B=8191&P,F=P>>>13,j=0|n[0],K=8191&j,U=j>>>13,q=0|n[1],z=8191&q,$=q>>>13,H=0|n[2],Y=8191&H,W=H>>>13,G=0|n[3],Z=8191&G,J=G>>>13,X=0|n[4],Q=8191&X,ee=X>>>13,te=0|n[5],ae=8191&te,de=te>>>13,ie=0|n[6],pe=8191&ie,re=ie>>>13,ne=0|n[7],se=8191&ne,oe=ne>>>13,le=0|n[8],me=8191&le,ce=le>>>13,ue=0|n[9],he=8191&ue,fe=ue>>>13;a.negative=e.negative^t.negative,a.length=19;var ve=(o+(d=Math.imul(m,K))|0)+((8191&(i=(i=Math.imul(m,U))+Math.imul(c,K)|0))<<13)|0;o=((p=Math.imul(c,U))+(i>>>13)|0)+(ve>>>26)|0,ve&=67108863,d=Math.imul(h,K),i=(i=Math.imul(h,U))+Math.imul(f,K)|0,p=Math.imul(f,U);var be=(o+(d=d+Math.imul(m,z)|0)|0)+((8191&(i=(i=i+Math.imul(m,$)|0)+Math.imul(c,z)|0))<<13)|0;o=((p=p+Math.imul(c,$)|0)+(i>>>13)|0)+(be>>>26)|0,be&=67108863,d=Math.imul(b,K),i=(i=Math.imul(b,U))+Math.imul(g,K)|0,p=Math.imul(g,U),d=d+Math.imul(h,z)|0,i=(i=i+Math.imul(h,$)|0)+Math.imul(f,z)|0,p=p+Math.imul(f,$)|0;var ge=(o+(d=d+Math.imul(m,Y)|0)|0)+((8191&(i=(i=i+Math.imul(m,W)|0)+Math.imul(c,Y)|0))<<13)|0;o=((p=p+Math.imul(c,W)|0)+(i>>>13)|0)+(ge>>>26)|0,ge&=67108863,d=Math.imul(w,K),i=(i=Math.imul(w,U))+Math.imul(_,K)|0,p=Math.imul(_,U),d=d+Math.imul(b,z)|0,i=(i=i+Math.imul(b,$)|0)+Math.imul(g,z)|0,p=p+Math.imul(g,$)|0,d=d+Math.imul(h,Y)|0,i=(i=i+Math.imul(h,W)|0)+Math.imul(f,Y)|0,p=p+Math.imul(f,W)|0;var ye=(o+(d=d+Math.imul(m,Z)|0)|0)+((8191&(i=(i=i+Math.imul(m,J)|0)+Math.imul(c,Z)|0))<<13)|0;o=((p=p+Math.imul(c,J)|0)+(i>>>13)|0)+(ye>>>26)|0,ye&=67108863,d=Math.imul(E,K),i=(i=Math.imul(E,U))+Math.imul(N,K)|0,p=Math.imul(N,U),d=d+Math.imul(w,z)|0,i=(i=i+Math.imul(w,$)|0)+Math.imul(_,z)|0,p=p+Math.imul(_,$)|0,d=d+Math.imul(b,Y)|0,i=(i=i+Math.imul(b,W)|0)+Math.imul(g,Y)|0,p=p+Math.imul(g,W)|0,d=d+Math.imul(h,Z)|0,i=(i=i+Math.imul(h,J)|0)+Math.imul(f,Z)|0,p=p+Math.imul(f,J)|0;var we=(o+(d=d+Math.imul(m,Q)|0)|0)+((8191&(i=(i=i+Math.imul(m,ee)|0)+Math.imul(c,Q)|0))<<13)|0;o=((p=p+Math.imul(c,ee)|0)+(i>>>13)|0)+(we>>>26)|0,we&=67108863,d=Math.imul(k,K),i=(i=Math.imul(k,U))+Math.imul(A,K)|0,p=Math.imul(A,U),d=d+Math.imul(E,z)|0,i=(i=i+Math.imul(E,$)|0)+Math.imul(N,z)|0,p=p+Math.imul(N,$)|0,d=d+Math.imul(w,Y)|0,i=(i=i+Math.imul(w,W)|0)+Math.imul(_,Y)|0,p=p+Math.imul(_,W)|0,d=d+Math.imul(b,Z)|0,i=(i=i+Math.imul(b,J)|0)+Math.imul(g,Z)|0,p=p+Math.imul(g,J)|0,d=d+Math.imul(h,Q)|0,i=(i=i+Math.imul(h,ee)|0)+Math.imul(f,Q)|0,p=p+Math.imul(f,ee)|0;var _e=(o+(d=d+Math.imul(m,ae)|0)|0)+((8191&(i=(i=i+Math.imul(m,de)|0)+Math.imul(c,ae)|0))<<13)|0;o=((p=p+Math.imul(c,de)|0)+(i>>>13)|0)+(_e>>>26)|0,_e&=67108863,d=Math.imul(C,K),i=(i=Math.imul(C,U))+Math.imul(M,K)|0,p=Math.imul(M,U),d=d+Math.imul(k,z)|0,i=(i=i+Math.imul(k,$)|0)+Math.imul(A,z)|0,p=p+Math.imul(A,$)|0,d=d+Math.imul(E,Y)|0,i=(i=i+Math.imul(E,W)|0)+Math.imul(N,Y)|0,p=p+Math.imul(N,W)|0,d=d+Math.imul(w,Z)|0,i=(i=i+Math.imul(w,J)|0)+Math.imul(_,Z)|0,p=p+Math.imul(_,J)|0,d=d+Math.imul(b,Q)|0,i=(i=i+Math.imul(b,ee)|0)+Math.imul(g,Q)|0,p=p+Math.imul(g,ee)|0,d=d+Math.imul(h,ae)|0,i=(i=i+Math.imul(h,de)|0)+Math.imul(f,ae)|0,p=p+Math.imul(f,de)|0;var Se=(o+(d=d+Math.imul(m,pe)|0)|0)+((8191&(i=(i=i+Math.imul(m,re)|0)+Math.imul(c,pe)|0))<<13)|0;o=((p=p+Math.imul(c,re)|0)+(i>>>13)|0)+(Se>>>26)|0,Se&=67108863,d=Math.imul(O,K),i=(i=Math.imul(O,U))+Math.imul(I,K)|0,p=Math.imul(I,U),d=d+Math.imul(C,z)|0,i=(i=i+Math.imul(C,$)|0)+Math.imul(M,z)|0,p=p+Math.imul(M,$)|0,d=d+Math.imul(k,Y)|0,i=(i=i+Math.imul(k,W)|0)+Math.imul(A,Y)|0,p=p+Math.imul(A,W)|0,d=d+Math.imul(E,Z)|0,i=(i=i+Math.imul(E,J)|0)+Math.imul(N,Z)|0,p=p+Math.imul(N,J)|0,d=d+Math.imul(w,Q)|0,i=(i=i+Math.imul(w,ee)|0)+Math.imul(_,Q)|0,p=p+Math.imul(_,ee)|0,d=d+Math.imul(b,ae)|0,i=(i=i+Math.imul(b,de)|0)+Math.imul(g,ae)|0,p=p+Math.imul(g,de)|0,d=d+Math.imul(h,pe)|0,i=(i=i+Math.imul(h,re)|0)+Math.imul(f,pe)|0,p=p+Math.imul(f,re)|0;var Ee=(o+(d=d+Math.imul(m,se)|0)|0)+((8191&(i=(i=i+Math.imul(m,oe)|0)+Math.imul(c,se)|0))<<13)|0;o=((p=p+Math.imul(c,oe)|0)+(i>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,d=Math.imul(R,K),i=(i=Math.imul(R,U))+Math.imul(L,K)|0,p=Math.imul(L,U),d=d+Math.imul(O,z)|0,i=(i=i+Math.imul(O,$)|0)+Math.imul(I,z)|0,p=p+Math.imul(I,$)|0,d=d+Math.imul(C,Y)|0,i=(i=i+Math.imul(C,W)|0)+Math.imul(M,Y)|0,p=p+Math.imul(M,W)|0,d=d+Math.imul(k,Z)|0,i=(i=i+Math.imul(k,J)|0)+Math.imul(A,Z)|0,p=p+Math.imul(A,J)|0,d=d+Math.imul(E,Q)|0,i=(i=i+Math.imul(E,ee)|0)+Math.imul(N,Q)|0,p=p+Math.imul(N,ee)|0,d=d+Math.imul(w,ae)|0,i=(i=i+Math.imul(w,de)|0)+Math.imul(_,ae)|0,p=p+Math.imul(_,de)|0,d=d+Math.imul(b,pe)|0,i=(i=i+Math.imul(b,re)|0)+Math.imul(g,pe)|0,p=p+Math.imul(g,re)|0,d=d+Math.imul(h,se)|0,i=(i=i+Math.imul(h,oe)|0)+Math.imul(f,se)|0,p=p+Math.imul(f,oe)|0;var Ne=(o+(d=d+Math.imul(m,me)|0)|0)+((8191&(i=(i=i+Math.imul(m,ce)|0)+Math.imul(c,me)|0))<<13)|0;o=((p=p+Math.imul(c,ce)|0)+(i>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,d=Math.imul(B,K),i=(i=Math.imul(B,U))+Math.imul(F,K)|0,p=Math.imul(F,U),d=d+Math.imul(R,z)|0,i=(i=i+Math.imul(R,$)|0)+Math.imul(L,z)|0,p=p+Math.imul(L,$)|0,d=d+Math.imul(O,Y)|0,i=(i=i+Math.imul(O,W)|0)+Math.imul(I,Y)|0,p=p+Math.imul(I,W)|0,d=d+Math.imul(C,Z)|0,i=(i=i+Math.imul(C,J)|0)+Math.imul(M,Z)|0,p=p+Math.imul(M,J)|0,d=d+Math.imul(k,Q)|0,i=(i=i+Math.imul(k,ee)|0)+Math.imul(A,Q)|0,p=p+Math.imul(A,ee)|0,d=d+Math.imul(E,ae)|0,i=(i=i+Math.imul(E,de)|0)+Math.imul(N,ae)|0,p=p+Math.imul(N,de)|0,d=d+Math.imul(w,pe)|0,i=(i=i+Math.imul(w,re)|0)+Math.imul(_,pe)|0,p=p+Math.imul(_,re)|0,d=d+Math.imul(b,se)|0,i=(i=i+Math.imul(b,oe)|0)+Math.imul(g,se)|0,p=p+Math.imul(g,oe)|0,d=d+Math.imul(h,me)|0,i=(i=i+Math.imul(h,ce)|0)+Math.imul(f,me)|0,p=p+Math.imul(f,ce)|0;var Te=(o+(d=d+Math.imul(m,he)|0)|0)+((8191&(i=(i=i+Math.imul(m,fe)|0)+Math.imul(c,he)|0))<<13)|0;o=((p=p+Math.imul(c,fe)|0)+(i>>>13)|0)+(Te>>>26)|0,Te&=67108863,d=Math.imul(B,z),i=(i=Math.imul(B,$))+Math.imul(F,z)|0,p=Math.imul(F,$),d=d+Math.imul(R,Y)|0,i=(i=i+Math.imul(R,W)|0)+Math.imul(L,Y)|0,p=p+Math.imul(L,W)|0,d=d+Math.imul(O,Z)|0,i=(i=i+Math.imul(O,J)|0)+Math.imul(I,Z)|0,p=p+Math.imul(I,J)|0,d=d+Math.imul(C,Q)|0,i=(i=i+Math.imul(C,ee)|0)+Math.imul(M,Q)|0,p=p+Math.imul(M,ee)|0,d=d+Math.imul(k,ae)|0,i=(i=i+Math.imul(k,de)|0)+Math.imul(A,ae)|0,p=p+Math.imul(A,de)|0,d=d+Math.imul(E,pe)|0,i=(i=i+Math.imul(E,re)|0)+Math.imul(N,pe)|0,p=p+Math.imul(N,re)|0,d=d+Math.imul(w,se)|0,i=(i=i+Math.imul(w,oe)|0)+Math.imul(_,se)|0,p=p+Math.imul(_,oe)|0,d=d+Math.imul(b,me)|0,i=(i=i+Math.imul(b,ce)|0)+Math.imul(g,me)|0,p=p+Math.imul(g,ce)|0;var ke=(o+(d=d+Math.imul(h,he)|0)|0)+((8191&(i=(i=i+Math.imul(h,fe)|0)+Math.imul(f,he)|0))<<13)|0;o=((p=p+Math.imul(f,fe)|0)+(i>>>13)|0)+(ke>>>26)|0,ke&=67108863,d=Math.imul(B,Y),i=(i=Math.imul(B,W))+Math.imul(F,Y)|0,p=Math.imul(F,W),d=d+Math.imul(R,Z)|0,i=(i=i+Math.imul(R,J)|0)+Math.imul(L,Z)|0,p=p+Math.imul(L,J)|0,d=d+Math.imul(O,Q)|0,i=(i=i+Math.imul(O,ee)|0)+Math.imul(I,Q)|0,p=p+Math.imul(I,ee)|0,d=d+Math.imul(C,ae)|0,i=(i=i+Math.imul(C,de)|0)+Math.imul(M,ae)|0,p=p+Math.imul(M,de)|0,d=d+Math.imul(k,pe)|0,i=(i=i+Math.imul(k,re)|0)+Math.imul(A,pe)|0,p=p+Math.imul(A,re)|0,d=d+Math.imul(E,se)|0,i=(i=i+Math.imul(E,oe)|0)+Math.imul(N,se)|0,p=p+Math.imul(N,oe)|0,d=d+Math.imul(w,me)|0,i=(i=i+Math.imul(w,ce)|0)+Math.imul(_,me)|0,p=p+Math.imul(_,ce)|0;var Ae=(o+(d=d+Math.imul(b,he)|0)|0)+((8191&(i=(i=i+Math.imul(b,fe)|0)+Math.imul(g,he)|0))<<13)|0;o=((p=p+Math.imul(g,fe)|0)+(i>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,d=Math.imul(B,Z),i=(i=Math.imul(B,J))+Math.imul(F,Z)|0,p=Math.imul(F,J),d=d+Math.imul(R,Q)|0,i=(i=i+Math.imul(R,ee)|0)+Math.imul(L,Q)|0,p=p+Math.imul(L,ee)|0,d=d+Math.imul(O,ae)|0,i=(i=i+Math.imul(O,de)|0)+Math.imul(I,ae)|0,p=p+Math.imul(I,de)|0,d=d+Math.imul(C,pe)|0,i=(i=i+Math.imul(C,re)|0)+Math.imul(M,pe)|0,p=p+Math.imul(M,re)|0,d=d+Math.imul(k,se)|0,i=(i=i+Math.imul(k,oe)|0)+Math.imul(A,se)|0,p=p+Math.imul(A,oe)|0,d=d+Math.imul(E,me)|0,i=(i=i+Math.imul(E,ce)|0)+Math.imul(N,me)|0,p=p+Math.imul(N,ce)|0;var xe=(o+(d=d+Math.imul(w,he)|0)|0)+((8191&(i=(i=i+Math.imul(w,fe)|0)+Math.imul(_,he)|0))<<13)|0;o=((p=p+Math.imul(_,fe)|0)+(i>>>13)|0)+(xe>>>26)|0,xe&=67108863,d=Math.imul(B,Q),i=(i=Math.imul(B,ee))+Math.imul(F,Q)|0,p=Math.imul(F,ee),d=d+Math.imul(R,ae)|0,i=(i=i+Math.imul(R,de)|0)+Math.imul(L,ae)|0,p=p+Math.imul(L,de)|0,d=d+Math.imul(O,pe)|0,i=(i=i+Math.imul(O,re)|0)+Math.imul(I,pe)|0,p=p+Math.imul(I,re)|0,d=d+Math.imul(C,se)|0,i=(i=i+Math.imul(C,oe)|0)+Math.imul(M,se)|0,p=p+Math.imul(M,oe)|0,d=d+Math.imul(k,me)|0,i=(i=i+Math.imul(k,ce)|0)+Math.imul(A,me)|0,p=p+Math.imul(A,ce)|0;var Ce=(o+(d=d+Math.imul(E,he)|0)|0)+((8191&(i=(i=i+Math.imul(E,fe)|0)+Math.imul(N,he)|0))<<13)|0;o=((p=p+Math.imul(N,fe)|0)+(i>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,d=Math.imul(B,ae),i=(i=Math.imul(B,de))+Math.imul(F,ae)|0,p=Math.imul(F,de),d=d+Math.imul(R,pe)|0,i=(i=i+Math.imul(R,re)|0)+Math.imul(L,pe)|0,p=p+Math.imul(L,re)|0,d=d+Math.imul(O,se)|0,i=(i=i+Math.imul(O,oe)|0)+Math.imul(I,se)|0,p=p+Math.imul(I,oe)|0,d=d+Math.imul(C,me)|0,i=(i=i+Math.imul(C,ce)|0)+Math.imul(M,me)|0,p=p+Math.imul(M,ce)|0;var Me=(o+(d=d+Math.imul(k,he)|0)|0)+((8191&(i=(i=i+Math.imul(k,fe)|0)+Math.imul(A,he)|0))<<13)|0;o=((p=p+Math.imul(A,fe)|0)+(i>>>13)|0)+(Me>>>26)|0,Me&=67108863,d=Math.imul(B,pe),i=(i=Math.imul(B,re))+Math.imul(F,pe)|0,p=Math.imul(F,re),d=d+Math.imul(R,se)|0,i=(i=i+Math.imul(R,oe)|0)+Math.imul(L,se)|0,p=p+Math.imul(L,oe)|0,d=d+Math.imul(O,me)|0,i=(i=i+Math.imul(O,ce)|0)+Math.imul(I,me)|0,p=p+Math.imul(I,ce)|0;var De=(o+(d=d+Math.imul(C,he)|0)|0)+((8191&(i=(i=i+Math.imul(C,fe)|0)+Math.imul(M,he)|0))<<13)|0;o=((p=p+Math.imul(M,fe)|0)+(i>>>13)|0)+(De>>>26)|0,De&=67108863,d=Math.imul(B,se),i=(i=Math.imul(B,oe))+Math.imul(F,se)|0,p=Math.imul(F,oe),d=d+Math.imul(R,me)|0,i=(i=i+Math.imul(R,ce)|0)+Math.imul(L,me)|0,p=p+Math.imul(L,ce)|0;var Oe=(o+(d=d+Math.imul(O,he)|0)|0)+((8191&(i=(i=i+Math.imul(O,fe)|0)+Math.imul(I,he)|0))<<13)|0;o=((p=p+Math.imul(I,fe)|0)+(i>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,d=Math.imul(B,me),i=(i=Math.imul(B,ce))+Math.imul(F,me)|0,p=Math.imul(F,ce);var Ie=(o+(d=d+Math.imul(R,he)|0)|0)+((8191&(i=(i=i+Math.imul(R,fe)|0)+Math.imul(L,he)|0))<<13)|0;o=((p=p+Math.imul(L,fe)|0)+(i>>>13)|0)+(Ie>>>26)|0,Ie&=67108863;var Ve=(o+(d=Math.imul(B,he))|0)+((8191&(i=(i=Math.imul(B,fe))+Math.imul(F,he)|0))<<13)|0;return o=((p=Math.imul(F,fe))+(i>>>13)|0)+(Ve>>>26)|0,Ve&=67108863,s[0]=ve,s[1]=be,s[2]=ge,s[3]=ye,s[4]=we,s[5]=_e,s[6]=Se,s[7]=Ee,s[8]=Ne,s[9]=Te,s[10]=ke,s[11]=Ae,s[12]=xe,s[13]=Ce,s[14]=Me,s[15]=De,s[16]=Oe,s[17]=Ie,s[18]=Ve,0!==o&&(s[19]=o,a.length++),a};function h(e,t,a){return(new f).mulp(e,t,a)}function f(e,t){this.x=e,this.y=t}Math.imul||(u=c),i.prototype.mulTo=function(e,t){var a,d=this.length+e.length;return a=10===this.length&&10===e.length?u(this,e,t):d<63?c(this,e,t):d<1024?function(e,t,a){a.negative=t.negative^e.negative,a.length=e.length+t.length;for(var d=0,i=0,p=0;p<a.length-1;p++){var r=i;i=0;for(var n=67108863&d,s=Math.min(p,t.length-1),o=Math.max(0,p-e.length+1);o<=s;o++){var l=p-o,m=(0|e.words[l])*(0|t.words[o]),c=67108863&m;n=67108863&(c=c+n|0),i+=(r=(r=r+(m/67108864|0)|0)+(c>>>26)|0)>>>26,r&=67108863}a.words[p]=n,d=r,r=i}return 0!==d?a.words[p]=d:a.length--,a.strip()}(this,e,t):h(this,e,t),a},f.prototype.makeRBT=function(e){for(var t=new Array(e),a=i.prototype._countBits(e)-1,d=0;d<e;d++)t[d]=this.revBin(d,a,e);return t},f.prototype.revBin=function(e,t,a){if(0===e||e===a-1)return e;for(var d=0,i=0;i<t;i++)d|=(1&e)<<t-i-1,e>>=1;return d},f.prototype.permute=function(e,t,a,d,i,p){for(var r=0;r<p;r++)d[r]=t[e[r]],i[r]=a[e[r]]},f.prototype.transform=function(e,t,a,d,i,p){this.permute(p,e,t,a,d,i);for(var r=1;r<i;r<<=1)for(var n=r<<1,s=Math.cos(2*Math.PI/n),o=Math.sin(2*Math.PI/n),l=0;l<i;l+=n)for(var m=s,c=o,u=0;u<r;u++){var h=a[l+u],f=d[l+u],v=a[l+u+r],b=d[l+u+r],g=m*v-c*b;b=m*b+c*v,v=g,a[l+u]=h+v,d[l+u]=f+b,a[l+u+r]=h-v,d[l+u+r]=f-b,u!==n&&(g=s*m-o*c,c=s*c+o*m,m=g)}},f.prototype.guessLen13b=function(e,t){var a=1|Math.max(t,e),d=1&a,i=0;for(a=a/2|0;a;a>>>=1)i++;return 1<<i+1+d},f.prototype.conjugate=function(e,t,a){if(!(a<=1))for(var d=0;d<a/2;d++){var i=e[d];e[d]=e[a-d-1],e[a-d-1]=i,i=t[d],t[d]=-t[a-d-1],t[a-d-1]=-i}},f.prototype.normalize13b=function(e,t){for(var a=0,d=0;d<t/2;d++){var i=8192*Math.round(e[2*d+1]/t)+Math.round(e[2*d]/t)+a;e[d]=67108863&i,a=i<67108864?0:i/67108864|0}return e},f.prototype.convert13b=function(e,t,d,i){for(var p=0,r=0;r<t;r++)p+=0|e[r],d[2*r]=8191&p,p>>>=13,d[2*r+1]=8191&p,p>>>=13;for(r=2*t;r<i;++r)d[r]=0;a(0===p),a(0==(-8192&p))},f.prototype.stub=function(e){for(var t=new Array(e),a=0;a<e;a++)t[a]=0;return t},f.prototype.mulp=function(e,t,a){var d=2*this.guessLen13b(e.length,t.length),i=this.makeRBT(d),p=this.stub(d),r=new Array(d),n=new Array(d),s=new Array(d),o=new Array(d),l=new Array(d),m=new Array(d),c=a.words;c.length=d,this.convert13b(e.words,e.length,r,d),this.convert13b(t.words,t.length,o,d),this.transform(r,p,n,s,d,i),this.transform(o,p,l,m,d,i);for(var u=0;u<d;u++){var h=n[u]*l[u]-s[u]*m[u];s[u]=n[u]*m[u]+s[u]*l[u],n[u]=h}return this.conjugate(n,s,d),this.transform(n,s,c,p,d,i),this.conjugate(c,p,d),this.normalize13b(c,d),a.negative=e.negative^t.negative,a.length=e.length+t.length,a.strip()},i.prototype.mul=function(e){var t=new i(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},i.prototype.mulf=function(e){var t=new i(null);return t.words=new Array(this.length+e.length),h(this,e,t)},i.prototype.imul=function(e){return this.clone().mulTo(e,this)},i.prototype.imuln=function(e){a("number"==typeof e),a(e<67108864);for(var t=0,d=0;d<this.length;d++){var i=(0|this.words[d])*e,p=(67108863&i)+(67108863&t);t>>=26,t+=i/67108864|0,t+=p>>>26,this.words[d]=67108863&p}return 0!==t&&(this.words[d]=t,this.length++),this},i.prototype.muln=function(e){return this.clone().imuln(e)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),a=0;a<t.length;a++){var d=a/26|0,i=a%26;t[a]=(e.words[d]&1<<i)>>>i}return t}(e);if(0===t.length)return new i(1);for(var a=this,d=0;d<t.length&&0===t[d];d++,a=a.sqr());if(++d<t.length)for(var p=a.sqr();d<t.length;d++,p=p.sqr())0!==t[d]&&(a=a.mul(p));return a},i.prototype.iushln=function(e){a("number"==typeof e&&e>=0);var t,d=e%26,i=(e-d)/26,p=67108863>>>26-d<<26-d;if(0!==d){var r=0;for(t=0;t<this.length;t++){var n=this.words[t]&p,s=(0|this.words[t])-n<<d;this.words[t]=s|r,r=n>>>26-d}r&&(this.words[t]=r,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this.strip()},i.prototype.ishln=function(e){return a(0===this.negative),this.iushln(e)},i.prototype.iushrn=function(e,t,d){var i;a("number"==typeof e&&e>=0),i=t?(t-t%26)/26:0;var p=e%26,r=Math.min((e-p)/26,this.length),n=67108863^67108863>>>p<<p,s=d;if(i-=r,i=Math.max(0,i),s){for(var o=0;o<r;o++)s.words[o]=this.words[o];s.length=r}if(0===r);else if(this.length>r)for(this.length-=r,o=0;o<this.length;o++)this.words[o]=this.words[o+r];else this.words[0]=0,this.length=1;var l=0;for(o=this.length-1;o>=0&&(0!==l||o>=i);o--){var m=0|this.words[o];this.words[o]=l<<26-p|m>>>p,l=m&n}return s&&0!==l&&(s.words[s.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},i.prototype.ishrn=function(e,t,d){return a(0===this.negative),this.iushrn(e,t,d)},i.prototype.shln=function(e){return this.clone().ishln(e)},i.prototype.ushln=function(e){return this.clone().iushln(e)},i.prototype.shrn=function(e){return this.clone().ishrn(e)},i.prototype.ushrn=function(e){return this.clone().iushrn(e)},i.prototype.testn=function(e){a("number"==typeof e&&e>=0);var t=e%26,d=(e-t)/26,i=1<<t;return!(this.length<=d||!(this.words[d]&i))},i.prototype.imaskn=function(e){a("number"==typeof e&&e>=0);var t=e%26,d=(e-t)/26;if(a(0===this.negative,"imaskn works only with positive numbers"),this.length<=d)return this;if(0!==t&&d++,this.length=Math.min(d,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this.strip()},i.prototype.maskn=function(e){return this.clone().imaskn(e)},i.prototype.iaddn=function(e){return a("number"==typeof e),a(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},i.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},i.prototype.isubn=function(e){if(a("number"==typeof e),a(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},i.prototype.addn=function(e){return this.clone().iaddn(e)},i.prototype.subn=function(e){return this.clone().isubn(e)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(e,t,d){var i,p,r=e.length+d;this._expand(r);var n=0;for(i=0;i<e.length;i++){p=(0|this.words[i+d])+n;var s=(0|e.words[i])*t;n=((p-=67108863&s)>>26)-(s/67108864|0),this.words[i+d]=67108863&p}for(;i<this.length-d;i++)n=(p=(0|this.words[i+d])+n)>>26,this.words[i+d]=67108863&p;if(0===n)return this.strip();for(a(-1===n),n=0,i=0;i<this.length;i++)n=(p=-(0|this.words[i])+n)>>26,this.words[i]=67108863&p;return this.negative=1,this.strip()},i.prototype._wordDiv=function(e,t){var a=(this.length,e.length),d=this.clone(),p=e,r=0|p.words[p.length-1];0!=(a=26-this._countBits(r))&&(p=p.ushln(a),d.iushln(a),r=0|p.words[p.length-1]);var n,s=d.length-p.length;if("mod"!==t){(n=new i(null)).length=s+1,n.words=new Array(n.length);for(var o=0;o<n.length;o++)n.words[o]=0}var l=d.clone()._ishlnsubmul(p,1,s);0===l.negative&&(d=l,n&&(n.words[s]=1));for(var m=s-1;m>=0;m--){var c=67108864*(0|d.words[p.length+m])+(0|d.words[p.length+m-1]);for(c=Math.min(c/r|0,67108863),d._ishlnsubmul(p,c,m);0!==d.negative;)c--,d.negative=0,d._ishlnsubmul(p,1,m),d.isZero()||(d.negative^=1);n&&(n.words[m]=c)}return n&&n.strip(),d.strip(),"div"!==t&&0!==a&&d.iushrn(a),{div:n||null,mod:d}},i.prototype.divmod=function(e,t,d){return a(!e.isZero()),this.isZero()?{div:new i(0),mod:new i(0)}:0!==this.negative&&0===e.negative?(n=this.neg().divmod(e,t),"mod"!==t&&(p=n.div.neg()),"div"!==t&&(r=n.mod.neg(),d&&0!==r.negative&&r.iadd(e)),{div:p,mod:r}):0===this.negative&&0!==e.negative?(n=this.divmod(e.neg(),t),"mod"!==t&&(p=n.div.neg()),{div:p,mod:n.mod}):0!=(this.negative&e.negative)?(n=this.neg().divmod(e.neg(),t),"div"!==t&&(r=n.mod.neg(),d&&0!==r.negative&&r.isub(e)),{div:n.div,mod:r}):e.length>this.length||this.cmp(e)<0?{div:new i(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new i(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new i(this.modn(e.words[0]))}:this._wordDiv(e,t);var p,r,n},i.prototype.div=function(e){return this.divmod(e,"div",!1).div},i.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},i.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},i.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var a=0!==t.div.negative?t.mod.isub(e):t.mod,d=e.ushrn(1),i=e.andln(1),p=a.cmp(d);return p<0||1===i&&0===p?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},i.prototype.modn=function(e){a(e<=67108863);for(var t=(1<<26)%e,d=0,i=this.length-1;i>=0;i--)d=(t*d+(0|this.words[i]))%e;return d},i.prototype.idivn=function(e){a(e<=67108863);for(var t=0,d=this.length-1;d>=0;d--){var i=(0|this.words[d])+67108864*t;this.words[d]=i/e|0,t=i%e}return this.strip()},i.prototype.divn=function(e){return this.clone().idivn(e)},i.prototype.egcd=function(e){a(0===e.negative),a(!e.isZero());var t=this,d=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var p=new i(1),r=new i(0),n=new i(0),s=new i(1),o=0;t.isEven()&&d.isEven();)t.iushrn(1),d.iushrn(1),++o;for(var l=d.clone(),m=t.clone();!t.isZero();){for(var c=0,u=1;0==(t.words[0]&u)&&c<26;++c,u<<=1);if(c>0)for(t.iushrn(c);c-- >0;)(p.isOdd()||r.isOdd())&&(p.iadd(l),r.isub(m)),p.iushrn(1),r.iushrn(1);for(var h=0,f=1;0==(d.words[0]&f)&&h<26;++h,f<<=1);if(h>0)for(d.iushrn(h);h-- >0;)(n.isOdd()||s.isOdd())&&(n.iadd(l),s.isub(m)),n.iushrn(1),s.iushrn(1);t.cmp(d)>=0?(t.isub(d),p.isub(n),r.isub(s)):(d.isub(t),n.isub(p),s.isub(r))}return{a:n,b:s,gcd:d.iushln(o)}},i.prototype._invmp=function(e){a(0===e.negative),a(!e.isZero());var t=this,d=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var p,r=new i(1),n=new i(0),s=d.clone();t.cmpn(1)>0&&d.cmpn(1)>0;){for(var o=0,l=1;0==(t.words[0]&l)&&o<26;++o,l<<=1);if(o>0)for(t.iushrn(o);o-- >0;)r.isOdd()&&r.iadd(s),r.iushrn(1);for(var m=0,c=1;0==(d.words[0]&c)&&m<26;++m,c<<=1);if(m>0)for(d.iushrn(m);m-- >0;)n.isOdd()&&n.iadd(s),n.iushrn(1);t.cmp(d)>=0?(t.isub(d),r.isub(n)):(d.isub(t),n.isub(r))}return(p=0===t.cmpn(1)?r:n).cmpn(0)<0&&p.iadd(e),p},i.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),a=e.clone();t.negative=0,a.negative=0;for(var d=0;t.isEven()&&a.isEven();d++)t.iushrn(1),a.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;a.isEven();)a.iushrn(1);var i=t.cmp(a);if(i<0){var p=t;t=a,a=p}else if(0===i||0===a.cmpn(1))break;t.isub(a)}return a.iushln(d)},i.prototype.invm=function(e){return this.egcd(e).a.umod(e)},i.prototype.isEven=function(){return 0==(1&this.words[0])},i.prototype.isOdd=function(){return 1==(1&this.words[0])},i.prototype.andln=function(e){return this.words[0]&e},i.prototype.bincn=function(e){a("number"==typeof e);var t=e%26,d=(e-t)/26,i=1<<t;if(this.length<=d)return this._expand(d+1),this.words[d]|=i,this;for(var p=i,r=d;0!==p&&r<this.length;r++){var n=0|this.words[r];p=(n+=p)>>>26,n&=67108863,this.words[r]=n}return 0!==p&&(this.words[r]=p,this.length++),this},i.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},i.prototype.cmpn=function(e){var t,d=e<0;if(0!==this.negative&&!d)return-1;if(0===this.negative&&d)return 1;if(this.strip(),this.length>1)t=1;else{d&&(e=-e),a(e<=67108863,"Number is too big");var i=0|this.words[0];t=i===e?0:i<e?-1:1}return 0!==this.negative?0|-t:t},i.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},i.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,a=this.length-1;a>=0;a--){var d=0|this.words[a],i=0|e.words[a];if(d!==i){d<i?t=-1:d>i&&(t=1);break}}return t},i.prototype.gtn=function(e){return 1===this.cmpn(e)},i.prototype.gt=function(e){return 1===this.cmp(e)},i.prototype.gten=function(e){return this.cmpn(e)>=0},i.prototype.gte=function(e){return this.cmp(e)>=0},i.prototype.ltn=function(e){return-1===this.cmpn(e)},i.prototype.lt=function(e){return-1===this.cmp(e)},i.prototype.lten=function(e){return this.cmpn(e)<=0},i.prototype.lte=function(e){return this.cmp(e)<=0},i.prototype.eqn=function(e){return 0===this.cmpn(e)},i.prototype.eq=function(e){return 0===this.cmp(e)},i.red=function(e){return new S(e)},i.prototype.toRed=function(e){return a(!this.red,"Already a number in reduction context"),a(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},i.prototype.fromRed=function(){return a(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(e){return this.red=e,this},i.prototype.forceRed=function(e){return a(!this.red,"Already a number in reduction context"),this._forceRed(e)},i.prototype.redAdd=function(e){return a(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},i.prototype.redIAdd=function(e){return a(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},i.prototype.redSub=function(e){return a(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},i.prototype.redISub=function(e){return a(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},i.prototype.redShl=function(e){return a(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},i.prototype.redMul=function(e){return a(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},i.prototype.redIMul=function(e){return a(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},i.prototype.redSqr=function(){return a(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return a(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return a(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return a(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return a(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(e){return a(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var v={k256:null,p224:null,p192:null,p25519:null};function b(e,t){this.name=e,this.p=new i(t,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function g(){b.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function y(){b.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function w(){b.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function _(){b.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function S(e){if("string"==typeof e){var t=i._prime(e);this.m=t.p,this.prime=t}else a(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function E(e){S.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}b.prototype._tmp=function(){var e=new i(null);return e.words=new Array(Math.ceil(this.n/13)),e},b.prototype.ireduce=function(e){var t,a=e;do{this.split(a,this.tmp),t=(a=(a=this.imulK(a)).iadd(this.tmp)).bitLength()}while(t>this.n);var d=t<this.n?-1:a.ucmp(this.p);return 0===d?(a.words[0]=0,a.length=1):d>0?a.isub(this.p):void 0!==a.strip?a.strip():a._strip(),a},b.prototype.split=function(e,t){e.iushrn(this.n,0,t)},b.prototype.imulK=function(e){return e.imul(this.k)},d(g,b),g.prototype.split=function(e,t){for(var a=4194303,d=Math.min(e.length,9),i=0;i<d;i++)t.words[i]=e.words[i];if(t.length=d,e.length<=9)return e.words[0]=0,void(e.length=1);var p=e.words[9];for(t.words[t.length++]=p&a,i=10;i<e.length;i++){var r=0|e.words[i];e.words[i-10]=(r&a)<<4|p>>>22,p=r}p>>>=22,e.words[i-10]=p,0===p&&e.length>10?e.length-=10:e.length-=9},g.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,a=0;a<e.length;a++){var d=0|e.words[a];t+=977*d,e.words[a]=67108863&t,t=64*d+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},d(y,b),d(w,b),d(_,b),_.prototype.imulK=function(e){for(var t=0,a=0;a<e.length;a++){var d=19*(0|e.words[a])+t,i=67108863&d;d>>>=26,e.words[a]=i,t=d}return 0!==t&&(e.words[e.length++]=t),e},i._prime=function(e){if(v[e])return v[e];var t;if("k256"===e)t=new g;else if("p224"===e)t=new y;else if("p192"===e)t=new w;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new _}return v[e]=t,t},S.prototype._verify1=function(e){a(0===e.negative,"red works only with positives"),a(e.red,"red works only with red numbers")},S.prototype._verify2=function(e,t){a(0==(e.negative|t.negative),"red works only with positives"),a(e.red&&e.red===t.red,"red works only with red numbers")},S.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},S.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},S.prototype.add=function(e,t){this._verify2(e,t);var a=e.add(t);return a.cmp(this.m)>=0&&a.isub(this.m),a._forceRed(this)},S.prototype.iadd=function(e,t){this._verify2(e,t);var a=e.iadd(t);return a.cmp(this.m)>=0&&a.isub(this.m),a},S.prototype.sub=function(e,t){this._verify2(e,t);var a=e.sub(t);return a.cmpn(0)<0&&a.iadd(this.m),a._forceRed(this)},S.prototype.isub=function(e,t){this._verify2(e,t);var a=e.isub(t);return a.cmpn(0)<0&&a.iadd(this.m),a},S.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},S.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},S.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},S.prototype.isqr=function(e){return this.imul(e,e.clone())},S.prototype.sqr=function(e){return this.mul(e,e)},S.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(a(t%2==1),3===t){var d=this.m.add(new i(1)).iushrn(2);return this.pow(e,d)}for(var p=this.m.subn(1),r=0;!p.isZero()&&0===p.andln(1);)r++,p.iushrn(1);a(!p.isZero());var n=new i(1).toRed(this),s=n.redNeg(),o=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new i(2*l*l).toRed(this);0!==this.pow(l,o).cmp(s);)l.redIAdd(s);for(var m=this.pow(l,p),c=this.pow(e,p.addn(1).iushrn(1)),u=this.pow(e,p),h=r;0!==u.cmp(n);){for(var f=u,v=0;0!==f.cmp(n);v++)f=f.redSqr();a(v<h);var b=this.pow(m,new i(1).iushln(h-v-1));c=c.redMul(b),m=b.redSqr(),u=u.redMul(m),h=v}return c},S.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},S.prototype.pow=function(e,t){if(t.isZero())return new i(1).toRed(this);if(0===t.cmpn(1))return e.clone();var a=new Array(16);a[0]=new i(1).toRed(this),a[1]=e;for(var d=2;d<a.length;d++)a[d]=this.mul(a[d-1],e);var p=a[0],r=0,n=0,s=t.bitLength()%26;for(0===s&&(s=26),d=t.length-1;d>=0;d--){for(var o=t.words[d],l=s-1;l>=0;l--){var m=o>>l&1;p!==a[0]&&(p=this.sqr(p)),0!==m||0!==r?(r<<=1,r|=m,(4==++n||0===d&&0===l)&&(p=this.mul(p,a[r]),n=0,r=0)):n=0}s=26}return p},S.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},S.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},i.mont=function(e){return new E(e)},d(E,S),E.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},E.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},E.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var a=e.imul(t),d=a.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=a.isub(d).iushrn(this.shift),p=i;return i.cmp(this.m)>=0?p=i.isub(this.m):i.cmpn(0)<0&&(p=i.iadd(this.m)),p._forceRed(this)},E.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new i(0)._forceRed(this);var a=e.mul(t),d=a.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),p=a.isub(d).iushrn(this.shift),r=p;return p.cmp(this.m)>=0?r=p.isub(this.m):p.cmpn(0)<0&&(r=p.iadd(this.m)),r._forceRed(this)},E.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(X,y)),X.exports}function ee(){if(W)return Y;function e(e,t){if(!e)throw new Error(t||"Assertion failed")}return W=1,Y=e,e.equal=function(e,t,a){if(e!=t)throw new Error(a||"Assertion failed: "+e+" != "+t)},Y}X.exports;var te,ae,de={};function ie(){return te||(te=1,function(e){var t=de;function a(e){return 1===e.length?"0"+e:e}function d(e){for(var t="",d=0;d<e.length;d++)t+=a(e[d].toString(16));return t}t.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var a=[];if("string"!=typeof e){for(var d=0;d<e.length;d++)a[d]=0|e[d];return a}if("hex"===t){(e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e);for(d=0;d<e.length;d+=2)a.push(parseInt(e[d]+e[d+1],16))}else for(d=0;d<e.length;d++){var i=e.charCodeAt(d),p=i>>8,r=255&i;p?a.push(p,r):a.push(r)}return a},t.zero2=a,t.toHex=d,t.encode=function(e,t){return"hex"===t?d(e):e}}()),de}function pe(){return ae||(ae=1,function(e){var t=J,a=Q(),d=ee(),i=ie();t.assert=d,t.toArray=i.toArray,t.zero2=i.zero2,t.toHex=i.toHex,t.encode=i.encode,t.getNAF=function(e,t,a){var d=new Array(Math.max(e.bitLength(),a)+1);d.fill(0);for(var i=1<<t+1,p=e.clone(),r=0;r<d.length;r++){var n,s=p.andln(i-1);p.isOdd()?(n=s>(i>>1)-1?(i>>1)-s:s,p.isubn(n)):n=0,d[r]=n,p.iushrn(1)}return d},t.getJSF=function(e,t){var a=[[],[]];e=e.clone(),t=t.clone();for(var d,i=0,p=0;e.cmpn(-i)>0||t.cmpn(-p)>0;){var r,n,s=e.andln(3)+i&3,o=t.andln(3)+p&3;3===s&&(s=-1),3===o&&(o=-1),r=0==(1&s)?0:3!==(d=e.andln(7)+i&7)&&5!==d||2!==o?s:-s,a[0].push(r),n=0==(1&o)?0:3!==(d=t.andln(7)+p&7)&&5!==d||2!==s?o:-o,a[1].push(n),2*i===r+1&&(i=1-i),2*p===n+1&&(p=1-p),e.iushrn(1),t.iushrn(1)}return a},t.cachedProperty=function(e,t,a){var d="_"+t;e.prototype[t]=function(){return void 0!==this[d]?this[d]:this[d]=a.call(this)}},t.parseBytes=function(e){return"string"==typeof e?t.toArray(e,"hex"):e},t.intFromLE=function(e){return new a(e,"hex","le")}}()),J}var re,ne={exports:{}};function se(){if(re)return ne.exports;var e;function t(e){this.rand=e}if(re=1,ne.exports=function(a){return e||(e=new t(null)),e.generate(a)},ne.exports.Rand=t,t.prototype.generate=function(e){return this._rand(e)},t.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),a=0;a<t.length;a++)t[a]=this.rand.getByte();return t},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?t.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?t.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:"object"==typeof window&&(t.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var a=require("crypto");if("function"!=typeof a.randomBytes)throw new Error("Not supported");t.prototype._rand=function(e){return a.randomBytes(e)}}catch(e){}return ne.exports}var oe,le,me={};function ce(){if(le)return oe;le=1;var e=Q(),t=pe(),a=t.getNAF,d=t.getJSF,i=t.assert;function p(t,a){this.type=t,this.p=new e(a.p,16),this.red=a.prime?e.red(a.prime):e.mont(this.p),this.zero=new e(0).toRed(this.red),this.one=new e(1).toRed(this.red),this.two=new e(2).toRed(this.red),this.n=a.n&&new e(a.n,16),this.g=a.g&&this.pointFromJSON(a.g,a.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var d=this.n&&this.p.div(this.n);!d||d.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function r(e,t){this.curve=e,this.type=t,this.precomputed=null}return oe=p,p.prototype.point=function(){throw new Error("Not implemented")},p.prototype.validate=function(){throw new Error("Not implemented")},p.prototype._fixedNafMul=function(e,t){i(e.precomputed);var d=e._getDoubles(),p=a(t,1,this._bitLength),r=(1<<d.step+1)-(d.step%2==0?2:1);r/=3;var n,s,o=[];for(n=0;n<p.length;n+=d.step){s=0;for(var l=n+d.step-1;l>=n;l--)s=(s<<1)+p[l];o.push(s)}for(var m=this.jpoint(null,null,null),c=this.jpoint(null,null,null),u=r;u>0;u--){for(n=0;n<o.length;n++)(s=o[n])===u?c=c.mixedAdd(d.points[n]):s===-u&&(c=c.mixedAdd(d.points[n].neg()));m=m.add(c)}return m.toP()},p.prototype._wnafMul=function(e,t){var d=4,p=e._getNAFPoints(d);d=p.wnd;for(var r=p.points,n=a(t,d,this._bitLength),s=this.jpoint(null,null,null),o=n.length-1;o>=0;o--){for(var l=0;o>=0&&0===n[o];o--)l++;if(o>=0&&l++,s=s.dblp(l),o<0)break;var m=n[o];i(0!==m),s="affine"===e.type?m>0?s.mixedAdd(r[m-1>>1]):s.mixedAdd(r[-m-1>>1].neg()):m>0?s.add(r[m-1>>1]):s.add(r[-m-1>>1].neg())}return"affine"===e.type?s.toP():s},p.prototype._wnafMulAdd=function(e,t,i,p,r){var n,s,o,l=this._wnafT1,m=this._wnafT2,c=this._wnafT3,u=0;for(n=0;n<p;n++){var h=(o=t[n])._getNAFPoints(e);l[n]=h.wnd,m[n]=h.points}for(n=p-1;n>=1;n-=2){var f=n-1,v=n;if(1===l[f]&&1===l[v]){var b=[t[f],null,null,t[v]];0===t[f].y.cmp(t[v].y)?(b[1]=t[f].add(t[v]),b[2]=t[f].toJ().mixedAdd(t[v].neg())):0===t[f].y.cmp(t[v].y.redNeg())?(b[1]=t[f].toJ().mixedAdd(t[v]),b[2]=t[f].add(t[v].neg())):(b[1]=t[f].toJ().mixedAdd(t[v]),b[2]=t[f].toJ().mixedAdd(t[v].neg()));var g=[-3,-1,-5,-7,0,7,5,1,3],y=d(i[f],i[v]);for(u=Math.max(y[0].length,u),c[f]=new Array(u),c[v]=new Array(u),s=0;s<u;s++){var w=0|y[0][s],_=0|y[1][s];c[f][s]=g[3*(w+1)+(_+1)],c[v][s]=0,m[f]=b}}else c[f]=a(i[f],l[f],this._bitLength),c[v]=a(i[v],l[v],this._bitLength),u=Math.max(c[f].length,u),u=Math.max(c[v].length,u)}var S=this.jpoint(null,null,null),E=this._wnafT4;for(n=u;n>=0;n--){for(var N=0;n>=0;){var T=!0;for(s=0;s<p;s++)E[s]=0|c[s][n],0!==E[s]&&(T=!1);if(!T)break;N++,n--}if(n>=0&&N++,S=S.dblp(N),n<0)break;for(s=0;s<p;s++){var k=E[s];0!==k&&(k>0?o=m[s][k-1>>1]:k<0&&(o=m[s][-k-1>>1].neg()),S="affine"===o.type?S.mixedAdd(o):S.add(o))}}for(n=0;n<p;n++)m[n]=null;return r?S:S.toP()},p.BasePoint=r,r.prototype.eq=function(){throw new Error("Not implemented")},r.prototype.validate=function(){return this.curve.validate(this)},p.prototype.decodePoint=function(e,a){e=t.toArray(e,a);var d=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*d)return 6===e[0]?i(e[e.length-1]%2==0):7===e[0]&&i(e[e.length-1]%2==1),this.point(e.slice(1,1+d),e.slice(1+d,1+2*d));if((2===e[0]||3===e[0])&&e.length-1===d)return this.pointFromX(e.slice(1,1+d),3===e[0]);throw new Error("Unknown point format")},r.prototype.encodeCompressed=function(e){return this.encode(e,!0)},r.prototype._encode=function(e){var t=this.curve.p.byteLength(),a=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(a):[4].concat(a,this.getY().toArray("be",t))},r.prototype.encode=function(e,a){return t.encode(this._encode(a),e)},r.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},r.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},r.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var a=[this],d=this,i=0;i<t;i+=e){for(var p=0;p<e;p++)d=d.dbl();a.push(d)}return{step:e,points:a}},r.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],a=(1<<e)-1,d=1===a?null:this.dbl(),i=1;i<a;i++)t[i]=t[i-1].add(d);return{wnd:e,points:t}},r.prototype._getBeta=function(){return null},r.prototype.dblp=function(e){for(var t=this,a=0;a<e;a++)t=t.dbl();return t},oe}var ue,he,fe,ve,be,ge,ye,we,_e,Se={exports:{}},Ee={exports:{}};function Ne(){if(he)return Se.exports;he=1;try{var e=require("util");if("function"!=typeof e.inherits)throw"";Se.exports=e.inherits}catch(e){Se.exports=(ue||(ue=1,"function"==typeof Object.create?Ee.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:Ee.exports=function(e,t){if(t){e.super_=t;var a=function(){};a.prototype=t.prototype,e.prototype=new a,e.prototype.constructor=e}}),Ee.exports)}return Se.exports}function Te(){return _e||(_e=1,function(e){var t=e;t.base=ce(),t.short=function(){if(ve)return fe;ve=1;var e=pe(),t=Q(),a=Ne(),d=ce(),i=e.assert;function p(e){d.call(this,"short",e),this.a=new t(e.a,16).toRed(this.red),this.b=new t(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function r(e,a,i,p){d.BasePoint.call(this,e,"affine"),null===a&&null===i?(this.x=null,this.y=null,this.inf=!0):(this.x=new t(a,16),this.y=new t(i,16),p&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function n(e,a,i,p){d.BasePoint.call(this,e,"jacobian"),null===a&&null===i&&null===p?(this.x=this.curve.one,this.y=this.curve.one,this.z=new t(0)):(this.x=new t(a,16),this.y=new t(i,16),this.z=new t(p,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}return a(p,d),fe=p,p.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var a,d;if(e.beta)a=new t(e.beta,16).toRed(this.red);else{var p=this._getEndoRoots(this.p);a=(a=p[0].cmp(p[1])<0?p[0]:p[1]).toRed(this.red)}if(e.lambda)d=new t(e.lambda,16);else{var r=this._getEndoRoots(this.n);0===this.g.mul(r[0]).x.cmp(this.g.x.redMul(a))?d=r[0]:(d=r[1],i(0===this.g.mul(d).x.cmp(this.g.x.redMul(a))))}return{beta:a,lambda:d,basis:e.basis?e.basis.map((function(e){return{a:new t(e.a,16),b:new t(e.b,16)}})):this._getEndoBasis(d)}}},p.prototype._getEndoRoots=function(e){var a=e===this.p?this.red:t.mont(e),d=new t(2).toRed(a).redInvm(),i=d.redNeg(),p=new t(3).toRed(a).redNeg().redSqrt().redMul(d);return[i.redAdd(p).fromRed(),i.redSub(p).fromRed()]},p.prototype._getEndoBasis=function(e){for(var a,d,i,p,r,n,s,o,l,m=this.n.ushrn(Math.floor(this.n.bitLength()/2)),c=e,u=this.n.clone(),h=new t(1),f=new t(0),v=new t(0),b=new t(1),g=0;0!==c.cmpn(0);){var y=u.div(c);o=u.sub(y.mul(c)),l=v.sub(y.mul(h));var w=b.sub(y.mul(f));if(!i&&o.cmp(m)<0)a=s.neg(),d=h,i=o.neg(),p=l;else if(i&&2==++g)break;s=o,u=c,c=o,v=h,h=l,b=f,f=w}r=o.neg(),n=l;var _=i.sqr().add(p.sqr());return r.sqr().add(n.sqr()).cmp(_)>=0&&(r=a,n=d),i.negative&&(i=i.neg(),p=p.neg()),r.negative&&(r=r.neg(),n=n.neg()),[{a:i,b:p},{a:r,b:n}]},p.prototype._endoSplit=function(e){var t=this.endo.basis,a=t[0],d=t[1],i=d.b.mul(e).divRound(this.n),p=a.b.neg().mul(e).divRound(this.n),r=i.mul(a.a),n=p.mul(d.a),s=i.mul(a.b),o=p.mul(d.b);return{k1:e.sub(r).sub(n),k2:s.add(o).neg()}},p.prototype.pointFromX=function(e,a){(e=new t(e,16)).red||(e=e.toRed(this.red));var d=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),i=d.redSqrt();if(0!==i.redSqr().redSub(d).cmp(this.zero))throw new Error("invalid point");var p=i.fromRed().isOdd();return(a&&!p||!a&&p)&&(i=i.redNeg()),this.point(e,i)},p.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,a=e.y,d=this.a.redMul(t),i=t.redSqr().redMul(t).redIAdd(d).redIAdd(this.b);return 0===a.redSqr().redISub(i).cmpn(0)},p.prototype._endoWnafMulAdd=function(e,t,a){for(var d=this._endoWnafT1,i=this._endoWnafT2,p=0;p<e.length;p++){var r=this._endoSplit(t[p]),n=e[p],s=n._getBeta();r.k1.negative&&(r.k1.ineg(),n=n.neg(!0)),r.k2.negative&&(r.k2.ineg(),s=s.neg(!0)),d[2*p]=n,d[2*p+1]=s,i[2*p]=r.k1,i[2*p+1]=r.k2}for(var o=this._wnafMulAdd(1,d,i,2*p,a),l=0;l<2*p;l++)d[l]=null,i[l]=null;return o},a(r,d.BasePoint),p.prototype.point=function(e,t,a){return new r(this,e,t,a)},p.prototype.pointFromJSON=function(e,t){return r.fromJSON(this,e,t)},r.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var a=this.curve,d=function(e){return a.point(e.x.redMul(a.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(d)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(d)}}}return t}},r.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},r.fromJSON=function(e,t,a){"string"==typeof t&&(t=JSON.parse(t));var d=e.point(t[0],t[1],a);if(!t[2])return d;function i(t){return e.point(t[0],t[1],a)}var p=t[2];return d.precomputed={beta:null,doubles:p.doubles&&{step:p.doubles.step,points:[d].concat(p.doubles.points.map(i))},naf:p.naf&&{wnd:p.naf.wnd,points:[d].concat(p.naf.points.map(i))}},d},r.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},r.prototype.isInfinity=function(){return this.inf},r.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var a=t.redSqr().redISub(this.x).redISub(e.x),d=t.redMul(this.x.redSub(a)).redISub(this.y);return this.curve.point(a,d)},r.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,a=this.x.redSqr(),d=e.redInvm(),i=a.redAdd(a).redIAdd(a).redIAdd(t).redMul(d),p=i.redSqr().redISub(this.x.redAdd(this.x)),r=i.redMul(this.x.redSub(p)).redISub(this.y);return this.curve.point(p,r)},r.prototype.getX=function(){return this.x.fromRed()},r.prototype.getY=function(){return this.y.fromRed()},r.prototype.mul=function(e){return e=new t(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},r.prototype.mulAdd=function(e,t,a){var d=[this,t],i=[e,a];return this.curve.endo?this.curve._endoWnafMulAdd(d,i):this.curve._wnafMulAdd(1,d,i,2)},r.prototype.jmulAdd=function(e,t,a){var d=[this,t],i=[e,a];return this.curve.endo?this.curve._endoWnafMulAdd(d,i,!0):this.curve._wnafMulAdd(1,d,i,2,!0)},r.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},r.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var a=this.precomputed,d=function(e){return e.neg()};t.precomputed={naf:a.naf&&{wnd:a.naf.wnd,points:a.naf.points.map(d)},doubles:a.doubles&&{step:a.doubles.step,points:a.doubles.points.map(d)}}}return t},r.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},a(n,d.BasePoint),p.prototype.jpoint=function(e,t,a){return new n(this,e,t,a)},n.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),a=this.x.redMul(t),d=this.y.redMul(t).redMul(e);return this.curve.point(a,d)},n.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},n.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),a=this.z.redSqr(),d=this.x.redMul(t),i=e.x.redMul(a),p=this.y.redMul(t.redMul(e.z)),r=e.y.redMul(a.redMul(this.z)),n=d.redSub(i),s=p.redSub(r);if(0===n.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var o=n.redSqr(),l=o.redMul(n),m=d.redMul(o),c=s.redSqr().redIAdd(l).redISub(m).redISub(m),u=s.redMul(m.redISub(c)).redISub(p.redMul(l)),h=this.z.redMul(e.z).redMul(n);return this.curve.jpoint(c,u,h)},n.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),a=this.x,d=e.x.redMul(t),i=this.y,p=e.y.redMul(t).redMul(this.z),r=a.redSub(d),n=i.redSub(p);if(0===r.cmpn(0))return 0!==n.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var s=r.redSqr(),o=s.redMul(r),l=a.redMul(s),m=n.redSqr().redIAdd(o).redISub(l).redISub(l),c=n.redMul(l.redISub(m)).redISub(i.redMul(o)),u=this.z.redMul(r);return this.curve.jpoint(m,c,u)},n.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var a=this;for(t=0;t<e;t++)a=a.dbl();return a}var d=this.curve.a,i=this.curve.tinv,p=this.x,r=this.y,n=this.z,s=n.redSqr().redSqr(),o=r.redAdd(r);for(t=0;t<e;t++){var l=p.redSqr(),m=o.redSqr(),c=m.redSqr(),u=l.redAdd(l).redIAdd(l).redIAdd(d.redMul(s)),h=p.redMul(m),f=u.redSqr().redISub(h.redAdd(h)),v=h.redISub(f),b=u.redMul(v);b=b.redIAdd(b).redISub(c);var g=o.redMul(n);t+1<e&&(s=s.redMul(c)),p=f,n=g,o=b}return this.curve.jpoint(p,o.redMul(i),n)},n.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},n.prototype._zeroDbl=function(){var e,t,a;if(this.zOne){var d=this.x.redSqr(),i=this.y.redSqr(),p=i.redSqr(),r=this.x.redAdd(i).redSqr().redISub(d).redISub(p);r=r.redIAdd(r);var n=d.redAdd(d).redIAdd(d),s=n.redSqr().redISub(r).redISub(r),o=p.redIAdd(p);o=(o=o.redIAdd(o)).redIAdd(o),e=s,t=n.redMul(r.redISub(s)).redISub(o),a=this.y.redAdd(this.y)}else{var l=this.x.redSqr(),m=this.y.redSqr(),c=m.redSqr(),u=this.x.redAdd(m).redSqr().redISub(l).redISub(c);u=u.redIAdd(u);var h=l.redAdd(l).redIAdd(l),f=h.redSqr(),v=c.redIAdd(c);v=(v=v.redIAdd(v)).redIAdd(v),e=f.redISub(u).redISub(u),t=h.redMul(u.redISub(e)).redISub(v),a=(a=this.y.redMul(this.z)).redIAdd(a)}return this.curve.jpoint(e,t,a)},n.prototype._threeDbl=function(){var e,t,a;if(this.zOne){var d=this.x.redSqr(),i=this.y.redSqr(),p=i.redSqr(),r=this.x.redAdd(i).redSqr().redISub(d).redISub(p);r=r.redIAdd(r);var n=d.redAdd(d).redIAdd(d).redIAdd(this.curve.a),s=n.redSqr().redISub(r).redISub(r);e=s;var o=p.redIAdd(p);o=(o=o.redIAdd(o)).redIAdd(o),t=n.redMul(r.redISub(s)).redISub(o),a=this.y.redAdd(this.y)}else{var l=this.z.redSqr(),m=this.y.redSqr(),c=this.x.redMul(m),u=this.x.redSub(l).redMul(this.x.redAdd(l));u=u.redAdd(u).redIAdd(u);var h=c.redIAdd(c),f=(h=h.redIAdd(h)).redAdd(h);e=u.redSqr().redISub(f),a=this.y.redAdd(this.z).redSqr().redISub(m).redISub(l);var v=m.redSqr();v=(v=(v=v.redIAdd(v)).redIAdd(v)).redIAdd(v),t=u.redMul(h.redISub(e)).redISub(v)}return this.curve.jpoint(e,t,a)},n.prototype._dbl=function(){var e=this.curve.a,t=this.x,a=this.y,d=this.z,i=d.redSqr().redSqr(),p=t.redSqr(),r=a.redSqr(),n=p.redAdd(p).redIAdd(p).redIAdd(e.redMul(i)),s=t.redAdd(t),o=(s=s.redIAdd(s)).redMul(r),l=n.redSqr().redISub(o.redAdd(o)),m=o.redISub(l),c=r.redSqr();c=(c=(c=c.redIAdd(c)).redIAdd(c)).redIAdd(c);var u=n.redMul(m).redISub(c),h=a.redAdd(a).redMul(d);return this.curve.jpoint(l,u,h)},n.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),a=this.z.redSqr(),d=t.redSqr(),i=e.redAdd(e).redIAdd(e),p=i.redSqr(),r=this.x.redAdd(t).redSqr().redISub(e).redISub(d),n=(r=(r=(r=r.redIAdd(r)).redAdd(r).redIAdd(r)).redISub(p)).redSqr(),s=d.redIAdd(d);s=(s=(s=s.redIAdd(s)).redIAdd(s)).redIAdd(s);var o=i.redIAdd(r).redSqr().redISub(p).redISub(n).redISub(s),l=t.redMul(o);l=(l=l.redIAdd(l)).redIAdd(l);var m=this.x.redMul(n).redISub(l);m=(m=m.redIAdd(m)).redIAdd(m);var c=this.y.redMul(o.redMul(s.redISub(o)).redISub(r.redMul(n)));c=(c=(c=c.redIAdd(c)).redIAdd(c)).redIAdd(c);var u=this.z.redAdd(r).redSqr().redISub(a).redISub(n);return this.curve.jpoint(m,c,u)},n.prototype.mul=function(e,a){return e=new t(e,a),this.curve._wnafMul(this,e)},n.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),a=e.z.redSqr();if(0!==this.x.redMul(a).redISub(e.x.redMul(t)).cmpn(0))return!1;var d=t.redMul(this.z),i=a.redMul(e.z);return 0===this.y.redMul(i).redISub(e.y.redMul(d)).cmpn(0)},n.prototype.eqXToP=function(e){var t=this.z.redSqr(),a=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(a))return!0;for(var d=e.clone(),i=this.curve.redN.redMul(t);;){if(d.iadd(this.curve.n),d.cmp(this.curve.p)>=0)return!1;if(a.redIAdd(i),0===this.x.cmp(a))return!0}},n.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},n.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},fe}(),t.mont=function(){if(ge)return be;ge=1;var e=Q(),t=Ne(),a=ce(),d=pe();function i(t){a.call(this,"mont",t),this.a=new e(t.a,16).toRed(this.red),this.b=new e(t.b,16).toRed(this.red),this.i4=new e(4).toRed(this.red).redInvm(),this.two=new e(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function p(t,d,i){a.BasePoint.call(this,t,"projective"),null===d&&null===i?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new e(d,16),this.z=new e(i,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}return t(i,a),be=i,i.prototype.validate=function(e){var t=e.normalize().x,a=t.redSqr(),d=a.redMul(t).redAdd(a.redMul(this.a)).redAdd(t);return 0===d.redSqrt().redSqr().cmp(d)},t(p,a.BasePoint),i.prototype.decodePoint=function(e,t){return this.point(d.toArray(e,t),1)},i.prototype.point=function(e,t){return new p(this,e,t)},i.prototype.pointFromJSON=function(e){return p.fromJSON(this,e)},p.prototype.precompute=function(){},p.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},p.fromJSON=function(e,t){return new p(e,t[0],t[1]||e.one)},p.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},p.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},p.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),t=this.x.redSub(this.z).redSqr(),a=e.redSub(t),d=e.redMul(t),i=a.redMul(t.redAdd(this.curve.a24.redMul(a)));return this.curve.point(d,i)},p.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},p.prototype.diffAdd=function(e,t){var a=this.x.redAdd(this.z),d=this.x.redSub(this.z),i=e.x.redAdd(e.z),p=e.x.redSub(e.z).redMul(a),r=i.redMul(d),n=t.z.redMul(p.redAdd(r).redSqr()),s=t.x.redMul(p.redISub(r).redSqr());return this.curve.point(n,s)},p.prototype.mul=function(e){for(var t=e.clone(),a=this,d=this.curve.point(null,null),i=[];0!==t.cmpn(0);t.iushrn(1))i.push(t.andln(1));for(var p=i.length-1;p>=0;p--)0===i[p]?(a=a.diffAdd(d,this),d=d.dbl()):(d=a.diffAdd(d,this),a=a.dbl());return d},p.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},p.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},p.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},p.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},p.prototype.getX=function(){return this.normalize(),this.x.fromRed()},be}(),t.edwards=function(){if(we)return ye;we=1;var e=pe(),t=Q(),a=Ne(),d=ce(),i=e.assert;function p(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,d.call(this,"edwards",e),this.a=new t(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new t(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new t(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),i(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}function r(e,a,i,p,r){d.BasePoint.call(this,e,"projective"),null===a&&null===i&&null===p?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new t(a,16),this.y=new t(i,16),this.z=p?new t(p,16):this.curve.one,this.t=r&&new t(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}return a(p,d),ye=p,p.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},p.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},p.prototype.jpoint=function(e,t,a,d){return this.point(e,t,a,d)},p.prototype.pointFromX=function(e,a){(e=new t(e,16)).red||(e=e.toRed(this.red));var d=e.redSqr(),i=this.c2.redSub(this.a.redMul(d)),p=this.one.redSub(this.c2.redMul(this.d).redMul(d)),r=i.redMul(p.redInvm()),n=r.redSqrt();if(0!==n.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var s=n.fromRed().isOdd();return(a&&!s||!a&&s)&&(n=n.redNeg()),this.point(e,n)},p.prototype.pointFromY=function(e,a){(e=new t(e,16)).red||(e=e.toRed(this.red));var d=e.redSqr(),i=d.redSub(this.c2),p=d.redMul(this.d).redMul(this.c2).redSub(this.a),r=i.redMul(p.redInvm());if(0===r.cmp(this.zero)){if(a)throw new Error("invalid point");return this.point(this.zero,e)}var n=r.redSqrt();if(0!==n.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");return n.fromRed().isOdd()!==a&&(n=n.redNeg()),this.point(n,e)},p.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),a=e.y.redSqr(),d=t.redMul(this.a).redAdd(a),i=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(a)));return 0===d.cmp(i)},a(r,d.BasePoint),p.prototype.pointFromJSON=function(e){return r.fromJSON(this,e)},p.prototype.point=function(e,t,a,d){return new r(this,e,t,a,d)},r.fromJSON=function(e,t){return new r(e,t[0],t[1],t[2])},r.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},r.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},r.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),a=this.z.redSqr();a=a.redIAdd(a);var d=this.curve._mulA(e),i=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),p=d.redAdd(t),r=p.redSub(a),n=d.redSub(t),s=i.redMul(r),o=p.redMul(n),l=i.redMul(n),m=r.redMul(p);return this.curve.point(s,o,m,l)},r.prototype._projDbl=function(){var e,t,a,d,i,p,r=this.x.redAdd(this.y).redSqr(),n=this.x.redSqr(),s=this.y.redSqr();if(this.curve.twisted){var o=(d=this.curve._mulA(n)).redAdd(s);this.zOne?(e=r.redSub(n).redSub(s).redMul(o.redSub(this.curve.two)),t=o.redMul(d.redSub(s)),a=o.redSqr().redSub(o).redSub(o)):(i=this.z.redSqr(),p=o.redSub(i).redISub(i),e=r.redSub(n).redISub(s).redMul(p),t=o.redMul(d.redSub(s)),a=o.redMul(p))}else d=n.redAdd(s),i=this.curve._mulC(this.z).redSqr(),p=d.redSub(i).redSub(i),e=this.curve._mulC(r.redISub(d)).redMul(p),t=this.curve._mulC(d).redMul(n.redISub(s)),a=d.redMul(p);return this.curve.point(e,t,a)},r.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},r.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),a=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),d=this.t.redMul(this.curve.dd).redMul(e.t),i=this.z.redMul(e.z.redAdd(e.z)),p=a.redSub(t),r=i.redSub(d),n=i.redAdd(d),s=a.redAdd(t),o=p.redMul(r),l=n.redMul(s),m=p.redMul(s),c=r.redMul(n);return this.curve.point(o,l,c,m)},r.prototype._projAdd=function(e){var t,a,d=this.z.redMul(e.z),i=d.redSqr(),p=this.x.redMul(e.x),r=this.y.redMul(e.y),n=this.curve.d.redMul(p).redMul(r),s=i.redSub(n),o=i.redAdd(n),l=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(p).redISub(r),m=d.redMul(s).redMul(l);return this.curve.twisted?(t=d.redMul(o).redMul(r.redSub(this.curve._mulA(p))),a=s.redMul(o)):(t=d.redMul(o).redMul(r.redSub(p)),a=this.curve._mulC(s).redMul(o)),this.curve.point(m,t,a)},r.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},r.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},r.prototype.mulAdd=function(e,t,a){return this.curve._wnafMulAdd(1,[this,t],[e,a],2,!1)},r.prototype.jmulAdd=function(e,t,a){return this.curve._wnafMulAdd(1,[this,t],[e,a],2,!0)},r.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},r.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},r.prototype.getX=function(){return this.normalize(),this.x.fromRed()},r.prototype.getY=function(){return this.normalize(),this.y.fromRed()},r.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},r.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var a=e.clone(),d=this.curve.redN.redMul(this.z);;){if(a.iadd(this.curve.n),a.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(d),0===this.x.cmp(t))return!0}},r.prototype.toP=r.prototype.normalize,r.prototype.mixedAdd=r.prototype.add,ye}()}(me)),me}var ke,Ae={},xe={},Ce={};function Me(){if(ke)return Ce;ke=1;var e=ee(),t=Ne();function a(e,t){return 55296==(64512&e.charCodeAt(t))&&(!(t<0||t+1>=e.length)&&56320==(64512&e.charCodeAt(t+1)))}function d(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function i(e){return 1===e.length?"0"+e:e}function p(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}return Ce.inherits=t,Ce.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var d=[];if("string"==typeof e)if(t){if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),p=0;p<e.length;p+=2)d.push(parseInt(e[p]+e[p+1],16))}else for(var i=0,p=0;p<e.length;p++){var r=e.charCodeAt(p);r<128?d[i++]=r:r<2048?(d[i++]=r>>6|192,d[i++]=63&r|128):a(e,p)?(r=65536+((1023&r)<<10)+(1023&e.charCodeAt(++p)),d[i++]=r>>18|240,d[i++]=r>>12&63|128,d[i++]=r>>6&63|128,d[i++]=63&r|128):(d[i++]=r>>12|224,d[i++]=r>>6&63|128,d[i++]=63&r|128)}else for(p=0;p<e.length;p++)d[p]=0|e[p];return d},Ce.toHex=function(e){for(var t="",a=0;a<e.length;a++)t+=i(e[a].toString(16));return t},Ce.htonl=d,Ce.toHex32=function(e,t){for(var a="",i=0;i<e.length;i++){var r=e[i];"little"===t&&(r=d(r)),a+=p(r.toString(16))}return a},Ce.zero2=i,Ce.zero8=p,Ce.join32=function(t,a,d,i){var p=d-a;e(p%4==0);for(var r=new Array(p/4),n=0,s=a;n<r.length;n++,s+=4){var o;o="big"===i?t[s]<<24|t[s+1]<<16|t[s+2]<<8|t[s+3]:t[s+3]<<24|t[s+2]<<16|t[s+1]<<8|t[s],r[n]=o>>>0}return r},Ce.split32=function(e,t){for(var a=new Array(4*e.length),d=0,i=0;d<e.length;d++,i+=4){var p=e[d];"big"===t?(a[i]=p>>>24,a[i+1]=p>>>16&255,a[i+2]=p>>>8&255,a[i+3]=255&p):(a[i+3]=p>>>24,a[i+2]=p>>>16&255,a[i+1]=p>>>8&255,a[i]=255&p)}return a},Ce.rotr32=function(e,t){return e>>>t|e<<32-t},Ce.rotl32=function(e,t){return e<<t|e>>>32-t},Ce.sum32=function(e,t){return e+t>>>0},Ce.sum32_3=function(e,t,a){return e+t+a>>>0},Ce.sum32_4=function(e,t,a,d){return e+t+a+d>>>0},Ce.sum32_5=function(e,t,a,d,i){return e+t+a+d+i>>>0},Ce.sum64=function(e,t,a,d){var i=e[t],p=d+e[t+1]>>>0,r=(p<d?1:0)+a+i;e[t]=r>>>0,e[t+1]=p},Ce.sum64_hi=function(e,t,a,d){return(t+d>>>0<t?1:0)+e+a>>>0},Ce.sum64_lo=function(e,t,a,d){return t+d>>>0},Ce.sum64_4_hi=function(e,t,a,d,i,p,r,n){var s=0,o=t;return s+=(o=o+d>>>0)<t?1:0,s+=(o=o+p>>>0)<p?1:0,e+a+i+r+(s+=(o=o+n>>>0)<n?1:0)>>>0},Ce.sum64_4_lo=function(e,t,a,d,i,p,r,n){return t+d+p+n>>>0},Ce.sum64_5_hi=function(e,t,a,d,i,p,r,n,s,o){var l=0,m=t;return l+=(m=m+d>>>0)<t?1:0,l+=(m=m+p>>>0)<p?1:0,l+=(m=m+n>>>0)<n?1:0,e+a+i+r+s+(l+=(m=m+o>>>0)<o?1:0)>>>0},Ce.sum64_5_lo=function(e,t,a,d,i,p,r,n,s,o){return t+d+p+n+o>>>0},Ce.rotr64_hi=function(e,t,a){return(t<<32-a|e>>>a)>>>0},Ce.rotr64_lo=function(e,t,a){return(e<<32-a|t>>>a)>>>0},Ce.shr64_hi=function(e,t,a){return e>>>a},Ce.shr64_lo=function(e,t,a){return(e<<32-a|t>>>a)>>>0},Ce}var De,Oe={};function Ie(){if(De)return Oe;De=1;var e=Me(),t=ee();function a(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}return Oe.BlockHash=a,a.prototype.update=function(t,a){if(t=e.toArray(t,a),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){var d=(t=this.pending).length%this._delta8;this.pending=t.slice(t.length-d,t.length),0===this.pending.length&&(this.pending=null),t=e.join32(t,0,t.length-d,this.endian);for(var i=0;i<t.length;i+=this._delta32)this._update(t,i,i+this._delta32)}return this},a.prototype.digest=function(e){return this.update(this._pad()),t(null===this.pending),this._digest(e)},a.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,a=t-(e+this.padLength)%t,d=new Array(a+this.padLength);d[0]=128;for(var i=1;i<a;i++)d[i]=0;if(e<<=3,"big"===this.endian){for(var p=8;p<this.padLength;p++)d[i++]=0;d[i++]=0,d[i++]=0,d[i++]=0,d[i++]=0,d[i++]=e>>>24&255,d[i++]=e>>>16&255,d[i++]=e>>>8&255,d[i++]=255&e}else for(d[i++]=255&e,d[i++]=e>>>8&255,d[i++]=e>>>16&255,d[i++]=e>>>24&255,d[i++]=0,d[i++]=0,d[i++]=0,d[i++]=0,p=8;p<this.padLength;p++)d[i++]=0;return d},Oe}var Ve,Re,Le,Pe,Be,Fe,je,Ke,Ue,qe,ze,$e,He={},Ye={};function We(){if(Ve)return Ye;Ve=1;var e=Me().rotr32;function t(e,t,a){return e&t^~e&a}function a(e,t,a){return e&t^e&a^t&a}function d(e,t,a){return e^t^a}return Ye.ft_1=function(e,i,p,r){return 0===e?t(i,p,r):1===e||3===e?d(i,p,r):2===e?a(i,p,r):void 0},Ye.ch32=t,Ye.maj32=a,Ye.p32=d,Ye.s0_256=function(t){return e(t,2)^e(t,13)^e(t,22)},Ye.s1_256=function(t){return e(t,6)^e(t,11)^e(t,25)},Ye.g0_256=function(t){return e(t,7)^e(t,18)^t>>>3},Ye.g1_256=function(t){return e(t,17)^e(t,19)^t>>>10},Ye}function Ge(){if(Be)return Pe;Be=1;var e=Me(),t=Ie(),a=We(),d=ee(),i=e.sum32,p=e.sum32_4,r=e.sum32_5,n=a.ch32,s=a.maj32,o=a.s0_256,l=a.s1_256,m=a.g0_256,c=a.g1_256,u=t.BlockHash,h=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function f(){if(!(this instanceof f))return new f;u.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=h,this.W=new Array(64)}return e.inherits(f,u),Pe=f,f.blockSize=512,f.outSize=256,f.hmacStrength=192,f.padLength=64,f.prototype._update=function(e,t){for(var a=this.W,u=0;u<16;u++)a[u]=e[t+u];for(;u<a.length;u++)a[u]=p(c(a[u-2]),a[u-7],m(a[u-15]),a[u-16]);var h=this.h[0],f=this.h[1],v=this.h[2],b=this.h[3],g=this.h[4],y=this.h[5],w=this.h[6],_=this.h[7];for(d(this.k.length===a.length),u=0;u<a.length;u++){var S=r(_,l(g),n(g,y,w),this.k[u],a[u]),E=i(o(h),s(h,f,v));_=w,w=y,y=g,g=i(b,S),b=v,v=f,f=h,h=i(S,E)}this.h[0]=i(this.h[0],h),this.h[1]=i(this.h[1],f),this.h[2]=i(this.h[2],v),this.h[3]=i(this.h[3],b),this.h[4]=i(this.h[4],g),this.h[5]=i(this.h[5],y),this.h[6]=i(this.h[6],w),this.h[7]=i(this.h[7],_)},f.prototype._digest=function(t){return"hex"===t?e.toHex32(this.h,"big"):e.split32(this.h,"big")},Pe}function Ze(){if(Ue)return Ke;Ue=1;var e=Me(),t=Ie(),a=ee(),d=e.rotr64_hi,i=e.rotr64_lo,p=e.shr64_hi,r=e.shr64_lo,n=e.sum64,s=e.sum64_hi,o=e.sum64_lo,l=e.sum64_4_hi,m=e.sum64_4_lo,c=e.sum64_5_hi,u=e.sum64_5_lo,h=t.BlockHash,f=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function v(){if(!(this instanceof v))return new v;h.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=f,this.W=new Array(160)}function b(e,t,a,d,i){var p=e&a^~e&i;return p<0&&(p+=4294967296),p}function g(e,t,a,d,i,p){var r=t&d^~t&p;return r<0&&(r+=4294967296),r}function y(e,t,a,d,i){var p=e&a^e&i^a&i;return p<0&&(p+=4294967296),p}function w(e,t,a,d,i,p){var r=t&d^t&p^d&p;return r<0&&(r+=4294967296),r}function _(e,t){var a=d(e,t,28)^d(t,e,2)^d(t,e,7);return a<0&&(a+=4294967296),a}function S(e,t){var a=i(e,t,28)^i(t,e,2)^i(t,e,7);return a<0&&(a+=4294967296),a}function E(e,t){var a=d(e,t,14)^d(e,t,18)^d(t,e,9);return a<0&&(a+=4294967296),a}function N(e,t){var a=i(e,t,14)^i(e,t,18)^i(t,e,9);return a<0&&(a+=4294967296),a}function T(e,t){var a=d(e,t,1)^d(e,t,8)^p(e,t,7);return a<0&&(a+=4294967296),a}function k(e,t){var a=i(e,t,1)^i(e,t,8)^r(e,t,7);return a<0&&(a+=4294967296),a}function A(e,t){var a=d(e,t,19)^d(t,e,29)^p(e,t,6);return a<0&&(a+=4294967296),a}function x(e,t){var a=i(e,t,19)^i(t,e,29)^r(e,t,6);return a<0&&(a+=4294967296),a}return e.inherits(v,h),Ke=v,v.blockSize=1024,v.outSize=512,v.hmacStrength=192,v.padLength=128,v.prototype._prepareBlock=function(e,t){for(var a=this.W,d=0;d<32;d++)a[d]=e[t+d];for(;d<a.length;d+=2){var i=A(a[d-4],a[d-3]),p=x(a[d-4],a[d-3]),r=a[d-14],n=a[d-13],s=T(a[d-30],a[d-29]),o=k(a[d-30],a[d-29]),c=a[d-32],u=a[d-31];a[d]=l(i,p,r,n,s,o,c,u),a[d+1]=m(i,p,r,n,s,o,c,u)}},v.prototype._update=function(e,t){this._prepareBlock(e,t);var d=this.W,i=this.h[0],p=this.h[1],r=this.h[2],l=this.h[3],m=this.h[4],h=this.h[5],f=this.h[6],v=this.h[7],T=this.h[8],k=this.h[9],A=this.h[10],x=this.h[11],C=this.h[12],M=this.h[13],D=this.h[14],O=this.h[15];a(this.k.length===d.length);for(var I=0;I<d.length;I+=2){var V=D,R=O,L=E(T,k),P=N(T,k),B=b(T,k,A,x,C),F=g(T,k,A,x,C,M),j=this.k[I],K=this.k[I+1],U=d[I],q=d[I+1],z=c(V,R,L,P,B,F,j,K,U,q),$=u(V,R,L,P,B,F,j,K,U,q);V=_(i,p),R=S(i,p),L=y(i,p,r,l,m),P=w(i,p,r,l,m,h);var H=s(V,R,L,P),Y=o(V,R,L,P);D=C,O=M,C=A,M=x,A=T,x=k,T=s(f,v,z,$),k=o(v,v,z,$),f=m,v=h,m=r,h=l,r=i,l=p,i=s(z,$,H,Y),p=o(z,$,H,Y)}n(this.h,0,i,p),n(this.h,2,r,l),n(this.h,4,m,h),n(this.h,6,f,v),n(this.h,8,T,k),n(this.h,10,A,x),n(this.h,12,C,M),n(this.h,14,D,O)},v.prototype._digest=function(t){return"hex"===t?e.toHex32(this.h,"big"):e.split32(this.h,"big")},Ke}function Je(){return $e||($e=1,He.sha1=function(){if(Le)return Re;Le=1;var e=Me(),t=Ie(),a=We(),d=e.rotl32,i=e.sum32,p=e.sum32_5,r=a.ft_1,n=t.BlockHash,s=[1518500249,1859775393,2400959708,3395469782];function o(){if(!(this instanceof o))return new o;n.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}return e.inherits(o,n),Re=o,o.blockSize=512,o.outSize=160,o.hmacStrength=80,o.padLength=64,o.prototype._update=function(e,t){for(var a=this.W,n=0;n<16;n++)a[n]=e[t+n];for(;n<a.length;n++)a[n]=d(a[n-3]^a[n-8]^a[n-14]^a[n-16],1);var o=this.h[0],l=this.h[1],m=this.h[2],c=this.h[3],u=this.h[4];for(n=0;n<a.length;n++){var h=~~(n/20),f=p(d(o,5),r(h,l,m,c),u,a[n],s[h]);u=c,c=m,m=d(l,30),l=o,o=f}this.h[0]=i(this.h[0],o),this.h[1]=i(this.h[1],l),this.h[2]=i(this.h[2],m),this.h[3]=i(this.h[3],c),this.h[4]=i(this.h[4],u)},o.prototype._digest=function(t){return"hex"===t?e.toHex32(this.h,"big"):e.split32(this.h,"big")},Re}(),He.sha224=function(){if(je)return Fe;je=1;var e=Me(),t=Ge();function a(){if(!(this instanceof a))return new a;t.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}return e.inherits(a,t),Fe=a,a.blockSize=512,a.outSize=224,a.hmacStrength=192,a.padLength=64,a.prototype._digest=function(t){return"hex"===t?e.toHex32(this.h.slice(0,7),"big"):e.split32(this.h.slice(0,7),"big")},Fe}(),He.sha256=Ge(),He.sha384=function(){if(ze)return qe;ze=1;var e=Me(),t=Ze();function a(){if(!(this instanceof a))return new a;t.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}return e.inherits(a,t),qe=a,a.blockSize=1024,a.outSize=384,a.hmacStrength=192,a.padLength=128,a.prototype._digest=function(t){return"hex"===t?e.toHex32(this.h.slice(0,12),"big"):e.split32(this.h.slice(0,12),"big")},qe}(),He.sha512=Ze()),He}var Xe,Qe,et,tt,at,dt,it,pt,rt,nt,st,ot,lt,mt,ct,ut,ht,ft,vt,bt,gt,yt,wt,_t,St,Et,Nt={};function Tt(){return tt||(tt=1,function(e){var t=e;t.utils=Me(),t.common=Ie(),t.sha=Je(),t.ripemd=function(){if(Xe)return Nt;Xe=1;var e=Me(),t=Ie(),a=e.rotl32,d=e.sum32,i=e.sum32_3,p=e.sum32_4,r=t.BlockHash;function n(){if(!(this instanceof n))return new n;r.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function s(e,t,a,d){return e<=15?t^a^d:e<=31?t&a|~t&d:e<=47?(t|~a)^d:e<=63?t&d|a&~d:t^(a|~d)}function o(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function l(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}e.inherits(n,r),Nt.ripemd160=n,n.blockSize=512,n.outSize=160,n.hmacStrength=192,n.padLength=64,n.prototype._update=function(e,t){for(var r=this.h[0],n=this.h[1],f=this.h[2],v=this.h[3],b=this.h[4],g=r,y=n,w=f,_=v,S=b,E=0;E<80;E++){var N=d(a(p(r,s(E,n,f,v),e[m[E]+t],o(E)),u[E]),b);r=b,b=v,v=a(f,10),f=n,n=N,N=d(a(p(g,s(79-E,y,w,_),e[c[E]+t],l(E)),h[E]),S),g=S,S=_,_=a(w,10),w=y,y=N}N=i(this.h[1],f,_),this.h[1]=i(this.h[2],v,S),this.h[2]=i(this.h[3],b,g),this.h[3]=i(this.h[4],r,y),this.h[4]=i(this.h[0],n,w),this.h[0]=N},n.prototype._digest=function(t){return"hex"===t?e.toHex32(this.h,"little"):e.split32(this.h,"little")};var m=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],c=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],u=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],h=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];return Nt}(),t.hmac=function(){if(et)return Qe;et=1;var e=Me(),t=ee();function a(t,d,i){if(!(this instanceof a))return new a(t,d,i);this.Hash=t,this.blockSize=t.blockSize/8,this.outSize=t.outSize/8,this.inner=null,this.outer=null,this._init(e.toArray(d,i))}return Qe=a,a.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),t(e.length<=this.blockSize);for(var a=e.length;a<this.blockSize;a++)e.push(0);for(a=0;a<e.length;a++)e[a]^=54;for(this.inner=(new this.Hash).update(e),a=0;a<e.length;a++)e[a]^=106;this.outer=(new this.Hash).update(e)},a.prototype.update=function(e,t){return this.inner.update(e,t),this},a.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)},Qe}(),t.sha1=t.sha.sha1,t.sha256=t.sha.sha256,t.sha224=t.sha.sha224,t.sha384=t.sha.sha384,t.sha512=t.sha.sha512,t.ripemd160=t.ripemd.ripemd160}(xe)),xe}function kt(){return it||(it=1,function(e){var t,a=e,d=Tt(),i=Te(),p=pe().assert;function r(e){"short"===e.type?this.curve=new i.short(e):"edwards"===e.type?this.curve=new i.edwards(e):this.curve=new i.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,p(this.g.validate(),"Invalid curve"),p(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function n(e,t){Object.defineProperty(a,e,{configurable:!0,enumerable:!0,get:function(){var d=new r(t);return Object.defineProperty(a,e,{configurable:!0,enumerable:!0,value:d}),d}})}a.PresetCurve=r,n("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:d.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),n("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:d.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),n("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:d.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),n("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:d.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),n("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:d.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),n("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:d.sha256,gRed:!1,g:["9"]}),n("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:d.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{t=dt?at:(dt=1,at={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}})}catch(e){t=void 0}n("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:d.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",t]})}(Ae)),Ae}function At(){if(ct)return mt;ct=1;var e=Q(),t=function(){if(rt)return pt;rt=1;var e=Tt(),t=ie(),a=ee();function d(e){if(!(this instanceof d))return new d(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var i=t.toArray(e.entropy,e.entropyEnc||"hex"),p=t.toArray(e.nonce,e.nonceEnc||"hex"),r=t.toArray(e.pers,e.persEnc||"hex");a(i.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(i,p,r)}return pt=d,d.prototype._init=function(e,t,a){var d=e.concat(t).concat(a);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(d),this._reseed=1,this.reseedInterval=281474976710656},d.prototype._hmac=function(){return new e.hmac(this.hash,this.K)},d.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},d.prototype.reseed=function(e,d,i,p){"string"!=typeof d&&(p=i,i=d,d=null),e=t.toArray(e,d),i=t.toArray(i,p),a(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(i||[])),this._reseed=1},d.prototype.generate=function(e,a,d,i){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof a&&(i=d,d=a,a=null),d&&(d=t.toArray(d,i||"hex"),this._update(d));for(var p=[];p.length<e;)this.V=this._hmac().update(this.V).digest(),p=p.concat(this.V);var r=p.slice(0,e);return this._update(d),this._reseed++,t.encode(r,a)},pt}(),a=pe(),d=kt(),i=se(),p=a.assert,r=function(){if(st)return nt;st=1;var e=Q(),t=pe().assert;function a(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}return nt=a,a.fromPublic=function(e,t,d){return t instanceof a?t:new a(e,{pub:t,pubEnc:d})},a.fromPrivate=function(e,t,d){return t instanceof a?t:new a(e,{priv:t,privEnc:d})},a.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},a.prototype.getPublic=function(e,t){return"string"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},a.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},a.prototype._importPrivate=function(t,a){this.priv=new e(t,a||16),this.priv=this.priv.umod(this.ec.curve.n)},a.prototype._importPublic=function(e,a){if(e.x||e.y)return"mont"===this.ec.curve.type?t(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||t(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,a)},a.prototype.derive=function(e){return e.validate()||t(e.validate(),"public point not validated"),e.mul(this.priv).getX()},a.prototype.sign=function(e,t,a){return this.ec.sign(e,this,t,a)},a.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},a.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"},nt}(),n=function(){if(lt)return ot;lt=1;var e=Q(),t=pe(),a=t.assert;function d(t,i){if(t instanceof d)return t;this._importDER(t,i)||(a(t.r&&t.s,"Signature without r or s"),this.r=new e(t.r,16),this.s=new e(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam)}function i(){this.place=0}function p(e,t){var a=e[t.place++];if(!(128&a))return a;var d=15&a;if(0===d||d>4)return!1;for(var i=0,p=0,r=t.place;p<d;p++,r++)i<<=8,i|=e[r],i>>>=0;return!(i<=127)&&(t.place=r,i)}function r(e){for(var t=0,a=e.length-1;!e[t]&&!(128&e[t+1])&&t<a;)t++;return 0===t?e:e.slice(t)}function n(e,t){if(t<128)e.push(t);else{var a=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|a);--a;)e.push(t>>>(a<<3)&255);e.push(t)}}return ot=d,d.prototype._importDER=function(a,d){a=t.toArray(a,d);var r=new i;if(48!==a[r.place++])return!1;var n=p(a,r);if(!1===n)return!1;if(n+r.place!==a.length)return!1;if(2!==a[r.place++])return!1;var s=p(a,r);if(!1===s)return!1;var o=a.slice(r.place,s+r.place);if(r.place+=s,2!==a[r.place++])return!1;var l=p(a,r);if(!1===l)return!1;if(a.length!==l+r.place)return!1;var m=a.slice(r.place,l+r.place);if(0===o[0]){if(!(128&o[1]))return!1;o=o.slice(1)}if(0===m[0]){if(!(128&m[1]))return!1;m=m.slice(1)}return this.r=new e(o),this.s=new e(m),this.recoveryParam=null,!0},d.prototype.toDER=function(e){var a=this.r.toArray(),d=this.s.toArray();for(128&a[0]&&(a=[0].concat(a)),128&d[0]&&(d=[0].concat(d)),a=r(a),d=r(d);!(d[0]||128&d[1]);)d=d.slice(1);var i=[2];n(i,a.length),(i=i.concat(a)).push(2),n(i,d.length);var p=i.concat(d),s=[48];return n(s,p.length),s=s.concat(p),t.encode(s,e)},ot}();function s(e){if(!(this instanceof s))return new s(e);"string"==typeof e&&(p(Object.prototype.hasOwnProperty.call(d,e),"Unknown curve "+e),e=d[e]),e instanceof d.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}return mt=s,s.prototype.keyPair=function(e){return new r(this,e)},s.prototype.keyFromPrivate=function(e,t){return r.fromPrivate(this,e,t)},s.prototype.keyFromPublic=function(e,t){return r.fromPublic(this,e,t)},s.prototype.genKeyPair=function(a){a||(a={});for(var d=new t({hash:this.hash,pers:a.pers,persEnc:a.persEnc||"utf8",entropy:a.entropy||i(this.hash.hmacStrength),entropyEnc:a.entropy&&a.entropyEnc||"utf8",nonce:this.n.toArray()}),p=this.n.byteLength(),r=this.n.sub(new e(2));;){var n=new e(d.generate(p));if(!(n.cmp(r)>0))return n.iaddn(1),this.keyFromPrivate(n)}},s.prototype._truncateToN=function(e,t){var a=8*e.byteLength()-this.n.bitLength();return a>0&&(e=e.ushrn(a)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},s.prototype.sign=function(a,d,i,p){"object"==typeof i&&(p=i,i=null),p||(p={}),d=this.keyFromPrivate(d,i),a=this._truncateToN(new e(a,16));for(var r=this.n.byteLength(),s=d.getPrivate().toArray("be",r),o=a.toArray("be",r),l=new t({hash:this.hash,entropy:s,nonce:o,pers:p.pers,persEnc:p.persEnc||"utf8"}),m=this.n.sub(new e(1)),c=0;;c++){var u=p.k?p.k(c):new e(l.generate(this.n.byteLength()));if(!((u=this._truncateToN(u,!0)).cmpn(1)<=0||u.cmp(m)>=0)){var h=this.g.mul(u);if(!h.isInfinity()){var f=h.getX(),v=f.umod(this.n);if(0!==v.cmpn(0)){var b=u.invm(this.n).mul(v.mul(d.getPrivate()).iadd(a));if(0!==(b=b.umod(this.n)).cmpn(0)){var g=(h.getY().isOdd()?1:0)|(0!==f.cmp(v)?2:0);return p.canonical&&b.cmp(this.nh)>0&&(b=this.n.sub(b),g^=1),new n({r:v,s:b,recoveryParam:g})}}}}}},s.prototype.verify=function(t,a,d,i){t=this._truncateToN(new e(t,16)),d=this.keyFromPublic(d,i);var p=(a=new n(a,"hex")).r,r=a.s;if(p.cmpn(1)<0||p.cmp(this.n)>=0)return!1;if(r.cmpn(1)<0||r.cmp(this.n)>=0)return!1;var s,o=r.invm(this.n),l=o.mul(t).umod(this.n),m=o.mul(p).umod(this.n);return this.curve._maxwellTrick?!(s=this.g.jmulAdd(l,d.getPublic(),m)).isInfinity()&&s.eqXToP(p):!(s=this.g.mulAdd(l,d.getPublic(),m)).isInfinity()&&0===s.getX().umod(this.n).cmp(p)},s.prototype.recoverPubKey=function(t,a,d,i){p((3&d)===d,"The recovery param is more than two bits"),a=new n(a,i);var r=this.n,s=new e(t),o=a.r,l=a.s,m=1&d,c=d>>1;if(o.cmp(this.curve.p.umod(this.curve.n))>=0&&c)throw new Error("Unable to find sencond key candinate");o=c?this.curve.pointFromX(o.add(this.curve.n),m):this.curve.pointFromX(o,m);var u=a.r.invm(r),h=r.sub(s).mul(u).umod(r),f=l.mul(u).umod(r);return this.g.mulAdd(h,o,f)},s.prototype.getKeyRecoveryParam=function(e,t,a,d){if(null!==(t=new n(t,d)).recoveryParam)return t.recoveryParam;for(var i=0;i<4;i++){var p;try{p=this.recoverPubKey(e,t,i)}catch(e){continue}if(p.eq(a))return i}throw new Error("Unable to find valid recovery factor")},mt}function xt(){if(gt)return bt;gt=1;var e=Tt(),t=kt(),a=pe(),d=a.assert,i=a.parseBytes,p=function(){if(ht)return ut;ht=1;var e=pe(),t=e.assert,a=e.parseBytes,d=e.cachedProperty;function i(e,t){this.eddsa=e,this._secret=a(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=a(t.pub)}return i.fromPublic=function(e,t){return t instanceof i?t:new i(e,{pub:t})},i.fromSecret=function(e,t){return t instanceof i?t:new i(e,{secret:t})},i.prototype.secret=function(){return this._secret},d(i,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),d(i,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),d(i,"privBytes",(function(){var e=this.eddsa,t=this.hash(),a=e.encodingLength-1,d=t.slice(0,e.encodingLength);return d[0]&=248,d[a]&=127,d[a]|=64,d})),d(i,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),d(i,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),d(i,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),i.prototype.sign=function(e){return t(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},i.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},i.prototype.getSecret=function(a){return t(this._secret,"KeyPair is public only"),e.encode(this.secret(),a)},i.prototype.getPublic=function(t){return e.encode(this.pubBytes(),t)},ut=i}(),r=function(){if(vt)return ft;vt=1;var e=Q(),t=pe(),a=t.assert,d=t.cachedProperty,i=t.parseBytes;function p(t,d){this.eddsa=t,"object"!=typeof d&&(d=i(d)),Array.isArray(d)&&(d={R:d.slice(0,t.encodingLength),S:d.slice(t.encodingLength)}),a(d.R&&d.S,"Signature without R or S"),t.isPoint(d.R)&&(this._R=d.R),d.S instanceof e&&(this._S=d.S),this._Rencoded=Array.isArray(d.R)?d.R:d.Rencoded,this._Sencoded=Array.isArray(d.S)?d.S:d.Sencoded}return d(p,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),d(p,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),d(p,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),d(p,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),p.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},p.prototype.toHex=function(){return t.encode(this.toBytes(),"hex").toUpperCase()},ft=p}();function n(a){if(d("ed25519"===a,"only tested with ed25519 so far"),!(this instanceof n))return new n(a);a=t[a].curve,this.curve=a,this.g=a.g,this.g.precompute(a.n.bitLength()+1),this.pointClass=a.point().constructor,this.encodingLength=Math.ceil(a.n.bitLength()/8),this.hash=e.sha512}return bt=n,n.prototype.sign=function(e,t){e=i(e);var a=this.keyFromSecret(t),d=this.hashInt(a.messagePrefix(),e),p=this.g.mul(d),r=this.encodePoint(p),n=this.hashInt(r,a.pubBytes(),e).mul(a.priv()),s=d.add(n).umod(this.curve.n);return this.makeSignature({R:p,S:s,Rencoded:r})},n.prototype.verify=function(e,t,a){e=i(e),t=this.makeSignature(t);var d=this.keyFromPublic(a),p=this.hashInt(t.Rencoded(),d.pubBytes(),e),r=this.g.mul(t.S());return t.R().add(d.pub().mul(p)).eq(r)},n.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return a.intFromLE(e.digest()).umod(this.curve.n)},n.prototype.keyFromPublic=function(e){return p.fromPublic(this,e)},n.prototype.keyFromSecret=function(e){return p.fromSecret(this,e)},n.prototype.makeSignature=function(e){return e instanceof r?e:new r(this,e)},n.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},n.prototype.decodePoint=function(e){var t=(e=a.parseBytes(e)).length-1,d=e.slice(0,t).concat(-129&e[t]),i=0!=(128&e[t]),p=a.intFromLE(d);return this.curve.pointFromY(p,i)},n.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},n.prototype.decodeInt=function(e){return a.intFromLE(e)},n.prototype.isPoint=function(e){return e instanceof this.pointClass},bt}function Ct(){if(_t)return wt;_t=1;const e=(yt||(yt=1,function(e){var t=G;t.version=Z.version,t.utils=pe(),t.rand=se(),t.curve=Te(),t.curves=kt(),t.ec=At(),t.eddsa=xt()}()),G).ec,t=new e("secp256k1"),a=t.curve,d=a.n.constructor;function i(e){const i=e[0];switch(i){case 2:case 3:return 33!==e.length?null:function(e,i){let p=new d(i);if(p.cmp(a.p)>=0)return null;p=p.toRed(a.red);let r=p.redSqr().redIMul(p).redIAdd(a.b).redSqrt();return 3===e!==r.isOdd()&&(r=r.redNeg()),t.keyPair({pub:{x:p,y:r}})}(i,e.subarray(1,33));case 4:case 6:case 7:return 65!==e.length?null:function(e,i,p){let r=new d(i),n=new d(p);if(r.cmp(a.p)>=0||n.cmp(a.p)>=0)return null;if(r=r.toRed(a.red),n=n.toRed(a.red),(6===e||7===e)&&n.isOdd()!==(7===e))return null;const s=r.redSqr().redIMul(r);return n.redSqr().redISub(s.redIAdd(a.b)).isZero()?t.keyPair({pub:{x:r,y:n}}):null}(i,e.subarray(1,33),e.subarray(33,65));default:return null}}function p(e,t){const a=t.encode(null,33===e.length);for(let t=0;t<e.length;++t)e[t]=a[t]}return wt={contextRandomize:()=>0,privateKeyVerify(e){const t=new d(e);return t.cmp(a.n)<0&&!t.isZero()?0:1},privateKeyNegate(e){const t=new d(e),i=a.n.sub(t).umod(a.n).toArrayLike(Uint8Array,"be",32);return e.set(i),0},privateKeyTweakAdd(e,t){const i=new d(t);if(i.cmp(a.n)>=0)return 1;if(i.iadd(new d(e)),i.cmp(a.n)>=0&&i.isub(a.n),i.isZero())return 1;const p=i.toArrayLike(Uint8Array,"be",32);return e.set(p),0},privateKeyTweakMul(e,t){let i=new d(t);if(i.cmp(a.n)>=0||i.isZero())return 1;i.imul(new d(e)),i.cmp(a.n)>=0&&(i=i.umod(a.n));const p=i.toArrayLike(Uint8Array,"be",32);return e.set(p),0},publicKeyVerify:e=>null===i(e)?1:0,publicKeyCreate(e,i){const r=new d(i);if(r.cmp(a.n)>=0||r.isZero())return 1;return p(e,t.keyFromPrivate(i).getPublic()),0},publicKeyConvert(e,t){const a=i(t);if(null===a)return 1;return p(e,a.getPublic()),0},publicKeyNegate(e,t){const a=i(t);if(null===a)return 1;const d=a.getPublic();return d.y=d.y.redNeg(),p(e,d),0},publicKeyCombine(e,t){const a=new Array(t.length);for(let e=0;e<t.length;++e)if(a[e]=i(t[e]),null===a[e])return 1;let d=a[0].getPublic();for(let e=1;e<a.length;++e)d=d.add(a[e].pub);return d.isInfinity()?2:(p(e,d),0)},publicKeyTweakAdd(e,t,r){const n=i(t);if(null===n)return 1;if((r=new d(r)).cmp(a.n)>=0)return 2;const s=n.getPublic().add(a.g.mul(r));return s.isInfinity()?2:(p(e,s),0)},publicKeyTweakMul(e,t,r){const n=i(t);if(null===n)return 1;if((r=new d(r)).cmp(a.n)>=0||r.isZero())return 2;return p(e,n.getPublic().mul(r)),0},signatureNormalize(e){const i=new d(e.subarray(0,32)),p=new d(e.subarray(32,64));return i.cmp(a.n)>=0||p.cmp(a.n)>=0?1:(1===p.cmp(t.nh)&&e.set(a.n.sub(p).toArrayLike(Uint8Array,"be",32),32),0)},signatureExport(e,t){const i=t.subarray(0,32),p=t.subarray(32,64);if(new d(i).cmp(a.n)>=0)return 1;if(new d(p).cmp(a.n)>=0)return 1;const{output:r}=e;let n=r.subarray(4,37);n[0]=0,n.set(i,1);let s=33,o=0;for(;s>1&&0===n[o]&&!(128&n[o+1]);--s,++o);if(n=n.subarray(o),128&n[0])return 1;if(s>1&&0===n[0]&&!(128&n[1]))return 1;let l=r.subarray(39,72);l[0]=0,l.set(p,1);let m=33,c=0;for(;m>1&&0===l[c]&&!(128&l[c+1]);--m,++c);return l=l.subarray(c),128&l[0]||m>1&&0===l[0]&&!(128&l[1])?1:(e.outputlen=6+s+m,r[0]=48,r[1]=e.outputlen-2,r[2]=2,r[3]=n.length,r.set(n,4),r[4+s]=2,r[5+s]=l.length,r.set(l,6+s),0)},signatureImport(e,t){if(t.length<8)return 1;if(t.length>72)return 1;if(48!==t[0])return 1;if(t[1]!==t.length-2)return 1;if(2!==t[2])return 1;const i=t[3];if(0===i)return 1;if(5+i>=t.length)return 1;if(2!==t[4+i])return 1;const p=t[5+i];if(0===p)return 1;if(6+i+p!==t.length)return 1;if(128&t[4])return 1;if(i>1&&0===t[4]&&!(128&t[5]))return 1;if(128&t[i+6])return 1;if(p>1&&0===t[i+6]&&!(128&t[i+7]))return 1;let r=t.subarray(4,4+i);if(33===r.length&&0===r[0]&&(r=r.subarray(1)),r.length>32)return 1;let n=t.subarray(6+i);if(33===n.length&&0===n[0]&&(n=n.slice(1)),n.length>32)throw new Error("S length is too long");let s=new d(r);s.cmp(a.n)>=0&&(s=new d(0));let o=new d(t.subarray(6+i));return o.cmp(a.n)>=0&&(o=new d(0)),e.set(s.toArrayLike(Uint8Array,"be",32),0),e.set(o.toArrayLike(Uint8Array,"be",32),32),0},ecdsaSign(e,i,p,r,n){if(n){const e=n;n=t=>{const a=e(i,p,null,r,t);if(!(a instanceof Uint8Array&&32===a.length))throw new Error("This is the way");return new d(a)}}const s=new d(p);if(s.cmp(a.n)>=0||s.isZero())return 1;let o;try{o=t.sign(i,p,{canonical:!0,k:n,pers:r})}catch(e){return 1}return e.signature.set(o.r.toArrayLike(Uint8Array,"be",32),0),e.signature.set(o.s.toArrayLike(Uint8Array,"be",32),32),e.recid=o.recoveryParam,0},ecdsaVerify(e,p,r){const n={r:e.subarray(0,32),s:e.subarray(32,64)},s=new d(n.r),o=new d(n.s);if(s.cmp(a.n)>=0||o.cmp(a.n)>=0)return 1;if(1===o.cmp(t.nh)||s.isZero()||o.isZero())return 3;const l=i(r);if(null===l)return 2;const m=l.getPublic();return t.verify(p,n,m)?0:3},ecdsaRecover(e,i,r,n){const s={r:i.slice(0,32),s:i.slice(32,64)},o=new d(s.r),l=new d(s.s);if(o.cmp(a.n)>=0||l.cmp(a.n)>=0)return 1;if(o.isZero()||l.isZero())return 2;let m;try{m=t.recoverPubKey(n,s,r)}catch(e){return 2}return p(e,m),0},ecdh(e,p,r,n,s,o,l){const m=i(p);if(null===m)return 1;const c=new d(r);if(c.cmp(a.n)>=0||c.isZero())return 2;const u=m.getPublic().mul(c);if(void 0===s){const a=u.encode(null,!0),d=t.hash().update(a).digest();for(let t=0;t<32;++t)e[t]=d[t]}else{o||(o=new Uint8Array(32));const t=u.getX().toArray("be",32);for(let e=0;e<32;++e)o[e]=t[e];l||(l=new Uint8Array(32));const a=u.getY().toArray("be",32);for(let e=0;e<32;++e)l[e]=a[e];const d=s(o,l,n);if(!(d instanceof Uint8Array&&d.length===e.length))return 2;e.set(d)}return 0}},wt}try{K.exports=function(){if(F)return B;F=1;const e=z()(__dirname);return B=$()(new e.Secp256k1)}()}catch(e){K.exports=Et?St:(Et=1,St=$()(Ct()))}var Mt,Dt=K.exports,Ot={},It={};Mt=It,Object.defineProperty(Mt,"__esModule",{value:!0}),Mt.SECRET_KEY_LENGTH=Mt.AES_IV_PLUS_TAG_LENGTH=Mt.AES_TAG_LENGTH=Mt.AES_IV_LENGTH=Mt.UNCOMPRESSED_PUBLIC_KEY_SIZE=void 0,Mt.UNCOMPRESSED_PUBLIC_KEY_SIZE=65,Mt.AES_IV_LENGTH=16,Mt.AES_TAG_LENGTH=16,Mt.AES_IV_PLUS_TAG_LENGTH=Mt.AES_IV_LENGTH+Mt.AES_TAG_LENGTH,Mt.SECRET_KEY_LENGTH=32;var Vt=y&&y.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Ot,"__esModule",{value:!0}),Ot.aesDecrypt=Ot.aesEncrypt=Ot.getValidSecret=Ot.decodeHex=Ot.remove0x=void 0;var Rt=a,Lt=Vt(Dt),Pt=It;function Bt(e){return e.startsWith("0x")||e.startsWith("0X")?e.slice(2):e}Ot.remove0x=Bt,Ot.decodeHex=function(e){return Buffer.from(Bt(e),"hex")},Ot.getValidSecret=function(){var e;do{e=(0,Rt.randomBytes)(Pt.SECRET_KEY_LENGTH)}while(!Lt.default.privateKeyVerify(e));return e},Ot.aesEncrypt=function(e,t){var a=(0,Rt.randomBytes)(Pt.AES_IV_LENGTH),d=(0,Rt.createCipheriv)("aes-256-gcm",e,a),i=Buffer.concat([d.update(t),d.final()]),p=d.getAuthTag();return Buffer.concat([a,p,i])},Ot.aesDecrypt=function(e,t){var a=t.slice(0,Pt.AES_IV_LENGTH),d=t.slice(Pt.AES_IV_LENGTH,Pt.AES_IV_PLUS_TAG_LENGTH),i=t.slice(Pt.AES_IV_PLUS_TAG_LENGTH),p=(0,Rt.createDecipheriv)("aes-256-gcm",e,a);return p.setAuthTag(d),Buffer.concat([p.update(i),p.final()])};var Ft={},jt=y&&y.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Ft,"__esModule",{value:!0});var Kt=jt(j),Ut=jt(Dt),qt=Ot,zt=It,$t=function(){function e(e){this.uncompressed=Buffer.from(Ut.default.publicKeyConvert(e,!1)),this.compressed=Buffer.from(Ut.default.publicKeyConvert(e,!0))}return e.fromHex=function(t){var a=(0,qt.decodeHex)(t);if(a.length===zt.UNCOMPRESSED_PUBLIC_KEY_SIZE-1){var d=Buffer.from([4]);return new e(Buffer.concat([d,a]))}return new e(a)},e.prototype.toHex=function(e){return void 0===e&&(e=!0),e?this.compressed.toString("hex"):this.uncompressed.toString("hex")},e.prototype.decapsulate=function(e){var t=Buffer.concat([this.uncompressed,e.multiply(this)]);return(0,Kt.default)(t,32,{hash:"SHA-256"})},e.prototype.equals=function(e){return this.uncompressed.equals(e.uncompressed)},e}();Ft.default=$t;var Ht=y&&y.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(N,"__esModule",{value:!0});var Yt=Ht(j),Wt=Ht(Dt),Gt=Ot,Zt=Ht(Ft),Jt=function(){function e(e){if(this.secret=e||(0,Gt.getValidSecret)(),!Wt.default.privateKeyVerify(this.secret))throw new Error("Invalid private key");this.publicKey=new Zt.default(Buffer.from(Wt.default.publicKeyCreate(this.secret)))}return e.fromHex=function(t){return new e((0,Gt.decodeHex)(t))},e.prototype.toHex=function(){return"0x".concat(this.secret.toString("hex"))},e.prototype.encapsulate=function(e){var t=Buffer.concat([this.publicKey.uncompressed,this.multiply(e)]);return(0,Yt.default)(t,32,{hash:"SHA-256"})},e.prototype.multiply=function(e){return Buffer.from(Wt.default.publicKeyTweakMul(e.compressed,this.secret,!1))},e.prototype.equals=function(e){return this.secret.equals(e.secret)},e}();N.default=Jt,function(e){var t=y&&y.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(e,"__esModule",{value:!0}),e.PublicKey=e.PrivateKey=void 0;var a=N;Object.defineProperty(e,"PrivateKey",{enumerable:!0,get:function(){return t(a).default}});var d=Ft;Object.defineProperty(e,"PublicKey",{enumerable:!0,get:function(){return t(d).default}})}(E),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.utils=e.PublicKey=e.PrivateKey=e.decrypt=e.encrypt=void 0;var t=E,a=Ot,d=It;e.encrypt=function(e,d){var i=new t.PrivateKey,p=e instanceof Buffer?new t.PublicKey(e):t.PublicKey.fromHex(e),r=i.encapsulate(p),n=(0,a.aesEncrypt)(r,d);return Buffer.concat([i.publicKey.uncompressed,n])},e.decrypt=function(e,i){var p=e instanceof Buffer?new t.PrivateKey(e):t.PrivateKey.fromHex(e),r=new t.PublicKey(i.slice(0,d.UNCOMPRESSED_PUBLIC_KEY_SIZE)),n=i.slice(d.UNCOMPRESSED_PUBLIC_KEY_SIZE),s=r.decapsulate(p);return(0,a.aesDecrypt)(s,n)};var i=E;Object.defineProperty(e,"PrivateKey",{enumerable:!0,get:function(){return i.PrivateKey}}),Object.defineProperty(e,"PublicKey",{enumerable:!0,get:function(){return i.PublicKey}}),e.utils={aesDecrypt:a.aesDecrypt,aesEncrypt:a.aesEncrypt,decodeHex:a.decodeHex,getValidSecret:a.getValidSecret,remove0x:a.remove0x}}(S);class Xt{constructor(e){this.enabled=!0,this.debug=!1,(null==e?void 0:e.debug)&&(this.debug=e.debug),(null==e?void 0:e.pkey)?this.ecies=S.PrivateKey.fromHex(e.pkey):this.ecies=new S.PrivateKey,this.debug&&(console.info("[ECIES] initialized secret: ",this.ecies.toHex()),console.info("[ECIES] initialized public: ",this.ecies.publicKey.toHex()),console.info("[ECIES] init with",this))}generateECIES(){this.ecies=new S.PrivateKey}getPublicKey(){return this.ecies.publicKey.toHex()}encrypt(e,a){let d=e;if(this.enabled)try{this.debug&&console.debug("ECIES::encrypt() using otherPublicKey",a);const i=t.from(e),p=S.encrypt(a,i);d=t.from(p).toString("base64")}catch(t){throw this.debug&&(console.error("error encrypt:",t),console.error("private: ",this.ecies.toHex()),console.error("data: ",e),console.error("otherkey: ",a)),t}return d}decrypt(e){let a=e;if(this.enabled)try{this.debug&&console.debug("ECIES::decrypt() using privateKey",this.ecies.toHex());const d=t.from(e.toString(),"base64");a=S.decrypt(this.ecies.toHex(),d).toString()}catch(t){throw this.debug&&(console.error("error decrypt",t),console.error("private: ",this.ecies.toHex()),console.error("encryptedData: ",e)),t}return a}getKeyInfo(){return{private:this.ecies.toHex(),public:this.ecies.publicKey.toHex()}}toString(){console.debug("ECIES::toString()",this.getKeyInfo())}}function Qt(e,t,a,d){return new(a||(a=Promise))((function(i,p){function r(e){try{s(d.next(e))}catch(e){p(e)}}function n(e){try{s(d.throw(e))}catch(e){p(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(r,n)}s((d=d.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;var ea={exports:{}};
/*!
 * EventEmitter2
 * https://github.com/hij1nx/EventEmitter2
 *
 * Copyright (c) 2013 hij1nx
 * Licensed under the MIT license.
 */!function(e,t){!function(t){var a=Object.hasOwnProperty,d=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},i="object"==typeof process&&"function"==typeof process.nextTick,p="function"==typeof Symbol,r="object"==typeof Reflect,n="function"==typeof setImmediate?setImmediate:setTimeout,s=p?r&&"function"==typeof Reflect.ownKeys?Reflect.ownKeys:function(e){var t=Object.getOwnPropertyNames(e);return t.push.apply(t,Object.getOwnPropertySymbols(e)),t}:Object.keys;function o(){this._events={},this._conf&&l.call(this,this._conf)}function l(e){e&&(this._conf=e,e.delimiter&&(this.delimiter=e.delimiter),e.maxListeners!==t&&(this._maxListeners=e.maxListeners),e.wildcard&&(this.wildcard=e.wildcard),e.newListener&&(this._newListener=e.newListener),e.removeListener&&(this._removeListener=e.removeListener),e.verboseMemoryLeak&&(this.verboseMemoryLeak=e.verboseMemoryLeak),e.ignoreErrors&&(this.ignoreErrors=e.ignoreErrors),this.wildcard&&(this.listenerTree={}))}function m(e,t){var a="(node) warning: possible EventEmitter memory leak detected. "+e+" listeners added. Use emitter.setMaxListeners() to increase limit.";if(this.verboseMemoryLeak&&(a+=" Event name: "+t+"."),"undefined"!=typeof process&&process.emitWarning){var d=new Error(a);d.name="MaxListenersExceededWarning",d.emitter=this,d.count=e,process.emitWarning(d)}else console.error(a),console.trace&&console.trace()}var c=function(e,t,a){var d=arguments.length;switch(d){case 0:return[];case 1:return[e];case 2:return[e,t];case 3:return[e,t,a];default:for(var i=new Array(d);d--;)i[d]=arguments[d];return i}};function u(e,a){for(var d={},i=e.length,p=a?a.length:0,r=0;r<i;r++)d[e[r]]=r<p?a[r]:t;return d}function h(e,t,a){var d,i;if(this._emitter=e,this._target=t,this._listeners={},this._listenersCount=0,(a.on||a.off)&&(d=a.on,i=a.off),t.addEventListener?(d=t.addEventListener,i=t.removeEventListener):t.addListener?(d=t.addListener,i=t.removeListener):t.on&&(d=t.on,i=t.off),!d&&!i)throw Error("target does not implement any known event API");if("function"!=typeof d)throw TypeError("on method must be a function");if("function"!=typeof i)throw TypeError("off method must be a function");this._on=d,this._off=i;var p=e._observers;p?p.push(this):e._observers=[this]}function f(e,d,i,p){var r=Object.assign({},d);if(!e)return r;if("object"!=typeof e)throw TypeError("options must be an object");var n,s,o,l=Object.keys(e),m=l.length;function c(e){throw Error('Invalid "'+n+'" option value'+(e?". Reason: "+e:""))}for(var u=0;u<m;u++){if(n=l[u],!p&&!a.call(d,n))throw Error('Unknown "'+n+'" option');(s=e[n])!==t&&(o=i[n],r[n]=o?o(s,c):s)}return r}function v(e,t){return"function"==typeof e&&e.hasOwnProperty("prototype")||t("value must be a constructor"),e}function b(e){var t="value must be type of "+e.join("|"),a=e.length,d=e[0],i=e[1];return 1===a?function(e,a){if(typeof e===d)return e;a(t)}:2===a?function(e,a){var p=typeof e;if(p===d||p===i)return e;a(t)}:function(d,i){for(var p=typeof d,r=a;r-- >0;)if(p===e[r])return d;i(t)}}Object.assign(h.prototype,{subscribe:function(e,t,a){var d=this,i=this._target,p=this._emitter,r=this._listeners,n=function(){var d=c.apply(null,arguments),r={data:d,name:t,original:e};a?!1!==a.call(i,r)&&p.emit.apply(p,[r.name].concat(d)):p.emit.apply(p,[t].concat(d))};if(r[e])throw Error("Event '"+e+"' is already listening");this._listenersCount++,p._newListener&&p._removeListener&&!d._onNewListener?(this._onNewListener=function(a){a===t&&null===r[e]&&(r[e]=n,d._on.call(i,e,n))},p.on("newListener",this._onNewListener),this._onRemoveListener=function(a){a===t&&!p.hasListeners(a)&&r[e]&&(r[e]=null,d._off.call(i,e,n))},r[e]=null,p.on("removeListener",this._onRemoveListener)):(r[e]=n,d._on.call(i,e,n))},unsubscribe:function(e){var t,a,d,i=this,p=this._listeners,r=this._emitter,n=this._off,o=this._target;if(e&&"string"!=typeof e)throw TypeError("event must be a string");function l(){i._onNewListener&&(r.off("newListener",i._onNewListener),r.off("removeListener",i._onRemoveListener),i._onNewListener=null,i._onRemoveListener=null);var e=_.call(r,i);r._observers.splice(e,1)}if(e){if(!(t=p[e]))return;n.call(o,e,t),delete p[e],--this._listenersCount||l()}else{for(d=(a=s(p)).length;d-- >0;)e=a[d],n.call(o,e,p[e]);this._listeners={},this._listenersCount=0,l()}}});var g=b(["function"]),y=b(["object","function"]);function w(e,t,a){var d,i,p,r=0,n=new e((function(s,o,l){function m(){i&&(i=null),r&&(clearTimeout(r),r=0)}a=f(a,{timeout:0,overload:!1},{timeout:function(e,t){return("number"!=typeof(e*=1)||e<0||!Number.isFinite(e))&&t("timeout must be a positive number"),e}}),d=!a.overload&&"function"==typeof e.prototype.cancel&&"function"==typeof l;var c=function(e){m(),s(e)},u=function(e){m(),o(e)};d?t(c,u,l):(i=[function(e){u(e||Error("canceled"))}],t(c,u,(function(e){if(p)throw Error("Unable to subscribe on cancel event asynchronously");if("function"!=typeof e)throw TypeError("onCancel callback must be a function");i.push(e)})),p=!0),a.timeout>0&&(r=setTimeout((function(){var e=Error("timeout");e.code="ETIMEDOUT",r=0,n.cancel(e),o(e)}),a.timeout))}));return d||(n.cancel=function(e){if(i){for(var t=i.length,a=1;a<t;a++)i[a](e);i[0](e),i=null}}),n}function _(e){var t=this._observers;if(!t)return-1;for(var a=t.length,d=0;d<a;d++)if(t[d]._target===e)return d;return-1}function S(e,t,a,d,i){if(!a)return null;if(0===d){var p=typeof t;if("string"===p){var r,n,o=0,l=0,m=this.delimiter,c=m.length;if(-1!==(n=t.indexOf(m))){r=new Array(5);do{r[o++]=t.slice(l,n),l=n+c}while(-1!==(n=t.indexOf(m,l)));r[o++]=t.slice(l),t=r,i=o}else t=[t],i=1}else"object"===p?i=t.length:(t=[t],i=1)}var u,h,f,v,b,g,y,w=null,_=t[d],E=t[d+1];if(d===i)a._listeners&&("function"==typeof a._listeners?(e&&e.push(a._listeners),w=[a]):(e&&e.push.apply(e,a._listeners),w=[a]));else{if("*"===_){for(n=(g=s(a)).length;n-- >0;)"_listeners"!==(u=g[n])&&(y=S(e,t,a[u],d+1,i))&&(w?w.push.apply(w,y):w=y);return w}if("**"===_){for((b=d+1===i||d+2===i&&"*"===E)&&a._listeners&&(w=S(e,t,a,i,i)),n=(g=s(a)).length;n-- >0;)"_listeners"!==(u=g[n])&&("*"===u||"**"===u?(a[u]._listeners&&!b&&(y=S(e,t,a[u],i,i))&&(w?w.push.apply(w,y):w=y),y=S(e,t,a[u],d,i)):y=S(e,t,a[u],u===E?d+2:d,i),y&&(w?w.push.apply(w,y):w=y));return w}a[_]&&(w=S(e,t,a[_],d+1,i))}if((h=a["*"])&&S(e,t,h,d+1,i),f=a["**"])if(d<i)for(f._listeners&&S(e,t,f,i,i),n=(g=s(f)).length;n-- >0;)"_listeners"!==(u=g[n])&&(u===E?S(e,t,f[u],d+2,i):u===_?S(e,t,f[u],d+1,i):((v={})[u]=f[u],S(e,t,{"**":v},d+1,i)));else f._listeners?S(e,t,f,i,i):f["*"]&&f["*"]._listeners&&S(e,t,f["*"],i,i);return w}function E(e,t,a){var d,i,p=0,r=0,n=this.delimiter,s=n.length;if("string"==typeof e)if(-1!==(d=e.indexOf(n))){i=new Array(5);do{i[p++]=e.slice(r,d),r=d+s}while(-1!==(d=e.indexOf(n,r)));i[p++]=e.slice(r)}else i=[e],p=1;else i=e,p=e.length;if(p>1)for(d=0;d+1<p;d++)if("**"===i[d]&&"**"===i[d+1])return;var o,l=this.listenerTree;for(d=0;d<p;d++)if(l=l[o=i[d]]||(l[o]={}),d===p-1)return l._listeners?("function"==typeof l._listeners&&(l._listeners=[l._listeners]),a?l._listeners.unshift(t):l._listeners.push(t),!l._listeners.warned&&this._maxListeners>0&&l._listeners.length>this._maxListeners&&(l._listeners.warned=!0,m.call(this,l._listeners.length,o))):l._listeners=t,!0;return!0}function N(e,t,a,d){for(var i,p,r,n,o=s(e),l=o.length,m=e._listeners;l-- >0;)i=e[p=o[l]],r="_listeners"===p?a:a?a.concat(p):[p],n=d||"symbol"==typeof p,m&&t.push(n?r:r.join(this.delimiter)),"object"==typeof i&&N.call(this,i,t,r,n);return t}function T(e){for(var t,a,d,i=s(e),p=i.length;p-- >0;)(t=e[a=i[p]])&&(d=!0,"_listeners"===a||T(t)||delete e[a]);return d}function k(e,t,a){this.emitter=e,this.event=t,this.listener=a}function A(e,a,d){if(!0===d)r=!0;else if(!1===d)p=!0;else{if(!d||"object"!=typeof d)throw TypeError("options should be an object or true");var p=d.async,r=d.promisify,s=d.nextTick,o=d.objectify}if(p||s||r){var l=a,m=a._origin||a;if(s&&!i)throw Error("process.nextTick is not supported");r===t&&(r="AsyncFunction"===a.constructor.name),a=function(){var e=arguments,t=this,a=this.event;return r?s?Promise.resolve():new Promise((function(e){n(e)})).then((function(){return t.event=a,l.apply(t,e)})):(s?process.nextTick:n)((function(){t.event=a,l.apply(t,e)}))},a._async=!0,a._origin=m}return[a,o?new k(this,e,a):this]}function x(e){this._events={},this._newListener=!1,this._removeListener=!1,this.verboseMemoryLeak=!1,l.call(this,e)}k.prototype.off=function(){return this.emitter.off(this.event,this.listener),this},x.EventEmitter2=x,x.prototype.listenTo=function(e,a,i){if("object"!=typeof e)throw TypeError("target musts be an object");var p=this;function r(t){if("object"!=typeof t)throw TypeError("events must be an object");var a,d=i.reducers,r=_.call(p,e);a=-1===r?new h(p,e,i):p._observers[r];for(var n,o=s(t),l=o.length,m="function"==typeof d,c=0;c<l;c++)n=o[c],a.subscribe(n,t[n]||n,m?d:d&&d[n])}return i=f(i,{on:t,off:t,reducers:t},{on:g,off:g,reducers:y}),d(a)?r(u(a)):r("string"==typeof a?u(a.split(/\s+/)):a),this},x.prototype.stopListeningTo=function(e,t){var a=this._observers;if(!a)return!1;var d,i=a.length,p=!1;if(e&&"object"!=typeof e)throw TypeError("target should be an object");for(;i-- >0;)d=a[i],e&&d._target!==e||(d.unsubscribe(t),p=!0);return p},x.prototype.delimiter=".",x.prototype.setMaxListeners=function(e){e!==t&&(this._maxListeners=e,this._conf||(this._conf={}),this._conf.maxListeners=e)},x.prototype.getMaxListeners=function(){return this._maxListeners},x.prototype.event="",x.prototype.once=function(e,t,a){return this._once(e,t,!1,a)},x.prototype.prependOnceListener=function(e,t,a){return this._once(e,t,!0,a)},x.prototype._once=function(e,t,a,d){return this._many(e,1,t,a,d)},x.prototype.many=function(e,t,a,d){return this._many(e,t,a,!1,d)},x.prototype.prependMany=function(e,t,a,d){return this._many(e,t,a,!0,d)},x.prototype._many=function(e,t,a,d,i){var p=this;if("function"!=typeof a)throw new Error("many only accepts instances of Function");function r(){return 0==--t&&p.off(e,r),a.apply(this,arguments)}return r._origin=a,this._on(e,r,d,i)},x.prototype.emit=function(){if(!this._events&&!this._all)return!1;this._events||o.call(this);var e,t,a,d,i,r,n=arguments[0],s=this.wildcard;if("newListener"===n&&!this._newListener&&!this._events.newListener)return!1;if(s&&(e=n,"newListener"!==n&&"removeListener"!==n&&"object"==typeof n)){if(a=n.length,p)for(d=0;d<a;d++)if("symbol"==typeof n[d]){r=!0;break}r||(n=n.join(this.delimiter))}var l,m=arguments.length;if(this._all&&this._all.length)for(d=0,a=(l=this._all.slice()).length;d<a;d++)switch(this.event=n,m){case 1:l[d].call(this,n);break;case 2:l[d].call(this,n,arguments[1]);break;case 3:l[d].call(this,n,arguments[1],arguments[2]);break;default:l[d].apply(this,arguments)}if(s)l=[],S.call(this,l,e,this.listenerTree,0,a);else{if("function"==typeof(l=this._events[n])){switch(this.event=n,m){case 1:l.call(this);break;case 2:l.call(this,arguments[1]);break;case 3:l.call(this,arguments[1],arguments[2]);break;default:for(t=new Array(m-1),i=1;i<m;i++)t[i-1]=arguments[i];l.apply(this,t)}return!0}l&&(l=l.slice())}if(l&&l.length){if(m>3)for(t=new Array(m-1),i=1;i<m;i++)t[i-1]=arguments[i];for(d=0,a=l.length;d<a;d++)switch(this.event=n,m){case 1:l[d].call(this);break;case 2:l[d].call(this,arguments[1]);break;case 3:l[d].call(this,arguments[1],arguments[2]);break;default:l[d].apply(this,t)}return!0}if(!this.ignoreErrors&&!this._all&&"error"===n)throw arguments[1]instanceof Error?arguments[1]:new Error("Uncaught, unspecified 'error' event.");return!!this._all},x.prototype.emitAsync=function(){if(!this._events&&!this._all)return!1;this._events||o.call(this);var e,t,a,d,i,r,n=arguments[0],s=this.wildcard;if("newListener"===n&&!this._newListener&&!this._events.newListener)return Promise.resolve([!1]);if(s&&(e=n,"newListener"!==n&&"removeListener"!==n&&"object"==typeof n)){if(d=n.length,p)for(i=0;i<d;i++)if("symbol"==typeof n[i]){t=!0;break}t||(n=n.join(this.delimiter))}var l,m=[],c=arguments.length;if(this._all)for(i=0,d=this._all.length;i<d;i++)switch(this.event=n,c){case 1:m.push(this._all[i].call(this,n));break;case 2:m.push(this._all[i].call(this,n,arguments[1]));break;case 3:m.push(this._all[i].call(this,n,arguments[1],arguments[2]));break;default:m.push(this._all[i].apply(this,arguments))}if(s?(l=[],S.call(this,l,e,this.listenerTree,0)):l=this._events[n],"function"==typeof l)switch(this.event=n,c){case 1:m.push(l.call(this));break;case 2:m.push(l.call(this,arguments[1]));break;case 3:m.push(l.call(this,arguments[1],arguments[2]));break;default:for(a=new Array(c-1),r=1;r<c;r++)a[r-1]=arguments[r];m.push(l.apply(this,a))}else if(l&&l.length){if(l=l.slice(),c>3)for(a=new Array(c-1),r=1;r<c;r++)a[r-1]=arguments[r];for(i=0,d=l.length;i<d;i++)switch(this.event=n,c){case 1:m.push(l[i].call(this));break;case 2:m.push(l[i].call(this,arguments[1]));break;case 3:m.push(l[i].call(this,arguments[1],arguments[2]));break;default:m.push(l[i].apply(this,a))}}else if(!this.ignoreErrors&&!this._all&&"error"===n)return arguments[1]instanceof Error?Promise.reject(arguments[1]):Promise.reject("Uncaught, unspecified 'error' event.");return Promise.all(m)},x.prototype.on=function(e,t,a){return this._on(e,t,!1,a)},x.prototype.prependListener=function(e,t,a){return this._on(e,t,!0,a)},x.prototype.onAny=function(e){return this._onAny(e,!1)},x.prototype.prependAny=function(e){return this._onAny(e,!0)},x.prototype.addListener=x.prototype.on,x.prototype._onAny=function(e,t){if("function"!=typeof e)throw new Error("onAny only accepts instances of Function");return this._all||(this._all=[]),t?this._all.unshift(e):this._all.push(e),this},x.prototype._on=function(e,a,d,i){if("function"==typeof e)return this._onAny(e,a),this;if("function"!=typeof a)throw new Error("on only accepts instances of Function");this._events||o.call(this);var p,r=this;return i!==t&&(a=(p=A.call(this,e,a,i))[0],r=p[1]),this._newListener&&this.emit("newListener",e,a),this.wildcard?(E.call(this,e,a,d),r):(this._events[e]?("function"==typeof this._events[e]&&(this._events[e]=[this._events[e]]),d?this._events[e].unshift(a):this._events[e].push(a),!this._events[e].warned&&this._maxListeners>0&&this._events[e].length>this._maxListeners&&(this._events[e].warned=!0,m.call(this,this._events[e].length,e))):this._events[e]=a,r)},x.prototype.off=function(e,t){if("function"!=typeof t)throw new Error("removeListener only takes instances of Function");var a,i=[];if(this.wildcard){var p="string"==typeof e?e.split(this.delimiter):e.slice();if(!(i=S.call(this,null,p,this.listenerTree,0)))return this}else{if(!this._events[e])return this;a=this._events[e],i.push({_listeners:a})}for(var r=0;r<i.length;r++){var n=i[r];if(a=n._listeners,d(a)){for(var s=-1,o=0,l=a.length;o<l;o++)if(a[o]===t||a[o].listener&&a[o].listener===t||a[o]._origin&&a[o]._origin===t){s=o;break}if(s<0)continue;return this.wildcard?n._listeners.splice(s,1):this._events[e].splice(s,1),0===a.length&&(this.wildcard?delete n._listeners:delete this._events[e]),this._removeListener&&this.emit("removeListener",e,t),this}(a===t||a.listener&&a.listener===t||a._origin&&a._origin===t)&&(this.wildcard?delete n._listeners:delete this._events[e],this._removeListener&&this.emit("removeListener",e,t))}return this.listenerTree&&T(this.listenerTree),this},x.prototype.offAny=function(e){var t,a=0,d=0;if(e&&this._all&&this._all.length>0){for(a=0,d=(t=this._all).length;a<d;a++)if(e===t[a])return t.splice(a,1),this._removeListener&&this.emit("removeListenerAny",e),this}else{if(t=this._all,this._removeListener)for(a=0,d=t.length;a<d;a++)this.emit("removeListenerAny",t[a]);this._all=[]}return this},x.prototype.removeListener=x.prototype.off,x.prototype.removeAllListeners=function(e){if(e===t)return!this._events||o.call(this),this;if(this.wildcard){var a,d=S.call(this,null,e,this.listenerTree,0);if(!d)return this;for(a=0;a<d.length;a++)d[a]._listeners=null;this.listenerTree&&T(this.listenerTree)}else this._events&&(this._events[e]=null);return this},x.prototype.listeners=function(e){var a,d,i,p,r,n=this._events;if(e===t){if(this.wildcard)throw Error("event name required for wildcard emitter");if(!n)return[];for(p=(a=s(n)).length,i=[];p-- >0;)"function"==typeof(d=n[a[p]])?i.push(d):i.push.apply(i,d);return i}if(this.wildcard){if(!(r=this.listenerTree))return[];var o=[],l="string"==typeof e?e.split(this.delimiter):e.slice();return S.call(this,o,l,r,0),o}return n&&(d=n[e])?"function"==typeof d?[d]:d:[]},x.prototype.eventNames=function(e){var t=this._events;return this.wildcard?N.call(this,this.listenerTree,[],null,e):t?s(t):[]},x.prototype.listenerCount=function(e){return this.listeners(e).length},x.prototype.hasListeners=function(e){if(this.wildcard){var a=[],d="string"==typeof e?e.split(this.delimiter):e.slice();return S.call(this,a,d,this.listenerTree,0),a.length>0}var i=this._events,p=this._all;return!!(p&&p.length||i&&(e===t?s(i).length:i[e]))},x.prototype.listenersAny=function(){return this._all?this._all:[]},x.prototype.waitFor=function(e,a){var d=this,i=typeof a;return"number"===i?a={timeout:a}:"function"===i&&(a={filter:a}),w((a=f(a,{timeout:0,filter:t,handleError:!1,Promise:Promise,overload:!1},{filter:g,Promise:v})).Promise,(function(t,i,p){function r(){var p=a.filter;if(!p||p.apply(d,arguments))if(d.off(e,r),a.handleError){var n=arguments[0];n?i(n):t(c.apply(null,arguments).slice(1))}else t(c.apply(null,arguments))}p((function(){d.off(e,r)})),d._on(e,r,!1)}),{timeout:a.timeout,overload:a.overload})};var C=x.prototype;Object.defineProperties(x,{defaultMaxListeners:{get:function(){return C._maxListeners},set:function(e){if("number"!=typeof e||e<0||Number.isNaN(e))throw TypeError("n must be a non-negative number");C._maxListeners=e},enumerable:!0},once:{value:function(e,t,a){return w((a=f(a,{Promise:Promise,timeout:0,overload:!1},{Promise:v})).Promise,(function(a,d,i){var p;if("function"==typeof e.addEventListener)return p=function(){a(c.apply(null,arguments))},i((function(){e.removeEventListener(t,p)})),void e.addEventListener(t,p,{once:!0});var r,n=function(){r&&e.removeListener("error",r),a(c.apply(null,arguments))};"error"!==t&&(r=function(a){e.removeListener(t,n),d(a)},e.once("error",r)),i((function(){r&&e.removeListener("error",r),e.removeListener(t,n)})),e.once(t,n)}),{timeout:a.timeout,overload:a.overload})},writable:!0,configurable:!0}}),Object.defineProperties(C,{_maxListeners:{value:10,writable:!0,configurable:!0},_observers:{value:null,writable:!0,configurable:!0}}),"function"==typeof t&&t.amd?t((function(){return x})):e.exports=x}()}(ea);var ta,aa,da=ea.exports,ia={name:"@metamask/sdk-communication-layer",version:"0.10.1",description:"",homepage:"https://github.com/MetaMask/metamask-sdk#readme",bugs:{url:"https://github.com/MetaMask/metamask-sdk/issues"},repository:{type:"git",url:"https://github.com/MetaMask/metamask-sdk.git",directory:"packages/sdk-communication-layer"},main:"dist/node/cjs/metamask-sdk-communication-layer.js",unpkg:"dist/browser/umd/metamask-sdk-communication-layer.js",module:"dist/node/es/metamask-sdk-communication-layer.js",browser:"dist/browser/es/metamask-sdk-communication-layer.js","react-native":"dist/react-native/es/metamask-sdk-communication-layer.js",types:"dist/browser/es/src/index.d.ts",files:["/dist"],scripts:{build:"rimraf dist && rollup -c --bundleConfigAsCjs","build:post-tsc":"echo 'N/A'","build:pre-tsc":"echo 'N/A'",clean:"rimraf ./dist",lint:"yarn lint:eslint && yarn lint:misc --check","lint:changelog":"../../scripts/validate-changelog.sh @metamask/sdk-communication-layer","lint:eslint":"eslint . --cache --ext js,ts","lint:fix":"yarn lint:eslint --fix && yarn lint:misc --write","lint:misc":"prettier '**/*.json' '**/*.md' '!CHANGELOG.md' --ignore-path ../../.gitignore","prepare-manifest:preview":"../../scripts/prepare-preview-manifest.sh","publish:preview":"yarn npm publish --tag preview",prepack:"../../scripts/prepack.sh",reset:"yarn clean && rimraf ./node_modules/",test:"jest","test:coverage":"jest --coverage","test:ci":"jest --coverage --passWithNoTests","test:dev":"jest",watch:"rollup -c -w"},dependencies:{"cross-fetch":"^3.1.5","date-fns":"^2.29.3",eciesjs:"^0.3.16",eventemitter2:"^6.4.5","socket.io-client":"^4.5.1",uuid:"^8.3.2"},devDependencies:{"@jest/globals":"^29.3.1","@lavamoat/allow-scripts":"^2.3.1","@metamask/auto-changelog":"3.1.0","@metamask/eslint-config":"^6.0.0","@metamask/eslint-config-nodejs":"^6.0.0","@metamask/eslint-config-typescript":"^6.0.0","@rollup/plugin-commonjs":"^25.0.0","@rollup/plugin-json":"^6.0.0","@rollup/plugin-node-resolve":"^15.0.2","@rollup/plugin-terser":"^0.4.1","@types/jest":"^29.2.4","@types/node":"^20.1.3","@types/uuid":"^9.0.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0",eslint:"^7.30.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.23.4","eslint-plugin-jest":"^24.4.0","eslint-plugin-jsdoc":"^36.1.0","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.4.0",jest:"^29.3.1",prettier:"^2.3.0",rimraf:"^3.0.2",rollup:"^3.21.7","rollup-plugin-jscc":"^2.0.0","rollup-plugin-natives":"^0.7.5","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-typescript2":"^0.31.2","ts-jest":"^29.0.3","ts-node":"^10.9.1",typescript:"^4.3.2"},publishConfig:{access:"public",registry:"https://registry.npmjs.org/"},lavamoat:{allowScripts:{"@lavamoat/preinstall-always-fail":!1,canvas:!0,"eciesjs>secp256k1":!1,"socket.io-client>engine.io-client>ws>bufferutil":!1,"socket.io-client>engine.io-client>ws>utf-8-validate":!1}}};function pa(e){const{debug:t,context:a}=e;t&&console.debug(`RemoteCommunication::${a}::clean()`),e.channelConfig=void 0,e.ready=!1,e.originatorConnectStarted=!1}!function(e){e.KEY_INFO="key_info",e.SERVICE_STATUS="service_status",e.PROVIDER_UPDATE="provider_update",e.KEYS_EXCHANGED="keys_exchanged",e.JOIN_CHANNEL="join_channel",e.CHANNEL_CREATED="channel_created",e.CLIENTS_CONNECTED="clients_connected",e.CLIENTS_DISCONNECTED="clients_disconnected",e.CLIENTS_WAITING="clients_waiting",e.CLIENTS_READY="clients_ready",e.SOCKET_DISCONNECTED="socket_disconnected",e.SOCKET_RECONNECT="socket_reconnect",e.OTP="otp",e.SDK_RPC_CALL="sdk_rpc_call",e.AUTHORIZED="authorized",e.CONNECTION_STATUS="connection_status",e.MESSAGE="message",e.TERMINATE="terminate"}(ta||(ta={})),function(e){e.TERMINATE="terminate",e.ANSWER="answer",e.OFFER="offer",e.CANDIDATE="candidate",e.JSONRPC="jsonrpc",e.WALLET_INFO="wallet_info",e.ORIGINATOR_INFO="originator_info",e.PAUSE="pause",e.OTP="otp",e.AUTHORIZED="authorized",e.PING="ping",e.READY="ready"}(aa||(aa={}));const ra="https://metamask-sdk-socket.metafi.codefi.network/",na=["polling","websocket"],sa=6048e5,oa={METAMASK_GETPROVIDERSTATE:"metamask_getProviderState",ETH_REQUESTACCOUNTS:"eth_requestAccounts"};var la;!function(e){e.DISCONNECTED="disconnected",e.WAITING="waiting",e.TIMEOUT="timeout",e.LINKED="linked",e.PAUSED="paused",e.TERMINATED="terminated"}(la||(la={}));const ma=new Uint8Array(256);let ca=ma.length;function ua(){return ca>ma.length-16&&(a.randomFillSync(ma),ca=0),ma.slice(ca,ca+=16)}var ha=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function fa(e){return"string"==typeof e&&ha.test(e)}const va=[];for(let e=0;e<256;++e)va.push((e+256).toString(16).substr(1));function ba(e,t,a){const d=(e=e||{}).random||(e.rng||ua)();if(d[6]=15&d[6]|64,d[8]=63&d[8]|128,t){a=a||0;for(let e=0;e<16;++e)t[a+e]=d[e];return t}return function(e,t=0){const a=(va[e[t+0]]+va[e[t+1]]+va[e[t+2]]+va[e[t+3]]+"-"+va[e[t+4]]+va[e[t+5]]+"-"+va[e[t+6]]+va[e[t+7]]+"-"+va[e[t+8]]+va[e[t+9]]+"-"+va[e[t+10]]+va[e[t+11]]+va[e[t+12]]+va[e[t+13]]+va[e[t+14]]+va[e[t+15]]).toLowerCase();if(!fa(a))throw TypeError("Stringified UUID is invalid");return a}(d)}const ga=Object.create(null);ga.open="0",ga.close="1",ga.ping="2",ga.pong="3",ga.message="4",ga.upgrade="5",ga.noop="6";const ya=Object.create(null);Object.keys(ga).forEach((e=>{ya[ga[e]]=e}));const wa={type:"error",data:"parser error"},_a=({type:e,data:t},a,d)=>t instanceof ArrayBuffer||ArrayBuffer.isView(t)?d(a?t:"b"+Sa(t,!0).toString("base64")):d(ga[e]+(t||"")),Sa=(e,t)=>Buffer.isBuffer(e)||e instanceof Uint8Array&&!t?e:e instanceof ArrayBuffer?Buffer.from(e):Buffer.from(e.buffer,e.byteOffset,e.byteLength);let Ea;function Na(e,t){if(e.data instanceof ArrayBuffer||ArrayBuffer.isView(e.data))return t(Sa(e.data,!1));_a(e,!0,(e=>{Ea||(Ea=new TextEncoder),t(Ea.encode(e))}))}const Ta=(e,t)=>{if("string"!=typeof e)return{type:"message",data:ka(e,t)};const a=e.charAt(0);if("b"===a){const a=Buffer.from(e.substring(1),"base64");return{type:"message",data:ka(a,t)}}return ya[a]?e.length>1?{type:ya[a],data:e.substring(1)}:{type:ya[a]}:wa},ka=(e,t)=>"arraybuffer"===t?e instanceof ArrayBuffer?e:Buffer.isBuffer(e)?e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength):e.buffer:Buffer.isBuffer(e)?e:Buffer.from(e),Aa=String.fromCharCode(30);let xa;function Ca(e){if(e)return function(e){for(var t in Ca.prototype)e[t]=Ca.prototype[t];return e}(e)}Ca.prototype.on=Ca.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},Ca.prototype.once=function(e,t){function a(){this.off(e,a),t.apply(this,arguments)}return a.fn=t,this.on(e,a),this},Ca.prototype.off=Ca.prototype.removeListener=Ca.prototype.removeAllListeners=Ca.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var a,d=this._callbacks["$"+e];if(!d)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i=0;i<d.length;i++)if((a=d[i])===t||a.fn===t){d.splice(i,1);break}return 0===d.length&&delete this._callbacks["$"+e],this},Ca.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=new Array(arguments.length-1),a=this._callbacks["$"+e],d=1;d<arguments.length;d++)t[d-1]=arguments[d];if(a){d=0;for(var i=(a=a.slice(0)).length;d<i;++d)a[d].apply(this,t)}return this},Ca.prototype.emitReserved=Ca.prototype.emit,Ca.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},Ca.prototype.hasListeners=function(e){return!!this.listeners(e).length};const Ma=global;function Da(e,...t){return t.reduce(((t,a)=>(e.hasOwnProperty(a)&&(t[a]=e[a]),t)),{})}const Oa=Ma.setTimeout,Ia=Ma.clearTimeout;function Va(e,t){t.useNativeTimers?(e.setTimeoutFn=Oa.bind(Ma),e.clearTimeoutFn=Ia.bind(Ma)):(e.setTimeoutFn=Ma.setTimeout.bind(Ma),e.clearTimeoutFn=Ma.clearTimeout.bind(Ma))}var Ra,La,Pa,Ba,Fa,ja={exports:{}},Ka={exports:{}};function Ua(){if(La)return Ra;La=1;var e=1e3,t=60*e,a=60*t,d=24*a,i=7*d,p=365.25*d;function r(e,t,a,d){var i=t>=1.5*a;return Math.round(e/a)+" "+d+(i?"s":"")}return Ra=function(n,s){s=s||{};var o=typeof n;if("string"===o&&n.length>0)return function(r){if((r=String(r)).length>100)return;var n=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(!n)return;var s=parseFloat(n[1]);switch((n[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return s*p;case"weeks":case"week":case"w":return s*i;case"days":case"day":case"d":return s*d;case"hours":case"hour":case"hrs":case"hr":case"h":return s*a;case"minutes":case"minute":case"mins":case"min":case"m":return s*t;case"seconds":case"second":case"secs":case"sec":case"s":return s*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return s;default:return}}(n);if("number"===o&&isFinite(n))return s.long?function(i){var p=Math.abs(i);if(p>=d)return r(i,p,d,"day");if(p>=a)return r(i,p,a,"hour");if(p>=t)return r(i,p,t,"minute");if(p>=e)return r(i,p,e,"second");return i+" ms"}(n):function(i){var p=Math.abs(i);if(p>=d)return Math.round(i/d)+"d";if(p>=a)return Math.round(i/a)+"h";if(p>=t)return Math.round(i/t)+"m";if(p>=e)return Math.round(i/e)+"s";return i+"ms"}(n);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(n))}}function qa(){if(Ba)return Pa;return Ba=1,Pa=function(e){function t(e){let d,i,p,r=null;function n(...e){if(!n.enabled)return;const a=n,i=Number(new Date),p=i-(d||i);a.diff=p,a.prev=d,a.curr=i,d=i,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let r=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((d,i)=>{if("%%"===d)return"%";r++;const p=t.formatters[i];if("function"==typeof p){const t=e[r];d=p.call(a,t),e.splice(r,1),r--}return d})),t.formatArgs.call(a,e);(a.log||t.log).apply(a,e)}return n.namespace=e,n.useColors=t.useColors(),n.color=t.selectColor(e),n.extend=a,n.destroy=t.destroy,Object.defineProperty(n,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==r?r:(i!==t.namespaces&&(i=t.namespaces,p=t.enabled(e)),p),set:e=>{r=e}}),"function"==typeof t.init&&t.init(n),n}function a(e,a){const d=t(this.namespace+(void 0===a?":":a)+e);return d.log=this.log,d}function d(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names.map(d),...t.skips.map(d).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let a;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const d=("string"==typeof e?e:"").split(/[\s,]+/),i=d.length;for(a=0;a<i;a++)d[a]&&("-"===(e=d[a].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let a,d;for(a=0,d=t.skips.length;a<d;a++)if(t.skips[a].test(e))return!1;for(a=0,d=t.names.length;a<d;a++)if(t.names[a].test(e))return!0;return!1},t.humanize=Ua(),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((a=>{t[a]=e[a]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let a=0;for(let t=0;t<e.length;t++)a=(a<<5)-a+e.charCodeAt(t),a|=0;return t.colors[Math.abs(a)%t.colors.length]},t.enable(t.load()),t},Pa}var za,$a,Ha,Ya,Wa,Ga={exports:{}};function Za(){return $a?za:($a=1,za=(e,t=process.argv)=>{const a=e.startsWith("-")?"":1===e.length?"-":"--",d=t.indexOf(a+e),i=t.indexOf("--");return-1!==d&&(-1===i||d<i)})}function Ja(){if(Ya)return Ha;Ya=1;const e=p,t=r,a=Za(),{env:d}=process;let i;function n(t,{streamIsTTY:p,sniffFlags:r=!0}={}){const n=function(){if("FORCE_COLOR"in d)return"true"===d.FORCE_COLOR?1:"false"===d.FORCE_COLOR?0:0===d.FORCE_COLOR.length?1:Math.min(Number.parseInt(d.FORCE_COLOR,10),3)}();void 0!==n&&(i=n);const s=r?i:n;if(0===s)return 0;if(r){if(a("color=16m")||a("color=full")||a("color=truecolor"))return 3;if(a("color=256"))return 2}if(t&&!p&&void 0===s)return 0;const o=s||0;if("dumb"===d.TERM)return o;if("win32"===process.platform){const t=e.release().split(".");return Number(t[0])>=10&&Number(t[2])>=10586?Number(t[2])>=14931?3:2:1}if("CI"in d)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE","DRONE"].some((e=>e in d))||"codeship"===d.CI_NAME?1:o;if("TEAMCITY_VERSION"in d)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(d.TEAMCITY_VERSION)?1:0;if("truecolor"===d.COLORTERM)return 3;if("TERM_PROGRAM"in d){const e=Number.parseInt((d.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(d.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(d.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(d.TERM)||"COLORTERM"in d?1:o}function s(e,t={}){return function(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}(n(e,{streamIsTTY:e&&e.isTTY,...t}))}return a("no-color")||a("no-colors")||a("color=false")||a("color=never")?i=0:(a("color")||a("colors")||a("color=true")||a("color=always"))&&(i=1),Ha={supportsColor:s,stdout:s({isTTY:t.isatty(1)}),stderr:s({isTTY:t.isatty(2)})}}"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?ja.exports=(Fa||(Fa=1,function(e,t){t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const a="color: "+this.color;t.splice(1,0,a,"color: inherit");let d=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(d++,"%c"===e&&(i=d))})),t.splice(i,0,a)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=qa()(t);const{formatters:a}=e.exports;a.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}(Ka,Ka.exports)),Ka.exports):ja.exports=(Wa||(Wa=1,function(e,t){const a=r,d=n;t.init=function(e){e.inspectOpts={};const a=Object.keys(t.inspectOpts);for(let d=0;d<a.length;d++)e.inspectOpts[a[d]]=t.inspectOpts[a[d]]},t.log=function(...e){return process.stderr.write(d.format(...e)+"\n")},t.formatArgs=function(a){const{namespace:d,useColors:i}=this;if(i){const t=this.color,i="[3"+(t<8?t:"8;5;"+t),p=`  ${i};1m${d} [0m`;a[0]=p+a[0].split("\n").join("\n"+p),a.push(i+"m+"+e.exports.humanize(this.diff)+"[0m")}else a[0]=(t.inspectOpts.hideDate?"":(new Date).toISOString()+" ")+d+" "+a[0]},t.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},t.load=function(){return process.env.DEBUG},t.useColors=function(){return"colors"in t.inspectOpts?Boolean(t.inspectOpts.colors):a.isatty(process.stderr.fd)},t.destroy=d.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),t.colors=[6,2,3,4,5,1];try{const e=Ja();e&&(e.stderr||e).level>=2&&(t.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}t.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,t)=>{const a=t.substring(6).toLowerCase().replace(/_([a-z])/g,((e,t)=>t.toUpperCase()));let d=process.env[t];return d=!!/^(yes|on|true|enabled)$/i.test(d)||!/^(no|off|false|disabled)$/i.test(d)&&("null"===d?null:Number(d)),e[a]=d,e}),{}),e.exports=qa()(t);const{formatters:i}=e.exports;i.o=function(e){return this.inspectOpts.colors=this.useColors,d.inspect(e,this.inspectOpts).split("\n").map((e=>e.trim())).join(" ")},i.O=function(e){return this.inspectOpts.colors=this.useColors,d.inspect(e,this.inspectOpts)}}(Ga,Ga.exports)),Ga.exports);var Xa=w(ja.exports);const Qa=Xa("engine.io-client:transport");class ed extends Error{constructor(e,t,a){super(e),this.description=t,this.context=a,this.type="TransportError"}}class td extends Ca{constructor(e){super(),this.writable=!1,Va(this,e),this.opts=e,this.query=e.query,this.socket=e.socket}onError(e,t,a){return super.emitReserved("error",new ed(e,t,a)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(e){"open"===this.readyState?this.write(e):Qa("transport is not open, discarding packets")}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(e){const t=Ta(e,this.socket.binaryType);this.onPacket(t)}onPacket(e){super.emitReserved("packet",e)}onClose(e){this.readyState="closed",super.emitReserved("close",e)}pause(e){}createUri(e,t={}){return e+"://"+this._hostname()+this._port()+this.opts.path+this._query(t)}_hostname(){const e=this.opts.hostname;return-1===e.indexOf(":")?e:"["+e+"]"}_port(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}_query(e){const t=function(e){let t="";for(let a in e)e.hasOwnProperty(a)&&(t.length&&(t+="&"),t+=encodeURIComponent(a)+"="+encodeURIComponent(e[a]));return t}(e);return t.length?"?"+t:""}}const ad="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),dd=64,id={};let pd,rd=0,nd=0;function sd(e){let t="";do{t=ad[e%dd]+t,e=Math.floor(e/dd)}while(e>0);return t}function od(){const e=sd(+new Date);return e!==pd?(rd=0,pd=e):e+"."+sd(rd++)}for(;nd<dd;nd++)id[ad[nd]]=nd;
/**
 * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.
 *
 * This can be used with JS designed for browsers to improve reuse of code and
 * allow the use of existing libraries.
 *
 * Usage: include("XMLHttpRequest.js") and use XMLHttpRequest per W3C specs.
 *
 * @author Dan DeFelippi <dan@driverdan.com>
 * @contributor David Ellis <d.f.ellis@ieee.org>
 * @license MIT
 */var ld=d,md=s,cd=o.spawn,ud=hd;function hd(e){e=e||{};var t,a,d=this,i=l,p=m,r={},n=!1,s={"User-Agent":"node-XMLHttpRequest",Accept:"*/*"},o=Object.assign({},s),c=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","content-transfer-encoding","cookie","cookie2","date","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","via"],u=["TRACE","TRACK","CONNECT"],h=!1,f=!1,v=!1,b={};this.UNSENT=0,this.OPENED=1,this.HEADERS_RECEIVED=2,this.LOADING=3,this.DONE=4,this.readyState=this.UNSENT,this.onreadystatechange=null,this.responseText="",this.responseXML="",this.status=null,this.statusText=null;this.open=function(e,t,a,d,i){if(this.abort(),f=!1,v=!1,!function(e){return e&&-1===u.indexOf(e)}(e))throw new Error("SecurityError: Request method not allowed");r={method:e,url:t.toString(),async:"boolean"!=typeof a||a,user:d||null,password:i||null},g(this.OPENED)},this.setDisableHeaderCheck=function(e){n=e},this.setRequestHeader=function(e,t){if(this.readyState!=this.OPENED)throw new Error("INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN");if(!function(e){return n||e&&-1===c.indexOf(e.toLowerCase())}(e))return console.warn('Refused to set unsafe header "'+e+'"'),!1;if(h)throw new Error("INVALID_STATE_ERR: send flag is true");return o[e]=t,!0},this.getResponseHeader=function(e){return"string"==typeof e&&this.readyState>this.OPENED&&a.headers[e.toLowerCase()]&&!f?a.headers[e.toLowerCase()]:null},this.getAllResponseHeaders=function(){if(this.readyState<this.HEADERS_RECEIVED||f)return"";var e="";for(var t in a.headers)"set-cookie"!==t&&"set-cookie2"!==t&&(e+=t+": "+a.headers[t]+"\r\n");return e.substr(0,e.length-2)},this.getRequestHeader=function(e){return"string"==typeof e&&o[e]?o[e]:""},this.send=function(n){if(this.readyState!=this.OPENED)throw new Error("INVALID_STATE_ERR: connection must be opened before send() is called");if(h)throw new Error("INVALID_STATE_ERR: send has already been called");var s,l=!1,m=!1,c=md.parse(r.url);switch(c.protocol){case"https:":l=!0;case"http:":s=c.hostname;break;case"file:":m=!0;break;case void 0:case"":s="localhost";break;default:throw new Error("Protocol not supported.")}if(m){if("GET"!==r.method)throw new Error("XMLHttpRequest: Only GET method is supported");if(r.async)ld.readFile(unescape(c.pathname),"utf8",(function(e,t){e?d.handleError(e,e.errno||-1):(d.status=200,d.responseText=t,g(d.DONE))}));else try{this.responseText=ld.readFileSync(unescape(c.pathname),"utf8"),this.status=200,g(d.DONE)}catch(e){this.handleError(e,e.errno||-1)}}else{var u=c.port||(l?443:80),v=c.pathname+(c.search?c.search:"");if(o.Host=s,l&&443===u||80===u||(o.Host+=":"+c.port),r.user){void 0===r.password&&(r.password="");var b=new Buffer(r.user+":"+r.password);o.Authorization="Basic "+b.toString("base64")}"GET"===r.method||"HEAD"===r.method?n=null:n?(o["Content-Length"]=Buffer.isBuffer(n)?n.length:Buffer.byteLength(n),o["Content-Type"]||(o["Content-Type"]="text/plain;charset=UTF-8")):"POST"===r.method&&(o["Content-Length"]=0);var y=e.agent||!1,w={host:s,port:u,path:v,method:r.method,headers:o,agent:y};if(l&&(w.pfx=e.pfx,w.key=e.key,w.passphrase=e.passphrase,w.cert=e.cert,w.ca=e.ca,w.ciphers=e.ciphers,w.rejectUnauthorized=!1!==e.rejectUnauthorized),f=!1,r.async){var _=l?p.request:i.request;h=!0,d.dispatchEvent("readystatechange");var S=function(i){if(302===(a=i).statusCode||303===a.statusCode||307===a.statusCode){r.url=a.headers.location;var p=md.parse(r.url);s=p.hostname;var n={hostname:p.hostname,port:p.port,path:p.path,method:303===a.statusCode?"GET":r.method,headers:o};return l&&(n.pfx=e.pfx,n.key=e.key,n.passphrase=e.passphrase,n.cert=e.cert,n.ca=e.ca,n.ciphers=e.ciphers,n.rejectUnauthorized=!1!==e.rejectUnauthorized),void(t=_(n,S).on("error",E)).end()}a&&a.setEncoding&&a.setEncoding("utf8"),g(d.HEADERS_RECEIVED),d.status=a.statusCode,a.on("data",(function(e){e&&(d.responseText+=e),h&&g(d.LOADING)})),a.on("end",(function(){h&&(h=!1,g(d.DONE))})),a.on("error",(function(e){d.handleError(e)}))},E=function(e){d.handleError(e)};t=_(w,S).on("error",E),e.autoUnref&&t.on("socket",(e=>{e.unref()})),n&&t.write(n),t.end(),d.dispatchEvent("loadstart")}else{var N=".node-xmlhttprequest-content-"+process.pid,T=".node-xmlhttprequest-sync-"+process.pid;ld.writeFileSync(T,"","utf8");for(var k="var http = require('http'), https = require('https'), fs = require('fs');var doRequest = http"+(l?"s":"")+".request;var options = "+JSON.stringify(w)+";var responseText = '';var req = doRequest(options, function(response) {response.setEncoding('utf8');response.on('data', function(chunk) {  responseText += chunk;});response.on('end', function() {fs.writeFileSync('"+N+"', 'NODE-XMLHTTPREQUEST-STATUS:' + response.statusCode + ',' + responseText, 'utf8');fs.unlinkSync('"+T+"');});response.on('error', function(error) {fs.writeFileSync('"+N+"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');fs.unlinkSync('"+T+"');});}).on('error', function(error) {fs.writeFileSync('"+N+"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');fs.unlinkSync('"+T+"');});"+(n?"req.write('"+JSON.stringify(n).slice(1,-1).replace(/'/g,"\\'")+"');":"")+"req.end();",A=cd(process.argv[0],["-e",k]);ld.existsSync(T););if(d.responseText=ld.readFileSync(N,"utf8"),A.stdin.end(),ld.unlinkSync(N),d.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)){var x=d.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/,"");d.handleError(x,503)}else d.status=d.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/,"$1"),d.responseText=d.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/,"$1"),g(d.DONE)}}},this.handleError=function(e,t){this.status=t||0,this.statusText=e,this.responseText=e.stack,f=!0,g(this.DONE)},this.abort=function(){t&&(t.abort(),t=null),o=Object.assign({},s),this.responseText="",this.responseXML="",f=v=!0,this.readyState===this.UNSENT||this.readyState===this.OPENED&&!h||this.readyState===this.DONE||(h=!1,g(this.DONE)),this.readyState=this.UNSENT},this.addEventListener=function(e,t){e in b||(b[e]=[]),b[e].push(t)},this.removeEventListener=function(e,t){e in b&&(b[e]=b[e].filter((function(e){return e!==t})))},this.dispatchEvent=function(e){if("function"==typeof d["on"+e]&&(this.readyState===this.DONE?setImmediate((function(){d["on"+e]()})):d["on"+e]()),e in b)for(let t=0,a=b[e].length;t<a;t++)this.readyState===this.DONE?setImmediate((function(){b[e][t].call(d)})):b[e][t].call(d)};var g=function(e){if(!(d.readyState===e||d.readyState===d.UNSENT&&v)&&(d.readyState=e,(r.async||d.readyState<d.OPENED||d.readyState===d.DONE)&&d.dispatchEvent("readystatechange"),d.readyState===d.DONE)){let e;e=v?"abort":f?"error":"load",d.dispatchEvent(e),d.dispatchEvent("loadend")}}}hd.XMLHttpRequest=hd;var fd=w(ud);const vd=fd||g({__proto__:null,default:fd},[ud]);class bd{constructor(){this.cookies=new Map}parseCookies(e){const t=e.getResponseHeader("set-cookie");t&&t.forEach((e=>{const t=function(e){const t=e.split("; "),a=t[0].indexOf("=");if(-1===a)return;const d=t[0].substring(0,a).trim();if(!d.length)return;let i=t[0].substring(a+1).trim();34===i.charCodeAt(0)&&(i=i.slice(1,-1));const p={name:d,value:i};for(let e=1;e<t.length;e++){const a=t[e].split("=");if(2!==a.length)continue;const d=a[0].trim(),i=a[1].trim();switch(d){case"Expires":p.expires=new Date(i);break;case"Max-Age":const e=new Date;e.setUTCSeconds(e.getUTCSeconds()+parseInt(i,10)),p.expires=e}}return p}(e);t&&this.cookies.set(t.name,t)}))}addCookies(e){const t=[];this.cookies.forEach(((e,a)=>{var d;(null===(d=e.expires)||void 0===d?void 0:d.getTime())<Date.now()?this.cookies.delete(a):t.push(`${a}=${e.value}`)})),t.length&&(e.setDisableHeaderCheck(!0),e.setRequestHeader("cookie",t.join("; ")))}}const gd=Xa("engine.io-client:polling");function yd(){}const wd=null!=new vd({xdomain:!1}).responseType;let _d=class e extends Ca{constructor(e,t){super(),Va(this,t),this.opts=t,this.method=t.method||"GET",this.uri=e,this.data=void 0!==t.data?t.data:null,this.create()}create(){var t;const a=Da(this.opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");a.xdomain=!!this.opts.xd;const d=this.xhr=new vd(a);try{gd("xhr open %s: %s",this.method,this.uri),d.open(this.method,this.uri,!0);try{if(this.opts.extraHeaders){d.setDisableHeaderCheck&&d.setDisableHeaderCheck(!0);for(let e in this.opts.extraHeaders)this.opts.extraHeaders.hasOwnProperty(e)&&d.setRequestHeader(e,this.opts.extraHeaders[e])}}catch(e){}if("POST"===this.method)try{d.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(e){}try{d.setRequestHeader("Accept","*/*")}catch(e){}null===(t=this.opts.cookieJar)||void 0===t||t.addCookies(d),"withCredentials"in d&&(d.withCredentials=this.opts.withCredentials),this.opts.requestTimeout&&(d.timeout=this.opts.requestTimeout),d.onreadystatechange=()=>{var e;3===d.readyState&&(null===(e=this.opts.cookieJar)||void 0===e||e.parseCookies(d)),4===d.readyState&&(200===d.status||1223===d.status?this.onLoad():this.setTimeoutFn((()=>{this.onError("number"==typeof d.status?d.status:0)}),0))},gd("xhr data %s",this.data),d.send(this.data)}catch(e){return void this.setTimeoutFn((()=>{this.onError(e)}),0)}"undefined"!=typeof document&&(this.index=e.requestsCount++,e.requests[this.index]=this)}onError(e){this.emitReserved("error",e,this.xhr),this.cleanup(!0)}cleanup(t){if(void 0!==this.xhr&&null!==this.xhr){if(this.xhr.onreadystatechange=yd,t)try{this.xhr.abort()}catch(e){}"undefined"!=typeof document&&delete e.requests[this.index],this.xhr=null}}onLoad(){const e=this.xhr.responseText;null!==e&&(this.emitReserved("data",e),this.emitReserved("success"),this.cleanup())}abort(){this.cleanup()}};if(_d.requestsCount=0,_d.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",Sd);else if("function"==typeof addEventListener){addEventListener("onpagehide"in Ma?"pagehide":"unload",Sd,!1)}function Sd(){for(let e in _d.requests)_d.requests.hasOwnProperty(e)&&_d.requests[e].abort()}var Ed,Nd,Td,kd={exports:{}},Ad={BINARY_TYPES:["nodebuffer","arraybuffer","fragments"],EMPTY_BUFFER:Buffer.alloc(0),GUID:"258EAFA5-E914-47DA-95CA-C5AB0DC85B11",kForOnEventAttribute:Symbol("kIsForOnEventAttribute"),kListener:Symbol("kListener"),kStatusCode:Symbol("status-code"),kWebSocket:Symbol("websocket"),NOOP:()=>{}},xd={exports:{}};const{EMPTY_BUFFER:Cd}=Ad;function Md(e,t,a,d,i){for(let p=0;p<i;p++)a[d+p]=e[p]^t[3&p]}function Dd(e,t){for(let a=0;a<e.length;a++)e[a]^=t[3&a]}if(kd.exports={concat:function(e,t){if(0===e.length)return Cd;if(1===e.length)return e[0];const a=Buffer.allocUnsafe(t);let d=0;for(let t=0;t<e.length;t++){const i=e[t];a.set(i,d),d+=i.length}return d<t?a.slice(0,d):a},mask:Md,toArrayBuffer:function(e){return e.byteLength===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)},toBuffer:function e(t){if(e.readOnly=!0,Buffer.isBuffer(t))return t;let a;return t instanceof ArrayBuffer?a=Buffer.from(t):ArrayBuffer.isView(t)?a=Buffer.from(t.buffer,t.byteOffset,t.byteLength):(a=Buffer.from(t),e.readOnly=!1),a},unmask:Dd},!process.env.WS_NO_BUFFER_UTIL)try{const e=function(){if(Td)return xd.exports;Td=1;try{xd.exports=z()(__dirname)}catch(e){xd.exports=(Nd||(Nd=1,Ed={mask:(e,t,a,d,i)=>{for(var p=0;p<i;p++)a[d+p]=e[p]^t[3&p]},unmask:(e,t)=>{const a=e.length;for(var d=0;d<a;d++)e[d]^=t[3&d]}}),Ed)}return xd.exports}();kd.exports.mask=function(t,a,d,i,p){p<48?Md(t,a,d,i,p):e.mask(t,a,d,i,p)},kd.exports.unmask=function(t,a){t.length<32?Dd(t,a):e.unmask(t,a)}}catch(e){}var Od=kd.exports;const Id=Symbol("kDone"),Vd=Symbol("kRun");const Rd=u,Ld=Od,Pd=class{constructor(e){this[Id]=()=>{this.pending--,this[Vd]()},this.concurrency=e||1/0,this.jobs=[],this.pending=0}add(e){this.jobs.push(e),this[Vd]()}[Vd](){if(this.pending!==this.concurrency&&this.jobs.length){const e=this.jobs.shift();this.pending++,e(this[Id])}}},{kStatusCode:Bd}=Ad,Fd=Buffer.from([0,0,255,255]),jd=Symbol("permessage-deflate"),Kd=Symbol("total-length"),Ud=Symbol("callback"),qd=Symbol("buffers"),zd=Symbol("error");let $d;var Hd=class{constructor(e,t,a){if(this._maxPayload=0|a,this._options=e||{},this._threshold=void 0!==this._options.threshold?this._options.threshold:1024,this._isServer=!!t,this._deflate=null,this._inflate=null,this.params=null,!$d){const e=void 0!==this._options.concurrencyLimit?this._options.concurrencyLimit:10;$d=new Pd(e)}}static get extensionName(){return"permessage-deflate"}offer(){const e={};return this._options.serverNoContextTakeover&&(e.server_no_context_takeover=!0),this._options.clientNoContextTakeover&&(e.client_no_context_takeover=!0),this._options.serverMaxWindowBits&&(e.server_max_window_bits=this._options.serverMaxWindowBits),this._options.clientMaxWindowBits?e.client_max_window_bits=this._options.clientMaxWindowBits:null==this._options.clientMaxWindowBits&&(e.client_max_window_bits=!0),e}accept(e){return e=this.normalizeParams(e),this.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e),this.params}cleanup(){if(this._inflate&&(this._inflate.close(),this._inflate=null),this._deflate){const e=this._deflate[Ud];this._deflate.close(),this._deflate=null,e&&e(new Error("The deflate stream was closed while data was being processed"))}}acceptAsServer(e){const t=this._options,a=e.find((e=>!(!1===t.serverNoContextTakeover&&e.server_no_context_takeover||e.server_max_window_bits&&(!1===t.serverMaxWindowBits||"number"==typeof t.serverMaxWindowBits&&t.serverMaxWindowBits>e.server_max_window_bits)||"number"==typeof t.clientMaxWindowBits&&!e.client_max_window_bits)));if(!a)throw new Error("None of the extension offers can be accepted");return t.serverNoContextTakeover&&(a.server_no_context_takeover=!0),t.clientNoContextTakeover&&(a.client_no_context_takeover=!0),"number"==typeof t.serverMaxWindowBits&&(a.server_max_window_bits=t.serverMaxWindowBits),"number"==typeof t.clientMaxWindowBits?a.client_max_window_bits=t.clientMaxWindowBits:!0!==a.client_max_window_bits&&!1!==t.clientMaxWindowBits||delete a.client_max_window_bits,a}acceptAsClient(e){const t=e[0];if(!1===this._options.clientNoContextTakeover&&t.client_no_context_takeover)throw new Error('Unexpected parameter "client_no_context_takeover"');if(t.client_max_window_bits){if(!1===this._options.clientMaxWindowBits||"number"==typeof this._options.clientMaxWindowBits&&t.client_max_window_bits>this._options.clientMaxWindowBits)throw new Error('Unexpected or invalid parameter "client_max_window_bits"')}else"number"==typeof this._options.clientMaxWindowBits&&(t.client_max_window_bits=this._options.clientMaxWindowBits);return t}normalizeParams(e){return e.forEach((e=>{Object.keys(e).forEach((t=>{let a=e[t];if(a.length>1)throw new Error(`Parameter "${t}" must have only a single value`);if(a=a[0],"client_max_window_bits"===t){if(!0!==a){const e=+a;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${a}`);a=e}else if(!this._isServer)throw new TypeError(`Invalid value for parameter "${t}": ${a}`)}else if("server_max_window_bits"===t){const e=+a;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${a}`);a=e}else{if("client_no_context_takeover"!==t&&"server_no_context_takeover"!==t)throw new Error(`Unknown parameter "${t}"`);if(!0!==a)throw new TypeError(`Invalid value for parameter "${t}": ${a}`)}e[t]=a}))})),e}decompress(e,t,a){$d.add((d=>{this._decompress(e,t,((e,t)=>{d(),a(e,t)}))}))}compress(e,t,a){$d.add((d=>{this._compress(e,t,((e,t)=>{d(),a(e,t)}))}))}_decompress(e,t,a){const d=this._isServer?"client":"server";if(!this._inflate){const e=`${d}_max_window_bits`,t="number"!=typeof this.params[e]?Rd.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=Rd.createInflateRaw({...this._options.zlibInflateOptions,windowBits:t}),this._inflate[jd]=this,this._inflate[Kd]=0,this._inflate[qd]=[],this._inflate.on("error",Gd),this._inflate.on("data",Wd)}this._inflate[Ud]=a,this._inflate.write(e),t&&this._inflate.write(Fd),this._inflate.flush((()=>{const e=this._inflate[zd];if(e)return this._inflate.close(),this._inflate=null,void a(e);const i=Ld.concat(this._inflate[qd],this._inflate[Kd]);this._inflate._readableState.endEmitted?(this._inflate.close(),this._inflate=null):(this._inflate[Kd]=0,this._inflate[qd]=[],t&&this.params[`${d}_no_context_takeover`]&&this._inflate.reset()),a(null,i)}))}_compress(e,t,a){const d=this._isServer?"server":"client";if(!this._deflate){const e=`${d}_max_window_bits`,t="number"!=typeof this.params[e]?Rd.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=Rd.createDeflateRaw({...this._options.zlibDeflateOptions,windowBits:t}),this._deflate[Kd]=0,this._deflate[qd]=[],this._deflate.on("data",Yd)}this._deflate[Ud]=a,this._deflate.write(e),this._deflate.flush(Rd.Z_SYNC_FLUSH,(()=>{if(!this._deflate)return;let e=Ld.concat(this._deflate[qd],this._deflate[Kd]);t&&(e=e.slice(0,e.length-4)),this._deflate[Ud]=null,this._deflate[Kd]=0,this._deflate[qd]=[],t&&this.params[`${d}_no_context_takeover`]&&this._deflate.reset(),a(null,e)}))}};function Yd(e){this[qd].push(e),this[Kd]+=e.length}function Wd(e){this[Kd]+=e.length,this[jd]._maxPayload<1||this[Kd]<=this[jd]._maxPayload?this[qd].push(e):(this[zd]=new RangeError("Max payload size exceeded"),this[zd].code="WS_ERR_UNSUPPORTED_MESSAGE_LENGTH",this[zd][Bd]=1009,this.removeListener("data",Wd),this.reset())}function Gd(e){this[jd]._inflate=null,e[Bd]=1007,this[Ud](e)}var Zd,Jd,Xd,Qd={exports:{}},ei={exports:{}};function ti(e){const t=e.length;let a=0;for(;a<t;)if(0==(128&e[a]))a++;else if(192==(224&e[a])){if(a+1===t||128!=(192&e[a+1])||192==(254&e[a]))return!1;a+=2}else if(224==(240&e[a])){if(a+2>=t||128!=(192&e[a+1])||128!=(192&e[a+2])||224===e[a]&&128==(224&e[a+1])||237===e[a]&&160==(224&e[a+1]))return!1;a+=3}else{if(240!=(248&e[a]))return!1;if(a+3>=t||128!=(192&e[a+1])||128!=(192&e[a+2])||128!=(192&e[a+3])||240===e[a]&&128==(240&e[a+1])||244===e[a]&&e[a+1]>143||e[a]>244)return!1;a+=4}return!0}if(Qd.exports={isValidStatusCode:function(e){return e>=1e3&&e<=1014&&1004!==e&&1005!==e&&1006!==e||e>=3e3&&e<=4999},isValidUTF8:ti,tokenChars:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0]},!process.env.WS_NO_UTF_8_VALIDATE)try{const e=function(){if(Xd)return ei.exports;Xd=1;try{ei.exports=z()(__dirname)}catch(e){ei.exports=(Jd||(Jd=1,Zd=function(e){const t=e.length;let a=0;for(;a<t;)if(0==(128&e[a]))a++;else if(192==(224&e[a])){if(a+1===t||128!=(192&e[a+1])||192==(254&e[a]))return!1;a+=2}else if(224==(240&e[a])){if(a+2>=t||128!=(192&e[a+1])||128!=(192&e[a+2])||224===e[a]&&128==(224&e[a+1])||237===e[a]&&160==(224&e[a+1]))return!1;a+=3}else{if(240!=(248&e[a]))return!1;if(a+3>=t||128!=(192&e[a+1])||128!=(192&e[a+2])||128!=(192&e[a+3])||240===e[a]&&128==(240&e[a+1])||244===e[a]&&e[a+1]>143||e[a]>244)return!1;a+=4}return!0}),Zd)}return ei.exports}();Qd.exports.isValidUTF8=function(t){return t.length<150?ti(t):e(t)}}catch(e){}var ai=Qd.exports;const{Writable:di}=c,ii=Hd,{BINARY_TYPES:pi,EMPTY_BUFFER:ri,kStatusCode:ni,kWebSocket:si}=Ad,{concat:oi,toArrayBuffer:li,unmask:mi}=Od,{isValidStatusCode:ci,isValidUTF8:ui}=ai;var hi=class extends di{constructor(e={}){super(),this._binaryType=e.binaryType||pi[0],this._extensions=e.extensions||{},this._isServer=!!e.isServer,this._maxPayload=0|e.maxPayload,this._skipUTF8Validation=!!e.skipUTF8Validation,this[si]=void 0,this._bufferedBytes=0,this._buffers=[],this._compressed=!1,this._payloadLength=0,this._mask=void 0,this._fragmented=0,this._masked=!1,this._fin=!1,this._opcode=0,this._totalPayloadLength=0,this._messageLength=0,this._fragments=[],this._state=0,this._loop=!1}_write(e,t,a){if(8===this._opcode&&0==this._state)return a();this._bufferedBytes+=e.length,this._buffers.push(e),this.startLoop(a)}consume(e){if(this._bufferedBytes-=e,e===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length){const t=this._buffers[0];return this._buffers[0]=t.slice(e),t.slice(0,e)}const t=Buffer.allocUnsafe(e);do{const a=this._buffers[0],d=t.length-e;e>=a.length?t.set(this._buffers.shift(),d):(t.set(new Uint8Array(a.buffer,a.byteOffset,e),d),this._buffers[0]=a.slice(e)),e-=a.length}while(e>0);return t}startLoop(e){let t;this._loop=!0;do{switch(this._state){case 0:t=this.getInfo();break;case 1:t=this.getPayloadLength16();break;case 2:t=this.getPayloadLength64();break;case 3:this.getMask();break;case 4:t=this.getData(e);break;default:return void(this._loop=!1)}}while(this._loop);e(t)}getInfo(){if(this._bufferedBytes<2)return void(this._loop=!1);const e=this.consume(2);if(0!=(48&e[0]))return this._loop=!1,fi(RangeError,"RSV2 and RSV3 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_2_3");const t=64==(64&e[0]);if(t&&!this._extensions[ii.extensionName])return this._loop=!1,fi(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");if(this._fin=128==(128&e[0]),this._opcode=15&e[0],this._payloadLength=127&e[1],0===this._opcode){if(t)return this._loop=!1,fi(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");if(!this._fragmented)return this._loop=!1,fi(RangeError,"invalid opcode 0",!0,1002,"WS_ERR_INVALID_OPCODE");this._opcode=this._fragmented}else if(1===this._opcode||2===this._opcode){if(this._fragmented)return this._loop=!1,fi(RangeError,`invalid opcode ${this._opcode}`,!0,1002,"WS_ERR_INVALID_OPCODE");this._compressed=t}else{if(!(this._opcode>7&&this._opcode<11))return this._loop=!1,fi(RangeError,`invalid opcode ${this._opcode}`,!0,1002,"WS_ERR_INVALID_OPCODE");if(!this._fin)return this._loop=!1,fi(RangeError,"FIN must be set",!0,1002,"WS_ERR_EXPECTED_FIN");if(t)return this._loop=!1,fi(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");if(this._payloadLength>125)return this._loop=!1,fi(RangeError,`invalid payload length ${this._payloadLength}`,!0,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH")}if(this._fin||this._fragmented||(this._fragmented=this._opcode),this._masked=128==(128&e[1]),this._isServer){if(!this._masked)return this._loop=!1,fi(RangeError,"MASK must be set",!0,1002,"WS_ERR_EXPECTED_MASK")}else if(this._masked)return this._loop=!1,fi(RangeError,"MASK must be clear",!0,1002,"WS_ERR_UNEXPECTED_MASK");if(126===this._payloadLength)this._state=1;else{if(127!==this._payloadLength)return this.haveLength();this._state=2}}getPayloadLength16(){if(!(this._bufferedBytes<2))return this._payloadLength=this.consume(2).readUInt16BE(0),this.haveLength();this._loop=!1}getPayloadLength64(){if(this._bufferedBytes<8)return void(this._loop=!1);const e=this.consume(8),t=e.readUInt32BE(0);return t>Math.pow(2,21)-1?(this._loop=!1,fi(RangeError,"Unsupported WebSocket frame: payload length > 2^53 - 1",!1,1009,"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH")):(this._payloadLength=t*Math.pow(2,32)+e.readUInt32BE(4),this.haveLength())}haveLength(){if(this._payloadLength&&this._opcode<8&&(this._totalPayloadLength+=this._payloadLength,this._totalPayloadLength>this._maxPayload&&this._maxPayload>0))return this._loop=!1,fi(RangeError,"Max payload size exceeded",!1,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");this._masked?this._state=3:this._state=4}getMask(){this._bufferedBytes<4?this._loop=!1:(this._mask=this.consume(4),this._state=4)}getData(e){let t=ri;if(this._payloadLength){if(this._bufferedBytes<this._payloadLength)return void(this._loop=!1);t=this.consume(this._payloadLength),this._masked&&0!=(this._mask[0]|this._mask[1]|this._mask[2]|this._mask[3])&&mi(t,this._mask)}return this._opcode>7?this.controlMessage(t):this._compressed?(this._state=5,void this.decompress(t,e)):(t.length&&(this._messageLength=this._totalPayloadLength,this._fragments.push(t)),this.dataMessage())}decompress(e,t){this._extensions[ii.extensionName].decompress(e,this._fin,((e,a)=>{if(e)return t(e);if(a.length){if(this._messageLength+=a.length,this._messageLength>this._maxPayload&&this._maxPayload>0)return t(fi(RangeError,"Max payload size exceeded",!1,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"));this._fragments.push(a)}const d=this.dataMessage();if(d)return t(d);this.startLoop(t)}))}dataMessage(){if(this._fin){const e=this._messageLength,t=this._fragments;if(this._totalPayloadLength=0,this._messageLength=0,this._fragmented=0,this._fragments=[],2===this._opcode){let a;a="nodebuffer"===this._binaryType?oi(t,e):"arraybuffer"===this._binaryType?li(oi(t,e)):t,this.emit("message",a,!0)}else{const a=oi(t,e);if(!this._skipUTF8Validation&&!ui(a))return this._loop=!1,fi(Error,"invalid UTF-8 sequence",!0,1007,"WS_ERR_INVALID_UTF8");this.emit("message",a,!1)}}this._state=0}controlMessage(e){if(8===this._opcode)if(this._loop=!1,0===e.length)this.emit("conclude",1005,ri),this.end();else{if(1===e.length)return fi(RangeError,"invalid payload length 1",!0,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");{const t=e.readUInt16BE(0);if(!ci(t))return fi(RangeError,`invalid status code ${t}`,!0,1002,"WS_ERR_INVALID_CLOSE_CODE");const a=e.slice(2);if(!this._skipUTF8Validation&&!ui(a))return fi(Error,"invalid UTF-8 sequence",!0,1007,"WS_ERR_INVALID_UTF8");this.emit("conclude",t,a),this.end()}}else 9===this._opcode?this.emit("ping",e):this.emit("pong",e);this._state=0}};function fi(e,t,a,d,i){const p=new e(a?`Invalid WebSocket frame: ${t}`:t);return Error.captureStackTrace(p,fi),p.code=i,p[ni]=d,p}const{randomFillSync:vi}=a,bi=Hd,{EMPTY_BUFFER:gi}=Ad,{isValidStatusCode:yi}=ai,{mask:wi,toBuffer:_i}=Od,Si=Symbol("kByteLength"),Ei=Buffer.alloc(4);var Ni=class e{constructor(e,t,a){this._extensions=t||{},a&&(this._generateMask=a,this._maskBuffer=Buffer.alloc(4)),this._socket=e,this._firstFragment=!0,this._compress=!1,this._bufferedBytes=0,this._deflating=!1,this._queue=[]}static frame(e,t){let a,d,i=!1,p=2,r=!1;t.mask&&(a=t.maskBuffer||Ei,t.generateMask?t.generateMask(a):vi(a,0,4),r=0==(a[0]|a[1]|a[2]|a[3]),p=6),"string"==typeof e?d=t.mask&&!r||void 0===t[Si]?(e=Buffer.from(e)).length:t[Si]:(d=e.length,i=t.mask&&t.readOnly&&!r);let n=d;d>=65536?(p+=8,n=127):d>125&&(p+=2,n=126);const s=Buffer.allocUnsafe(i?d+p:p);return s[0]=t.fin?128|t.opcode:t.opcode,t.rsv1&&(s[0]|=64),s[1]=n,126===n?s.writeUInt16BE(d,2):127===n&&(s[2]=s[3]=0,s.writeUIntBE(d,4,6)),t.mask?(s[1]|=128,s[p-4]=a[0],s[p-3]=a[1],s[p-2]=a[2],s[p-1]=a[3],r?[s,e]:i?(wi(e,a,s,p,d),[s]):(wi(e,a,e,0,d),[s,e])):[s,e]}close(t,a,d,i){let p;if(void 0===t)p=gi;else{if("number"!=typeof t||!yi(t))throw new TypeError("First argument must be a valid error code number");if(void 0!==a&&a.length){const e=Buffer.byteLength(a);if(e>123)throw new RangeError("The message must not be greater than 123 bytes");p=Buffer.allocUnsafe(2+e),p.writeUInt16BE(t,0),"string"==typeof a?p.write(a,2):p.set(a,2)}else p=Buffer.allocUnsafe(2),p.writeUInt16BE(t,0)}const r={[Si]:p.length,fin:!0,generateMask:this._generateMask,mask:d,maskBuffer:this._maskBuffer,opcode:8,readOnly:!1,rsv1:!1};this._deflating?this.enqueue([this.dispatch,p,!1,r,i]):this.sendFrame(e.frame(p,r),i)}ping(t,a,d){let i,p;if("string"==typeof t?(i=Buffer.byteLength(t),p=!1):(i=(t=_i(t)).length,p=_i.readOnly),i>125)throw new RangeError("The data size must not be greater than 125 bytes");const r={[Si]:i,fin:!0,generateMask:this._generateMask,mask:a,maskBuffer:this._maskBuffer,opcode:9,readOnly:p,rsv1:!1};this._deflating?this.enqueue([this.dispatch,t,!1,r,d]):this.sendFrame(e.frame(t,r),d)}pong(t,a,d){let i,p;if("string"==typeof t?(i=Buffer.byteLength(t),p=!1):(i=(t=_i(t)).length,p=_i.readOnly),i>125)throw new RangeError("The data size must not be greater than 125 bytes");const r={[Si]:i,fin:!0,generateMask:this._generateMask,mask:a,maskBuffer:this._maskBuffer,opcode:10,readOnly:p,rsv1:!1};this._deflating?this.enqueue([this.dispatch,t,!1,r,d]):this.sendFrame(e.frame(t,r),d)}send(t,a,d){const i=this._extensions[bi.extensionName];let p,r,n=a.binary?2:1,s=a.compress;if("string"==typeof t?(p=Buffer.byteLength(t),r=!1):(p=(t=_i(t)).length,r=_i.readOnly),this._firstFragment?(this._firstFragment=!1,s&&i&&i.params[i._isServer?"server_no_context_takeover":"client_no_context_takeover"]&&(s=p>=i._threshold),this._compress=s):(s=!1,n=0),a.fin&&(this._firstFragment=!0),i){const e={[Si]:p,fin:a.fin,generateMask:this._generateMask,mask:a.mask,maskBuffer:this._maskBuffer,opcode:n,readOnly:r,rsv1:s};this._deflating?this.enqueue([this.dispatch,t,this._compress,e,d]):this.dispatch(t,this._compress,e,d)}else this.sendFrame(e.frame(t,{[Si]:p,fin:a.fin,generateMask:this._generateMask,mask:a.mask,maskBuffer:this._maskBuffer,opcode:n,readOnly:r,rsv1:!1}),d)}dispatch(t,a,d,i){if(!a)return void this.sendFrame(e.frame(t,d),i);const p=this._extensions[bi.extensionName];this._bufferedBytes+=d[Si],this._deflating=!0,p.compress(t,d.fin,((t,a)=>{if(this._socket.destroyed){const e=new Error("The socket was closed while data was being compressed");"function"==typeof i&&i(e);for(let t=0;t<this._queue.length;t++){const a=this._queue[t],d=a[a.length-1];"function"==typeof d&&d(e)}}else this._bufferedBytes-=d[Si],this._deflating=!1,d.readOnly=!1,this.sendFrame(e.frame(a,d),i),this.dequeue()}))}dequeue(){for(;!this._deflating&&this._queue.length;){const e=this._queue.shift();this._bufferedBytes-=e[3][Si],Reflect.apply(e[0],this,e.slice(1))}}enqueue(e){this._bufferedBytes+=e[3][Si],this._queue.push(e)}sendFrame(e,t){2===e.length?(this._socket.cork(),this._socket.write(e[0]),this._socket.write(e[1],t),this._socket.uncork()):this._socket.write(e[0],t)}};const{kForOnEventAttribute:Ti,kListener:ki}=Ad,Ai=Symbol("kCode"),xi=Symbol("kData"),Ci=Symbol("kError"),Mi=Symbol("kMessage"),Di=Symbol("kReason"),Oi=Symbol("kTarget"),Ii=Symbol("kType"),Vi=Symbol("kWasClean");class Ri{constructor(e){this[Oi]=null,this[Ii]=e}get target(){return this[Oi]}get type(){return this[Ii]}}Object.defineProperty(Ri.prototype,"target",{enumerable:!0}),Object.defineProperty(Ri.prototype,"type",{enumerable:!0});class Li extends Ri{constructor(e,t={}){super(e),this[Ai]=void 0===t.code?0:t.code,this[Di]=void 0===t.reason?"":t.reason,this[Vi]=void 0!==t.wasClean&&t.wasClean}get code(){return this[Ai]}get reason(){return this[Di]}get wasClean(){return this[Vi]}}Object.defineProperty(Li.prototype,"code",{enumerable:!0}),Object.defineProperty(Li.prototype,"reason",{enumerable:!0}),Object.defineProperty(Li.prototype,"wasClean",{enumerable:!0});class Pi extends Ri{constructor(e,t={}){super(e),this[Ci]=void 0===t.error?null:t.error,this[Mi]=void 0===t.message?"":t.message}get error(){return this[Ci]}get message(){return this[Mi]}}Object.defineProperty(Pi.prototype,"error",{enumerable:!0}),Object.defineProperty(Pi.prototype,"message",{enumerable:!0});class Bi extends Ri{constructor(e,t={}){super(e),this[xi]=void 0===t.data?null:t.data}get data(){return this[xi]}}Object.defineProperty(Bi.prototype,"data",{enumerable:!0});const Fi={addEventListener(e,t,a={}){for(const d of this.listeners(e))if(!a[Ti]&&d[ki]===t&&!d[Ti])return;let d;if("message"===e)d=function(e,a){const d=new Bi("message",{data:a?e:e.toString()});d[Oi]=this,Ki(t,this,d)};else if("close"===e)d=function(e,a){const d=new Li("close",{code:e,reason:a.toString(),wasClean:this._closeFrameReceived&&this._closeFrameSent});d[Oi]=this,Ki(t,this,d)};else if("error"===e)d=function(e){const a=new Pi("error",{error:e,message:e.message});a[Oi]=this,Ki(t,this,a)};else{if("open"!==e)return;d=function(){const e=new Ri("open");e[Oi]=this,Ki(t,this,e)}}d[Ti]=!!a[Ti],d[ki]=t,a.once?this.once(e,d):this.on(e,d)},removeEventListener(e,t){for(const a of this.listeners(e))if(a[ki]===t&&!a[Ti]){this.removeListener(e,a);break}}};var ji={CloseEvent:Li,ErrorEvent:Pi,Event:Ri,EventTarget:Fi,MessageEvent:Bi};function Ki(e,t,a){"object"==typeof e&&e.handleEvent?e.handleEvent.call(e,a):e.call(t,a)}const{tokenChars:Ui}=ai;function qi(e,t,a){void 0===e[t]?e[t]=[a]:e[t].push(a)}var zi={format:function(e){return Object.keys(e).map((t=>{let a=e[t];return Array.isArray(a)||(a=[a]),a.map((e=>[t].concat(Object.keys(e).map((t=>{let a=e[t];return Array.isArray(a)||(a=[a]),a.map((e=>!0===e?t:`${t}=${e}`)).join("; ")}))).join("; "))).join(", ")})).join(", ")},parse:function(e){const t=Object.create(null);let a,d,i=Object.create(null),p=!1,r=!1,n=!1,s=-1,o=-1,l=-1,m=0;for(;m<e.length;m++)if(o=e.charCodeAt(m),void 0===a)if(-1===l&&1===Ui[o])-1===s&&(s=m);else if(0===m||32!==o&&9!==o){if(59!==o&&44!==o)throw new SyntaxError(`Unexpected character at index ${m}`);{if(-1===s)throw new SyntaxError(`Unexpected character at index ${m}`);-1===l&&(l=m);const d=e.slice(s,l);44===o?(qi(t,d,i),i=Object.create(null)):a=d,s=l=-1}}else-1===l&&-1!==s&&(l=m);else if(void 0===d)if(-1===l&&1===Ui[o])-1===s&&(s=m);else if(32===o||9===o)-1===l&&-1!==s&&(l=m);else if(59===o||44===o){if(-1===s)throw new SyntaxError(`Unexpected character at index ${m}`);-1===l&&(l=m),qi(i,e.slice(s,l),!0),44===o&&(qi(t,a,i),i=Object.create(null),a=void 0),s=l=-1}else{if(61!==o||-1===s||-1!==l)throw new SyntaxError(`Unexpected character at index ${m}`);d=e.slice(s,m),s=l=-1}else if(r){if(1!==Ui[o])throw new SyntaxError(`Unexpected character at index ${m}`);-1===s?s=m:p||(p=!0),r=!1}else if(n)if(1===Ui[o])-1===s&&(s=m);else if(34===o&&-1!==s)n=!1,l=m;else{if(92!==o)throw new SyntaxError(`Unexpected character at index ${m}`);r=!0}else if(34===o&&61===e.charCodeAt(m-1))n=!0;else if(-1===l&&1===Ui[o])-1===s&&(s=m);else if(-1===s||32!==o&&9!==o){if(59!==o&&44!==o)throw new SyntaxError(`Unexpected character at index ${m}`);{if(-1===s)throw new SyntaxError(`Unexpected character at index ${m}`);-1===l&&(l=m);let r=e.slice(s,l);p&&(r=r.replace(/\\/g,""),p=!1),qi(i,d,r),44===o&&(qi(t,a,i),i=Object.create(null),a=void 0),d=void 0,s=l=-1}}else-1===l&&(l=m);if(-1===s||n||32===o||9===o)throw new SyntaxError("Unexpected end of input");-1===l&&(l=m);const c=e.slice(s,l);return void 0===a?qi(t,c,i):(void 0===d?qi(i,c,!0):qi(i,d,p?c.replace(/\\/g,""):c),qi(t,a,i)),t}};const $i=v,Hi=m,Yi=l,Wi=h,Gi=f,{randomBytes:Zi,createHash:Ji}=a,{URL:Xi}=s,Qi=Hd,ep=hi,tp=Ni,{BINARY_TYPES:ap,EMPTY_BUFFER:dp,GUID:ip,kForOnEventAttribute:pp,kListener:rp,kStatusCode:np,kWebSocket:sp,NOOP:op}=Ad,{EventTarget:{addEventListener:lp,removeEventListener:mp}}=ji,{format:cp,parse:up}=zi,{toBuffer:hp}=Od,fp=Symbol("kAborted"),vp=[8,13],bp=["CONNECTING","OPEN","CLOSING","CLOSED"],gp=/^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;let yp=class e extends $i{constructor(t,a,d){super(),this._binaryType=ap[0],this._closeCode=1006,this._closeFrameReceived=!1,this._closeFrameSent=!1,this._closeMessage=dp,this._closeTimer=null,this._extensions={},this._paused=!1,this._protocol="",this._readyState=e.CONNECTING,this._receiver=null,this._sender=null,this._socket=null,null!==t?(this._bufferedAmount=0,this._isServer=!1,this._redirects=0,void 0===a?a=[]:Array.isArray(a)||("object"==typeof a&&null!==a?(d=a,a=[]):a=[a]),wp(this,t,a,d)):this._isServer=!0}get binaryType(){return this._binaryType}set binaryType(e){ap.includes(e)&&(this._binaryType=e,this._receiver&&(this._receiver._binaryType=e))}get bufferedAmount(){return this._socket?this._socket._writableState.length+this._sender._bufferedBytes:this._bufferedAmount}get extensions(){return Object.keys(this._extensions).join()}get isPaused(){return this._paused}get onclose(){return null}get onerror(){return null}get onopen(){return null}get onmessage(){return null}get protocol(){return this._protocol}get readyState(){return this._readyState}get url(){return this._url}setSocket(t,a,d){const i=new ep({binaryType:this.binaryType,extensions:this._extensions,isServer:this._isServer,maxPayload:d.maxPayload,skipUTF8Validation:d.skipUTF8Validation});this._sender=new tp(t,this._extensions,d.generateMask),this._receiver=i,this._socket=t,i[sp]=this,t[sp]=this,i.on("conclude",kp),i.on("drain",Ap),i.on("error",xp),i.on("message",Mp),i.on("ping",Dp),i.on("pong",Op),t.setTimeout(0),t.setNoDelay(),a.length>0&&t.unshift(a),t.on("close",Vp),t.on("data",Rp),t.on("end",Lp),t.on("error",Pp),this._readyState=e.OPEN,this.emit("open")}emitClose(){if(!this._socket)return this._readyState=e.CLOSED,void this.emit("close",this._closeCode,this._closeMessage);this._extensions[Qi.extensionName]&&this._extensions[Qi.extensionName].cleanup(),this._receiver.removeAllListeners(),this._readyState=e.CLOSED,this.emit("close",this._closeCode,this._closeMessage)}close(t,a){if(this.readyState!==e.CLOSED){if(this.readyState===e.CONNECTING){const e="WebSocket was closed before the connection was established";return Np(this,this._req,e)}this.readyState!==e.CLOSING?(this._readyState=e.CLOSING,this._sender.close(t,a,!this._isServer,(e=>{e||(this._closeFrameSent=!0,(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end())})),this._closeTimer=setTimeout(this._socket.destroy.bind(this._socket),3e4)):this._closeFrameSent&&(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end()}}pause(){this.readyState!==e.CONNECTING&&this.readyState!==e.CLOSED&&(this._paused=!0,this._socket.pause())}ping(t,a,d){if(this.readyState===e.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof t?(d=t,t=a=void 0):"function"==typeof a&&(d=a,a=void 0),"number"==typeof t&&(t=t.toString()),this.readyState===e.OPEN?(void 0===a&&(a=!this._isServer),this._sender.ping(t||dp,a,d)):Tp(this,t,d)}pong(t,a,d){if(this.readyState===e.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof t?(d=t,t=a=void 0):"function"==typeof a&&(d=a,a=void 0),"number"==typeof t&&(t=t.toString()),this.readyState===e.OPEN?(void 0===a&&(a=!this._isServer),this._sender.pong(t||dp,a,d)):Tp(this,t,d)}resume(){this.readyState!==e.CONNECTING&&this.readyState!==e.CLOSED&&(this._paused=!1,this._receiver._writableState.needDrain||this._socket.resume())}send(t,a,d){if(this.readyState===e.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");if("function"==typeof a&&(d=a,a={}),"number"==typeof t&&(t=t.toString()),this.readyState!==e.OPEN)return void Tp(this,t,d);const i={binary:"string"!=typeof t,mask:!this._isServer,compress:!0,fin:!0,...a};this._extensions[Qi.extensionName]||(i.compress=!1),this._sender.send(t||dp,i,d)}terminate(){if(this.readyState!==e.CLOSED){if(this.readyState===e.CONNECTING){const e="WebSocket was closed before the connection was established";return Np(this,this._req,e)}this._socket&&(this._readyState=e.CLOSING,this._socket.destroy())}}};function wp(e,t,a,d){const i={protocolVersion:vp[1],maxPayload:104857600,skipUTF8Validation:!1,perMessageDeflate:!0,followRedirects:!1,maxRedirects:10,...d,createConnection:void 0,socketPath:void 0,hostname:void 0,protocol:void 0,timeout:void 0,method:"GET",host:void 0,path:void 0,port:void 0};if(!vp.includes(i.protocolVersion))throw new RangeError(`Unsupported protocol version: ${i.protocolVersion} (supported versions: ${vp.join(", ")})`);let p;if(t instanceof Xi)p=t,e._url=t.href;else{try{p=new Xi(t)}catch(e){throw new SyntaxError(`Invalid URL: ${t}`)}e._url=t}const r="wss:"===p.protocol,n="ws+unix:"===p.protocol;let s;if("ws:"===p.protocol||r||n?n&&!p.pathname?s="The URL's pathname is empty":p.hash&&(s="The URL contains a fragment identifier"):s='The URL\'s protocol must be one of "ws:", "wss:", or "ws+unix:"',s){const t=new SyntaxError(s);if(0===e._redirects)throw t;return void _p(e,t)}const o=r?443:80,l=Zi(16).toString("base64"),m=r?Hi.request:Yi.request,c=new Set;let u,h;if(i.createConnection=r?Ep:Sp,i.defaultPort=i.defaultPort||o,i.port=p.port||o,i.host=p.hostname.startsWith("[")?p.hostname.slice(1,-1):p.hostname,i.headers={...i.headers,"Sec-WebSocket-Version":i.protocolVersion,"Sec-WebSocket-Key":l,Connection:"Upgrade",Upgrade:"websocket"},i.path=p.pathname+p.search,i.timeout=i.handshakeTimeout,i.perMessageDeflate&&(u=new Qi(!0!==i.perMessageDeflate?i.perMessageDeflate:{},!1,i.maxPayload),i.headers["Sec-WebSocket-Extensions"]=cp({[Qi.extensionName]:u.offer()})),a.length){for(const e of a){if("string"!=typeof e||!gp.test(e)||c.has(e))throw new SyntaxError("An invalid or duplicated subprotocol was specified");c.add(e)}i.headers["Sec-WebSocket-Protocol"]=a.join(",")}if(i.origin&&(i.protocolVersion<13?i.headers["Sec-WebSocket-Origin"]=i.origin:i.headers.Origin=i.origin),(p.username||p.password)&&(i.auth=`${p.username}:${p.password}`),n){const e=i.path.split(":");i.socketPath=e[0],i.path=e[1]}if(i.followRedirects){if(0===e._redirects){e._originalIpc=n,e._originalSecure=r,e._originalHostOrSocketPath=n?i.socketPath:p.host;const t=d&&d.headers;if(d={...d,headers:{}},t)for(const[e,a]of Object.entries(t))d.headers[e.toLowerCase()]=a}else if(0===e.listenerCount("redirect")){const t=n?!!e._originalIpc&&i.socketPath===e._originalHostOrSocketPath:!e._originalIpc&&p.host===e._originalHostOrSocketPath;(!t||e._originalSecure&&!r)&&(delete i.headers.authorization,delete i.headers.cookie,t||delete i.headers.host,i.auth=void 0)}i.auth&&!d.headers.authorization&&(d.headers.authorization="Basic "+Buffer.from(i.auth).toString("base64")),h=e._req=m(i),e._redirects&&e.emit("redirect",e.url,h)}else h=e._req=m(i);i.timeout&&h.on("timeout",(()=>{Np(e,h,"Opening handshake has timed out")})),h.on("error",(t=>{null===h||h[fp]||(h=e._req=null,_p(e,t))})),h.on("response",(p=>{const r=p.headers.location,n=p.statusCode;if(r&&i.followRedirects&&n>=300&&n<400){if(++e._redirects>i.maxRedirects)return void Np(e,h,"Maximum redirects exceeded");let p;h.abort();try{p=new Xi(r,t)}catch(t){const a=new SyntaxError(`Invalid URL: ${r}`);return void _p(e,a)}wp(e,p,a,d)}else e.emit("unexpected-response",h,p)||Np(e,h,`Unexpected server response: ${p.statusCode}`)})),h.on("upgrade",((t,a,d)=>{if(e.emit("upgrade",t),e.readyState!==yp.CONNECTING)return;if(h=e._req=null,"websocket"!==t.headers.upgrade.toLowerCase())return void Np(e,a,"Invalid Upgrade header");const p=Ji("sha1").update(l+ip).digest("base64");if(t.headers["sec-websocket-accept"]!==p)return void Np(e,a,"Invalid Sec-WebSocket-Accept header");const r=t.headers["sec-websocket-protocol"];let n;if(void 0!==r?c.size?c.has(r)||(n="Server sent an invalid subprotocol"):n="Server sent a subprotocol but none was requested":c.size&&(n="Server sent no subprotocol"),n)return void Np(e,a,n);r&&(e._protocol=r);const s=t.headers["sec-websocket-extensions"];if(void 0!==s){if(!u){return void Np(e,a,"Server sent a Sec-WebSocket-Extensions header but no extension was requested")}let t;try{t=up(s)}catch(t){return void Np(e,a,"Invalid Sec-WebSocket-Extensions header")}const d=Object.keys(t);if(1!==d.length||d[0]!==Qi.extensionName){return void Np(e,a,"Server indicated an extension that was not requested")}try{u.accept(t[Qi.extensionName])}catch(t){return void Np(e,a,"Invalid Sec-WebSocket-Extensions header")}e._extensions[Qi.extensionName]=u}e.setSocket(a,d,{generateMask:i.generateMask,maxPayload:i.maxPayload,skipUTF8Validation:i.skipUTF8Validation})})),h.end()}function _p(e,t){e._readyState=yp.CLOSING,e.emit("error",t),e.emitClose()}function Sp(e){return e.path=e.socketPath,Wi.connect(e)}function Ep(e){return e.path=void 0,e.servername||""===e.servername||(e.servername=Wi.isIP(e.host)?"":e.host),Gi.connect(e)}function Np(e,t,a){e._readyState=yp.CLOSING;const d=new Error(a);Error.captureStackTrace(d,Np),t.setHeader?(t[fp]=!0,t.abort(),t.socket&&!t.socket.destroyed&&t.socket.destroy(),process.nextTick(_p,e,d)):(t.destroy(d),t.once("error",e.emit.bind(e,"error")),t.once("close",e.emitClose.bind(e)))}function Tp(e,t,a){if(t){const a=hp(t).length;e._socket?e._sender._bufferedBytes+=a:e._bufferedAmount+=a}if(a){a(new Error(`WebSocket is not open: readyState ${e.readyState} (${bp[e.readyState]})`))}}function kp(e,t){const a=this[sp];a._closeFrameReceived=!0,a._closeMessage=t,a._closeCode=e,void 0!==a._socket[sp]&&(a._socket.removeListener("data",Rp),process.nextTick(Ip,a._socket),1005===e?a.close():a.close(e,t))}function Ap(){const e=this[sp];e.isPaused||e._socket.resume()}function xp(e){const t=this[sp];void 0!==t._socket[sp]&&(t._socket.removeListener("data",Rp),process.nextTick(Ip,t._socket),t.close(e[np])),t.emit("error",e)}function Cp(){this[sp].emitClose()}function Mp(e,t){this[sp].emit("message",e,t)}function Dp(e){const t=this[sp];t.pong(e,!t._isServer,op),t.emit("ping",e)}function Op(e){this[sp].emit("pong",e)}function Ip(e){e.resume()}function Vp(){const e=this[sp];let t;this.removeListener("close",Vp),this.removeListener("data",Rp),this.removeListener("end",Lp),e._readyState=yp.CLOSING,this._readableState.endEmitted||e._closeFrameReceived||e._receiver._writableState.errorEmitted||null===(t=e._socket.read())||e._receiver.write(t),e._receiver.end(),this[sp]=void 0,clearTimeout(e._closeTimer),e._receiver._writableState.finished||e._receiver._writableState.errorEmitted?e.emitClose():(e._receiver.on("error",Cp),e._receiver.on("finish",Cp))}function Rp(e){this[sp]._receiver.write(e)||this.pause()}function Lp(){const e=this[sp];e._readyState=yp.CLOSING,e._receiver.end(),this.end()}function Pp(){const e=this[sp];this.removeListener("error",Pp),this.on("error",op),e&&(e._readyState=yp.CLOSING,this.destroy())}Object.defineProperty(yp,"CONNECTING",{enumerable:!0,value:bp.indexOf("CONNECTING")}),Object.defineProperty(yp.prototype,"CONNECTING",{enumerable:!0,value:bp.indexOf("CONNECTING")}),Object.defineProperty(yp,"OPEN",{enumerable:!0,value:bp.indexOf("OPEN")}),Object.defineProperty(yp.prototype,"OPEN",{enumerable:!0,value:bp.indexOf("OPEN")}),Object.defineProperty(yp,"CLOSING",{enumerable:!0,value:bp.indexOf("CLOSING")}),Object.defineProperty(yp.prototype,"CLOSING",{enumerable:!0,value:bp.indexOf("CLOSING")}),Object.defineProperty(yp,"CLOSED",{enumerable:!0,value:bp.indexOf("CLOSED")}),Object.defineProperty(yp.prototype,"CLOSED",{enumerable:!0,value:bp.indexOf("CLOSED")}),["binaryType","bufferedAmount","extensions","isPaused","protocol","readyState","url"].forEach((e=>{Object.defineProperty(yp.prototype,e,{enumerable:!0})})),["open","error","close","message"].forEach((e=>{Object.defineProperty(yp.prototype,`on${e}`,{enumerable:!0,get(){for(const t of this.listeners(e))if(t[pp])return t[rp];return null},set(t){for(const t of this.listeners(e))if(t[pp]){this.removeListener(e,t);break}"function"==typeof t&&this.addEventListener(e,t,{[pp]:!0})}})})),yp.prototype.addEventListener=lp,yp.prototype.removeEventListener=mp;const Bp=w(yp),Fp=process.nextTick,jp=Xa("engine.io-client:websocket"),Kp="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();const Up=Xa("engine.io-client:webtransport");function qp(e,t){return"message"===e.type&&"string"!=typeof e.data&&t[0]>=48&&t[0]<=54}const zp={websocket:class extends td{constructor(e){super(e),this.supportsBinary=!e.forceBase64}get name(){return"websocket"}doOpen(){if(!this.check())return;const e=this.uri(),t=this.opts.protocols,a=Kp?{}:Da(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(a.headers=this.opts.extraHeaders);try{this.ws=new Bp(e,t,a)}catch(e){return this.emitReserved("error",e)}this.ws.binaryType=this.socket.binaryType||"nodebuffer",this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=e=>this.onClose({description:"websocket connection closed",context:e}),this.ws.onmessage=e=>this.onData(e.data),this.ws.onerror=e=>this.onError("websocket error",e)}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const a=e[t],d=t===e.length-1;_a(a,this.supportsBinary,(e=>{const t={};if(a.options&&(t.compress=a.options.compress),this.opts.perMessageDeflate){("string"==typeof e?Buffer.byteLength(e):e.length)<this.opts.perMessageDeflate.threshold&&(t.compress=!1)}try{this.ws.send(e,t)}catch(e){jp("websocket closed before onclose event")}d&&Fp((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){void 0!==this.ws&&(this.ws.close(),this.ws=null)}uri(){const e=this.opts.secure?"wss":"ws",t=this.query||{};return this.opts.timestampRequests&&(t[this.opts.timestampParam]=od()),this.supportsBinary||(t.b64=1),this.createUri(e,t)}check(){return!!Bp}},webtransport:class extends td{get name(){return"webtransport"}doOpen(){"function"==typeof WebTransport&&(this.transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name]),this.transport.closed.then((()=>{Up("transport closed gracefully"),this.onClose()})).catch((e=>{Up("transport closed due to %s",e),this.onError("webtransport error",e)})),this.transport.ready.then((()=>{this.transport.createBidirectionalStream().then((e=>{const t=e.readable.getReader();let a;this.writer=e.writable.getWriter();const d=()=>{t.read().then((({done:e,value:t})=>{e?Up("session is closed"):(Up("received chunk: %o",t),a||1!==t.byteLength||54!==t[0]?(this.onPacket(function(e,t,a){xa||(xa=new TextDecoder);const d=t||e[0]<48||e[0]>54;return Ta(d?e:xa.decode(e),a)}(t,a,"arraybuffer")),a=!1):a=!0,d())})).catch((e=>{Up("an error occurred while reading: %s",e)}))};d();const i=this.query.sid?`0{"sid":"${this.query.sid}"}`:"0";this.writer.write((new TextEncoder).encode(i)).then((()=>this.onOpen()))}))})))}write(e){this.writable=!1;for(let t=0;t<e.length;t++){const a=e[t],d=t===e.length-1;Na(a,(e=>{qp(a,e)&&(Up("writing binary header"),this.writer.write(Uint8Array.of(54))),Up("writing chunk: %o",e),this.writer.write(e).then((()=>{d&&Fp((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}))}}doClose(){var e;null===(e=this.transport)||void 0===e||e.close()}},polling:class extends td{constructor(e){if(super(e),this.polling=!1,"undefined"!=typeof location){const t="https:"===location.protocol;let a=location.port;a||(a=t?"443":"80"),this.xd="undefined"!=typeof location&&e.hostname!==location.hostname||a!==e.port}const t=e&&e.forceBase64;this.supportsBinary=wd&&!t,this.opts.withCredentials&&(this.cookieJar=new bd)}get name(){return"polling"}doOpen(){this.poll()}pause(e){this.readyState="pausing";const t=()=>{gd("paused"),this.readyState="paused",e()};if(this.polling||!this.writable){let e=0;this.polling&&(gd("we are currently polling - waiting to pause"),e++,this.once("pollComplete",(function(){gd("pre-pause polling complete"),--e||t()}))),this.writable||(gd("we are currently writing - waiting to pause"),e++,this.once("drain",(function(){gd("pre-pause writing complete"),--e||t()})))}else t()}poll(){gd("polling"),this.polling=!0,this.doPoll(),this.emitReserved("poll")}onData(e){gd("polling got data %s",e);((e,t)=>{const a=e.split(Aa),d=[];for(let e=0;e<a.length;e++){const i=Ta(a[e],t);if(d.push(i),"error"===i.type)break}return d})(e,this.socket.binaryType).forEach((e=>{if("opening"===this.readyState&&"open"===e.type&&this.onOpen(),"close"===e.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(e)})),"closed"!==this.readyState&&(this.polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState?this.poll():gd('ignoring poll - transport state "%s"',this.readyState))}doClose(){const e=()=>{gd("writing close packet"),this.write([{type:"close"}])};"open"===this.readyState?(gd("transport open - closing"),e()):(gd("transport not open - deferring close"),this.once("open",e))}write(e){this.writable=!1,((e,t)=>{const a=e.length,d=new Array(a);let i=0;e.forEach(((e,p)=>{_a(e,!1,(e=>{d[p]=e,++i===a&&t(d.join(Aa))}))}))})(e,(e=>{this.doWrite(e,(()=>{this.writable=!0,this.emitReserved("drain")}))}))}uri(){const e=this.opts.secure?"https":"http",t=this.query||{};return!1!==this.opts.timestampRequests&&(t[this.opts.timestampParam]=od()),this.supportsBinary||t.sid||(t.b64=1),this.createUri(e,t)}request(e={}){return Object.assign(e,{xd:this.xd,cookieJar:this.cookieJar},this.opts),new _d(this.uri(),e)}doWrite(e,t){const a=this.request({method:"POST",data:e});a.on("success",t),a.on("error",((e,t)=>{this.onError("xhr post error",e,t)}))}doPoll(){gd("xhr poll");const e=this.request();e.on("data",this.onData.bind(this)),e.on("error",((e,t)=>{this.onError("xhr poll error",e,t)})),this.pollXhr=e}}},$p=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,Hp=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function Yp(e){const t=e,a=e.indexOf("["),d=e.indexOf("]");-1!=a&&-1!=d&&(e=e.substring(0,a)+e.substring(a,d).replace(/:/g,";")+e.substring(d,e.length));let i=$p.exec(e||""),p={},r=14;for(;r--;)p[Hp[r]]=i[r]||"";return-1!=a&&-1!=d&&(p.source=t,p.host=p.host.substring(1,p.host.length-1).replace(/;/g,":"),p.authority=p.authority.replace("[","").replace("]","").replace(/;/g,":"),p.ipv6uri=!0),p.pathNames=function(e,t){const a=/\/{2,9}/g,d=t.replace(a,"/").split("/");"/"!=t.slice(0,1)&&0!==t.length||d.splice(0,1);"/"==t.slice(-1)&&d.splice(d.length-1,1);return d}(0,p.path),p.queryKey=function(e,t){const a={};return t.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(e,t,d){t&&(a[t]=d)})),a}(0,p.query),p}const Wp=Xa("engine.io-client:socket");let Gp=class e extends Ca{constructor(e,t={}){super(),this.writeBuffer=[],e&&"object"==typeof e&&(t=e,e=null),e?(e=Yp(e),t.hostname=e.host,t.secure="https"===e.protocol||"wss"===e.protocol,t.port=e.port,e.query&&(t.query=e.query)):t.host&&(t.hostname=Yp(t.host).host),Va(this,t),this.secure=null!=t.secure?t.secure:"undefined"!=typeof location&&"https:"===location.protocol,t.hostname&&!t.port&&(t.port=this.secure?"443":"80"),this.hostname=t.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=t.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=t.transports||["polling","websocket","webtransport"],this.writeBuffer=[],this.prevBufferLen=0,this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},t),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),"string"==typeof this.opts.query&&(this.opts.query=function(e){let t={},a=e.split("&");for(let e=0,d=a.length;e<d;e++){let d=a[e].split("=");t[decodeURIComponent(d[0])]=decodeURIComponent(d[1])}return t}(this.opts.query)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingTimeoutTimer=null,"function"==typeof addEventListener&&(this.opts.closeOnBeforeunload&&(this.beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this.beforeunloadEventListener,!1)),"localhost"!==this.hostname&&(this.offlineEventListener=()=>{this.onClose("transport close",{description:"network connection lost"})},addEventListener("offline",this.offlineEventListener,!1))),this.open()}createTransport(e){Wp('creating transport "%s"',e);const t=Object.assign({},this.opts.query);t.EIO=4,t.transport=e,this.id&&(t.sid=this.id);const a=Object.assign({},this.opts,{query:t,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[e]);return Wp("options: %j",a),new zp[e](a)}open(){let t;if(this.opts.rememberUpgrade&&e.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket"))t="websocket";else{if(0===this.transports.length)return void this.setTimeoutFn((()=>{this.emitReserved("error","No transports available")}),0);t=this.transports[0]}this.readyState="opening";try{t=this.createTransport(t)}catch(e){return Wp("error while creating transport: %s",e),this.transports.shift(),void this.open()}t.open(),this.setTransport(t)}setTransport(e){Wp("setting transport %s",e.name),this.transport&&(Wp("clearing existing transport %s",this.transport.name),this.transport.removeAllListeners()),this.transport=e,e.on("drain",this.onDrain.bind(this)).on("packet",this.onPacket.bind(this)).on("error",this.onError.bind(this)).on("close",(e=>this.onClose("transport close",e)))}probe(t){Wp('probing transport "%s"',t);let a=this.createTransport(t),d=!1;e.priorWebsocketSuccess=!1;const i=()=>{d||(Wp('probe transport "%s" opened',t),a.send([{type:"ping",data:"probe"}]),a.once("packet",(i=>{if(!d)if("pong"===i.type&&"probe"===i.data){if(Wp('probe transport "%s" pong',t),this.upgrading=!0,this.emitReserved("upgrading",a),!a)return;e.priorWebsocketSuccess="websocket"===a.name,Wp('pausing current transport "%s"',this.transport.name),this.transport.pause((()=>{d||"closed"!==this.readyState&&(Wp("changing transport and sending upgrade packet"),l(),this.setTransport(a),a.send([{type:"upgrade"}]),this.emitReserved("upgrade",a),a=null,this.upgrading=!1,this.flush())}))}else{Wp('probe transport "%s" failed',t);const e=new Error("probe error");e.transport=a.name,this.emitReserved("upgradeError",e)}})))};function p(){d||(d=!0,l(),a.close(),a=null)}const r=e=>{const d=new Error("probe error: "+e);d.transport=a.name,p(),Wp('probe transport "%s" failed because of error: %s',t,e),this.emitReserved("upgradeError",d)};function n(){r("transport closed")}function s(){r("socket closed")}function o(e){a&&e.name!==a.name&&(Wp('"%s" works - aborting "%s"',e.name,a.name),p())}const l=()=>{a.removeListener("open",i),a.removeListener("error",r),a.removeListener("close",n),this.off("close",s),this.off("upgrading",o)};a.once("open",i),a.once("error",r),a.once("close",n),this.once("close",s),this.once("upgrading",o),-1!==this.upgrades.indexOf("webtransport")&&"webtransport"!==t?this.setTimeoutFn((()=>{d||a.open()}),200):a.open()}onOpen(){if(Wp("socket open"),this.readyState="open",e.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush(),"open"===this.readyState&&this.opts.upgrade){Wp("starting upgrade probes");let e=0;const t=this.upgrades.length;for(;e<t;e++)this.probe(this.upgrades[e])}}onPacket(e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(Wp('socket receive: type "%s", data "%s"',e.type,e.data),this.emitReserved("packet",e),this.emitReserved("heartbeat"),e.type){case"open":this.onHandshake(JSON.parse(e.data));break;case"ping":this.resetPingTimeout(),this.sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong");break;case"error":const t=new Error("server error");t.code=e.data,this.onError(t);break;case"message":this.emitReserved("data",e.data),this.emitReserved("message",e.data)}else Wp('packet received with socket readyState "%s"',this.readyState)}onHandshake(e){this.emitReserved("handshake",e),this.id=e.sid,this.transport.query.sid=e.sid,this.upgrades=this.filterUpgrades(e.upgrades),this.pingInterval=e.pingInterval,this.pingTimeout=e.pingTimeout,this.maxPayload=e.maxPayload,this.onOpen(),"closed"!==this.readyState&&this.resetPingTimeout()}resetPingTimeout(){this.clearTimeoutFn(this.pingTimeoutTimer),this.pingTimeoutTimer=this.setTimeoutFn((()=>{this.onClose("ping timeout")}),this.pingInterval+this.pingTimeout),this.opts.autoUnref&&this.pingTimeoutTimer.unref()}onDrain(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const e=this.getWritablePackets();Wp("flushing %d packets in socket",e.length),this.transport.send(e),this.prevBufferLen=e.length,this.emitReserved("flush")}}getWritablePackets(){if(!(this.maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let e=1;for(let a=0;a<this.writeBuffer.length;a++){const d=this.writeBuffer[a].data;if(d&&(e+="string"==typeof(t=d)?function(e){let t=0,a=0;for(let d=0,i=e.length;d<i;d++)t=e.charCodeAt(d),t<128?a+=1:t<2048?a+=2:t<55296||t>=57344?a+=3:(d++,a+=4);return a}(t):Math.ceil(1.33*(t.byteLength||t.size))),a>0&&e>this.maxPayload)return Wp("only send %d out of %d packets",a,this.writeBuffer.length),this.writeBuffer.slice(0,a);e+=2}var t;return Wp("payload size is %d (max: %d)",e,this.maxPayload),this.writeBuffer}write(e,t,a){return this.sendPacket("message",e,t,a),this}send(e,t,a){return this.sendPacket("message",e,t,a),this}sendPacket(e,t,a,d){if("function"==typeof t&&(d=t,t=void 0),"function"==typeof a&&(d=a,a=null),"closing"===this.readyState||"closed"===this.readyState)return;(a=a||{}).compress=!1!==a.compress;const i={type:e,data:t,options:a};this.emitReserved("packetCreate",i),this.writeBuffer.push(i),d&&this.once("flush",d),this.flush()}close(){const e=()=>{this.onClose("forced close"),Wp("socket closing - telling transport to close"),this.transport.close()},t=()=>{this.off("upgrade",t),this.off("upgradeError",t),e()},a=()=>{this.once("upgrade",t),this.once("upgradeError",t)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",(()=>{this.upgrading?a():e()})):this.upgrading?a():e()),this}onError(t){Wp("socket error %j",t),e.priorWebsocketSuccess=!1,this.emitReserved("error",t),this.onClose("transport error",t)}onClose(e,t){"opening"!==this.readyState&&"open"!==this.readyState&&"closing"!==this.readyState||(Wp('socket close with reason: "%s"',e),this.clearTimeoutFn(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),"function"==typeof removeEventListener&&(removeEventListener("beforeunload",this.beforeunloadEventListener,!1),removeEventListener("offline",this.offlineEventListener,!1)),this.readyState="closed",this.id=null,this.emitReserved("close",e,t),this.writeBuffer=[],this.prevBufferLen=0)}filterUpgrades(e){const t=[];let a=0;const d=e.length;for(;a<d;a++)~this.transports.indexOf(e[a])&&t.push(e[a]);return t}};Gp.protocol=4;const Zp=Xa("socket.io-client:url");const Jp="function"==typeof ArrayBuffer,Xp=e=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer,Qp=Object.prototype.toString,er="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Qp.call(Blob),tr="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===Qp.call(File);function ar(e){return Jp&&(e instanceof ArrayBuffer||Xp(e))||er&&e instanceof Blob||tr&&e instanceof File}function dr(e,t){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e)){for(let t=0,a=e.length;t<a;t++)if(dr(e[t]))return!0;return!1}if(ar(e))return!0;if(e.toJSON&&"function"==typeof e.toJSON&&1===arguments.length)return dr(e.toJSON(),!0);for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&dr(e[t]))return!0;return!1}function ir(e){const t=[],a=e.data,d=e;return d.data=pr(a,t),d.attachments=t.length,{packet:d,buffers:t}}function pr(e,t){if(!e)return e;if(ar(e)){const a={_placeholder:!0,num:t.length};return t.push(e),a}if(Array.isArray(e)){const a=new Array(e.length);for(let d=0;d<e.length;d++)a[d]=pr(e[d],t);return a}if("object"==typeof e&&!(e instanceof Date)){const a={};for(const d in e)Object.prototype.hasOwnProperty.call(e,d)&&(a[d]=pr(e[d],t));return a}return e}function rr(e,t){return e.data=nr(e.data,t),delete e.attachments,e}function nr(e,t){if(!e)return e;if(e&&!0===e._placeholder){if("number"==typeof e.num&&e.num>=0&&e.num<t.length)return t[e.num];throw new Error("illegal attachments")}if(Array.isArray(e))for(let a=0;a<e.length;a++)e[a]=nr(e[a],t);else if("object"==typeof e)for(const a in e)Object.prototype.hasOwnProperty.call(e,a)&&(e[a]=nr(e[a],t));return e}const sr=Xa("socket.io-parser"),or=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"];var lr;!function(e){e[e.CONNECT=0]="CONNECT",e[e.DISCONNECT=1]="DISCONNECT",e[e.EVENT=2]="EVENT",e[e.ACK=3]="ACK",e[e.CONNECT_ERROR=4]="CONNECT_ERROR",e[e.BINARY_EVENT=5]="BINARY_EVENT",e[e.BINARY_ACK=6]="BINARY_ACK"}(lr||(lr={}));function mr(e){return"[object Object]"===Object.prototype.toString.call(e)}class cr extends Ca{constructor(e){super(),this.reviver=e}add(e){let t;if("string"==typeof e){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");t=this.decodeString(e);const a=t.type===lr.BINARY_EVENT;a||t.type===lr.BINARY_ACK?(t.type=a?lr.EVENT:lr.ACK,this.reconstructor=new ur(t),0===t.attachments&&super.emitReserved("decoded",t)):super.emitReserved("decoded",t)}else{if(!ar(e)&&!e.base64)throw new Error("Unknown type: "+e);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");t=this.reconstructor.takeBinaryData(e),t&&(this.reconstructor=null,super.emitReserved("decoded",t))}}decodeString(e){let t=0;const a={type:Number(e.charAt(0))};if(void 0===lr[a.type])throw new Error("unknown packet type "+a.type);if(a.type===lr.BINARY_EVENT||a.type===lr.BINARY_ACK){const d=t+1;for(;"-"!==e.charAt(++t)&&t!=e.length;);const i=e.substring(d,t);if(i!=Number(i)||"-"!==e.charAt(t))throw new Error("Illegal attachments");a.attachments=Number(i)}if("/"===e.charAt(t+1)){const d=t+1;for(;++t;){if(","===e.charAt(t))break;if(t===e.length)break}a.nsp=e.substring(d,t)}else a.nsp="/";const d=e.charAt(t+1);if(""!==d&&Number(d)==d){const d=t+1;for(;++t;){const a=e.charAt(t);if(null==a||Number(a)!=a){--t;break}if(t===e.length)break}a.id=Number(e.substring(d,t+1))}if(e.charAt(++t)){const d=this.tryParse(e.substr(t));if(!cr.isPayloadValid(a.type,d))throw new Error("invalid payload");a.data=d}return sr("decoded %s as %j",e,a),a}tryParse(e){try{return JSON.parse(e,this.reviver)}catch(e){return!1}}static isPayloadValid(e,t){switch(e){case lr.CONNECT:return mr(t);case lr.DISCONNECT:return void 0===t;case lr.CONNECT_ERROR:return"string"==typeof t||mr(t);case lr.EVENT:case lr.BINARY_EVENT:return Array.isArray(t)&&("number"==typeof t[0]||"string"==typeof t[0]&&-1===or.indexOf(t[0]));case lr.ACK:case lr.BINARY_ACK:return Array.isArray(t)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}class ur{constructor(e){this.packet=e,this.buffers=[],this.reconPack=e}takeBinaryData(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){const e=rr(this.reconPack,this.buffers);return this.finishedReconstruction(),e}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}var hr=Object.freeze({__proto__:null,Decoder:cr,Encoder:class{constructor(e){this.replacer=e}encode(e){return sr("encoding packet %j",e),e.type!==lr.EVENT&&e.type!==lr.ACK||!dr(e)?[this.encodeAsString(e)]:this.encodeAsBinary({type:e.type===lr.EVENT?lr.BINARY_EVENT:lr.BINARY_ACK,nsp:e.nsp,data:e.data,id:e.id})}encodeAsString(e){let t=""+e.type;return e.type!==lr.BINARY_EVENT&&e.type!==lr.BINARY_ACK||(t+=e.attachments+"-"),e.nsp&&"/"!==e.nsp&&(t+=e.nsp+","),null!=e.id&&(t+=e.id),null!=e.data&&(t+=JSON.stringify(e.data,this.replacer)),sr("encoded %j as %s",e,t),t}encodeAsBinary(e){const t=ir(e),a=this.encodeAsString(t.packet),d=t.buffers;return d.unshift(a),d}},get PacketType(){return lr},protocol:5});function fr(e,t,a){return e.on(t,a),function(){e.off(t,a)}}const vr=Xa("socket.io-client:socket"),br=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class gr extends Ca{constructor(e,t,a){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=e,this.nsp=t,a&&a.auth&&(this.auth=a.auth),this._opts=Object.assign({},a),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const e=this.io;this.subs=[fr(e,"open",this.onopen.bind(this)),fr(e,"packet",this.onpacket.bind(this)),fr(e,"error",this.onerror.bind(this)),fr(e,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...e){return e.unshift("message"),this.emit.apply(this,e),this}emit(e,...t){if(br.hasOwnProperty(e))throw new Error('"'+e.toString()+'" is a reserved event name');if(t.unshift(e),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(t),this;const a={type:lr.EVENT,data:t,options:{}};if(a.options.compress=!1!==this.flags.compress,"function"==typeof t[t.length-1]){const e=this.ids++;vr("emitting packet with ack id %d",e);const d=t.pop();this._registerAckCallback(e,d),a.id=e}const d=this.io.engine&&this.io.engine.transport&&this.io.engine.transport.writable;return this.flags.volatile&&(!d||!this.connected)?vr("discard packet as the transport is not currently writable"):this.connected?(this.notifyOutgoingListeners(a),this.packet(a)):this.sendBuffer.push(a),this.flags={},this}_registerAckCallback(e,t){var a;const d=null!==(a=this.flags.timeout)&&void 0!==a?a:this._opts.ackTimeout;if(void 0===d)return void(this.acks[e]=t);const i=this.io.setTimeoutFn((()=>{delete this.acks[e];for(let t=0;t<this.sendBuffer.length;t++)this.sendBuffer[t].id===e&&(vr("removing packet with ack id %d from the buffer",e),this.sendBuffer.splice(t,1));vr("event with ack id %d has timed out after %d ms",e,d),t.call(this,new Error("operation has timed out"))}),d);this.acks[e]=(...e)=>{this.io.clearTimeoutFn(i),t.apply(this,[null,...e])}}emitWithAck(e,...t){const a=void 0!==this.flags.timeout||void 0!==this._opts.ackTimeout;return new Promise(((d,i)=>{t.push(((e,t)=>a?e?i(e):d(t):d(e))),this.emit(e,...t)}))}_addToQueue(e){let t;"function"==typeof e[e.length-1]&&(t=e.pop());const a={id:this._queueSeq++,tryCount:0,pending:!1,args:e,flags:Object.assign({fromQueue:!0},this.flags)};e.push(((e,...d)=>{if(a!==this._queue[0])return;return null!==e?a.tryCount>this._opts.retries&&(vr("packet [%d] is discarded after %d tries",a.id,a.tryCount),this._queue.shift(),t&&t(e)):(vr("packet [%d] was successfully sent",a.id),this._queue.shift(),t&&t(null,...d)),a.pending=!1,this._drainQueue()})),this._queue.push(a),this._drainQueue()}_drainQueue(e=!1){if(vr("draining queue"),!this.connected||0===this._queue.length)return;const t=this._queue[0];!t.pending||e?(t.pending=!0,t.tryCount++,vr("sending packet [%d] (try n°%d)",t.id,t.tryCount),this.flags=t.flags,this.emit.apply(this,t.args)):vr("packet [%d] has already been sent and is waiting for an ack",t.id)}packet(e){e.nsp=this.nsp,this.io._packet(e)}onopen(){vr("transport is open - connecting"),"function"==typeof this.auth?this.auth((e=>{this._sendConnectPacket(e)})):this._sendConnectPacket(this.auth)}_sendConnectPacket(e){this.packet({type:lr.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},e):e})}onerror(e){this.connected||this.emitReserved("connect_error",e)}onclose(e,t){vr("close (%s)",e),this.connected=!1,delete this.id,this.emitReserved("disconnect",e,t)}onpacket(e){if(e.nsp===this.nsp)switch(e.type){case lr.CONNECT:e.data&&e.data.sid?this.onconnect(e.data.sid,e.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case lr.EVENT:case lr.BINARY_EVENT:this.onevent(e);break;case lr.ACK:case lr.BINARY_ACK:this.onack(e);break;case lr.DISCONNECT:this.ondisconnect();break;case lr.CONNECT_ERROR:this.destroy();const t=new Error(e.data.message);t.data=e.data.data,this.emitReserved("connect_error",t)}}onevent(e){const t=e.data||[];vr("emitting event %j",t),null!=e.id&&(vr("attaching ack callback to event"),t.push(this.ack(e.id))),this.connected?this.emitEvent(t):this.receiveBuffer.push(Object.freeze(t))}emitEvent(e){if(this._anyListeners&&this._anyListeners.length){const t=this._anyListeners.slice();for(const a of t)a.apply(this,e)}super.emit.apply(this,e),this._pid&&e.length&&"string"==typeof e[e.length-1]&&(this._lastOffset=e[e.length-1])}ack(e){const t=this;let a=!1;return function(...d){a||(a=!0,vr("sending ack %j",d),t.packet({type:lr.ACK,id:e,data:d}))}}onack(e){const t=this.acks[e.id];"function"==typeof t?(vr("calling ack %s with %j",e.id,e.data),t.apply(this,e.data),delete this.acks[e.id]):vr("bad ack %s",e.id)}onconnect(e,t){vr("socket connected with id %s",e),this.id=e,this.recovered=t&&this._pid===t,this._pid=t,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach((e=>this.emitEvent(e))),this.receiveBuffer=[],this.sendBuffer.forEach((e=>{this.notifyOutgoingListeners(e),this.packet(e)})),this.sendBuffer=[]}ondisconnect(){vr("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach((e=>e())),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&(vr("performing disconnect (%s)",this.nsp),this.packet({type:lr.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(e){return this.flags.compress=e,this}get volatile(){return this.flags.volatile=!0,this}timeout(e){return this.flags.timeout=e,this}onAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(e),this}prependAny(e){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(e),this}offAny(e){if(!this._anyListeners)return this;if(e){const t=this._anyListeners;for(let a=0;a<t.length;a++)if(e===t[a])return t.splice(a,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(e),this}prependAnyOutgoing(e){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(e),this}offAnyOutgoing(e){if(!this._anyOutgoingListeners)return this;if(e){const t=this._anyOutgoingListeners;for(let a=0;a<t.length;a++)if(e===t[a])return t.splice(a,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(e){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const t=this._anyOutgoingListeners.slice();for(const a of t)a.apply(this,e.data)}}}function yr(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}yr.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),a=Math.floor(t*this.jitter*e);e=0==(1&Math.floor(10*t))?e-a:e+a}return 0|Math.min(e,this.max)},yr.prototype.reset=function(){this.attempts=0},yr.prototype.setMin=function(e){this.ms=e},yr.prototype.setMax=function(e){this.max=e},yr.prototype.setJitter=function(e){this.jitter=e};const wr=Xa("socket.io-client:manager");class _r extends Ca{constructor(e,t){var a;super(),this.nsps={},this.subs=[],e&&"object"==typeof e&&(t=e,e=void 0),(t=t||{}).path=t.path||"/socket.io",this.opts=t,Va(this,t),this.reconnection(!1!==t.reconnection),this.reconnectionAttempts(t.reconnectionAttempts||1/0),this.reconnectionDelay(t.reconnectionDelay||1e3),this.reconnectionDelayMax(t.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(a=t.randomizationFactor)&&void 0!==a?a:.5),this.backoff=new yr({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==t.timeout?2e4:t.timeout),this._readyState="closed",this.uri=e;const d=t.parser||hr;this.encoder=new d.Encoder,this.decoder=new d.Decoder,this._autoConnect=!1!==t.autoConnect,this._autoConnect&&this.open()}reconnection(e){return arguments.length?(this._reconnection=!!e,this):this._reconnection}reconnectionAttempts(e){return void 0===e?this._reconnectionAttempts:(this._reconnectionAttempts=e,this)}reconnectionDelay(e){var t;return void 0===e?this._reconnectionDelay:(this._reconnectionDelay=e,null===(t=this.backoff)||void 0===t||t.setMin(e),this)}randomizationFactor(e){var t;return void 0===e?this._randomizationFactor:(this._randomizationFactor=e,null===(t=this.backoff)||void 0===t||t.setJitter(e),this)}reconnectionDelayMax(e){var t;return void 0===e?this._reconnectionDelayMax:(this._reconnectionDelayMax=e,null===(t=this.backoff)||void 0===t||t.setMax(e),this)}timeout(e){return arguments.length?(this._timeout=e,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(e){if(wr("readyState %s",this._readyState),~this._readyState.indexOf("open"))return this;wr("opening %s",this.uri),this.engine=new Gp(this.uri,this.opts);const t=this.engine,a=this;this._readyState="opening",this.skipReconnect=!1;const d=fr(t,"open",(function(){a.onopen(),e&&e()})),i=t=>{wr("error"),this.cleanup(),this._readyState="closed",this.emitReserved("error",t),e?e(t):this.maybeReconnectOnOpen()},p=fr(t,"error",i);if(!1!==this._timeout){const e=this._timeout;wr("connect attempt will timeout after %d",e);const a=this.setTimeoutFn((()=>{wr("connect attempt timed out after %d",e),d(),i(new Error("timeout")),t.close()}),e);this.opts.autoUnref&&a.unref(),this.subs.push((()=>{this.clearTimeoutFn(a)}))}return this.subs.push(d),this.subs.push(p),this}connect(e){return this.open(e)}onopen(){wr("open"),this.cleanup(),this._readyState="open",this.emitReserved("open");const e=this.engine;this.subs.push(fr(e,"ping",this.onping.bind(this)),fr(e,"data",this.ondata.bind(this)),fr(e,"error",this.onerror.bind(this)),fr(e,"close",this.onclose.bind(this)),fr(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(e){try{this.decoder.add(e)}catch(e){this.onclose("parse error",e)}}ondecoded(e){Fp((()=>{this.emitReserved("packet",e)}),this.setTimeoutFn)}onerror(e){wr("error",e),this.emitReserved("error",e)}socket(e,t){let a=this.nsps[e];return a?this._autoConnect&&!a.active&&a.connect():(a=new gr(this,e,t),this.nsps[e]=a),a}_destroy(e){const t=Object.keys(this.nsps);for(const e of t){if(this.nsps[e].active)return void wr("socket %s is still active, skipping close",e)}this._close()}_packet(e){wr("writing packet %j",e);const t=this.encoder.encode(e);for(let a=0;a<t.length;a++)this.engine.write(t[a],e.options)}cleanup(){wr("cleanup"),this.subs.forEach((e=>e())),this.subs.length=0,this.decoder.destroy()}_close(){wr("disconnect"),this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close"),this.engine&&this.engine.close()}disconnect(){return this._close()}onclose(e,t){wr("closed due to %s",e),this.cleanup(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",e,t),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const e=this;if(this.backoff.attempts>=this._reconnectionAttempts)wr("reconnect failed"),this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const t=this.backoff.duration();wr("will wait %dms before reconnect attempt",t),this._reconnecting=!0;const a=this.setTimeoutFn((()=>{e.skipReconnect||(wr("attempting reconnect"),this.emitReserved("reconnect_attempt",e.backoff.attempts),e.skipReconnect||e.open((t=>{t?(wr("reconnect attempt error"),e._reconnecting=!1,e.reconnect(),this.emitReserved("reconnect_error",t)):(wr("reconnect success"),e.onreconnect())})))}),t);this.opts.autoUnref&&a.unref(),this.subs.push((()=>{this.clearTimeoutFn(a)}))}}onreconnect(){const e=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",e)}}const Sr=Xa("socket.io-client"),Er={};function Nr(e,t){"object"==typeof e&&(t=e,e=void 0);const a=function(e,t="",a){let d=e;a=a||"undefined"!=typeof location&&location,null==e&&(e=a.protocol+"//"+a.host),"string"==typeof e&&("/"===e.charAt(0)&&(e="/"===e.charAt(1)?a.protocol+e:a.host+e),/^(https?|wss?):\/\//.test(e)||(Zp("protocol-less url %s",e),e=void 0!==a?a.protocol+"//"+e:"https://"+e),Zp("parse %s",e),d=Yp(e)),d.port||(/^(http|ws)$/.test(d.protocol)?d.port="80":/^(http|ws)s$/.test(d.protocol)&&(d.port="443")),d.path=d.path||"/";const i=-1!==d.host.indexOf(":")?"["+d.host+"]":d.host;return d.id=d.protocol+"://"+i+":"+d.port+t,d.href=d.protocol+"://"+i+(a&&a.port===d.port?"":":"+d.port),d}(e,(t=t||{}).path||"/socket.io"),d=a.source,i=a.id,p=a.path,r=Er[i]&&p in Er[i].nsps;let n;return t.forceNew||t["force new connection"]||!1===t.multiplex||r?(Sr("ignoring socket cache for %s",d),n=new _r(d,t)):(Er[i]||(Sr("new io instance for %s",d),Er[i]=new _r(d,t)),n=Er[i]),a.query&&!t.query&&(t.query=a.queryKey),n.socket(a.path,t)}var Tr,kr;Object.assign(Nr,{Manager:_r,Socket:gr,io:Nr,connect:Nr}),function(e){e.KEY_EXCHANGE="key_exchange"}(Tr||(Tr={})),function(e){e.KEY_HANDSHAKE_START="key_handshake_start",e.KEY_HANDSHAKE_CHECK="key_handshake_check",e.KEY_HANDSHAKE_SYN="key_handshake_SYN",e.KEY_HANDSHAKE_SYNACK="key_handshake_SYNACK",e.KEY_HANDSHAKE_ACK="key_handshake_ACK",e.KEY_HANDSHAKE_NONE="none"}(kr||(kr={}));class Ar extends da.EventEmitter2{constructor({communicationLayer:e,otherPublicKey:t,context:a,ecies:d,logging:i}){super(),this.keysExchanged=!1,this.step=kr.KEY_HANDSHAKE_NONE,this.debug=!1,this.context=a,this.myECIES=new Xt(Object.assign(Object.assign({},d),{debug:null==i?void 0:i.eciesLayer})),this.communicationLayer=e,this.myPublicKey=this.myECIES.getPublicKey(),this.debug=!0===(null==i?void 0:i.keyExchangeLayer),t&&this.setOtherPublicKey(t),this.communicationLayer.on(Tr.KEY_EXCHANGE,this.onKeyExchangeMessage.bind(this))}onKeyExchangeMessage(e){this.debug&&console.debug(`KeyExchange::${this.context}::onKeyExchangeMessage() keysExchanged=${this.keysExchanged}`,e);const{message:t}=e;this.keysExchanged&&this.debug&&console.log(`KeyExchange::${this.context}::onKeyExchangeMessage received handshake while already exchanged. step=${this.step} otherPubKey=${this.otherPublicKey}`),t.type===kr.KEY_HANDSHAKE_SYN?(this.checkStep([kr.KEY_HANDSHAKE_NONE,kr.KEY_HANDSHAKE_ACK]),this.debug&&console.debug("KeyExchange::KEY_HANDSHAKE_SYN",t),t.pubkey&&this.setOtherPublicKey(t.pubkey),this.communicationLayer.sendMessage({type:kr.KEY_HANDSHAKE_SYNACK,pubkey:this.myPublicKey}),this.step=kr.KEY_HANDSHAKE_ACK,this.emit(ta.KEY_INFO,this.step)):t.type===kr.KEY_HANDSHAKE_SYNACK?(this.checkStep([kr.KEY_HANDSHAKE_SYNACK,kr.KEY_HANDSHAKE_NONE]),this.debug&&console.debug("KeyExchange::KEY_HANDSHAKE_SYNACK"),t.pubkey&&this.setOtherPublicKey(t.pubkey),this.communicationLayer.sendMessage({type:kr.KEY_HANDSHAKE_ACK}),this.keysExchanged=!0,this.step=kr.KEY_HANDSHAKE_NONE,this.emit(ta.KEYS_EXCHANGED)):t.type===kr.KEY_HANDSHAKE_ACK&&(this.debug&&console.debug("KeyExchange::KEY_HANDSHAKE_ACK set keysExchanged to true!"),this.checkStep([kr.KEY_HANDSHAKE_ACK,kr.KEY_HANDSHAKE_NONE]),this.keysExchanged=!0,this.step=kr.KEY_HANDSHAKE_NONE,this.emit(ta.KEYS_EXCHANGED))}resetKeys(e){this.clean(),this.myECIES=new Xt(e)}clean(){this.debug&&console.debug(`KeyExchange::${this.context}::clean reset handshake state`),this.step=kr.KEY_HANDSHAKE_NONE,this.emit(ta.KEY_INFO,this.step),this.keysExchanged=!1}start({isOriginator:e,force:t}){this.debug&&console.debug(`KeyExchange::${this.context}::start isOriginator=${e} step=${this.step} force=${t} keysExchanged=${this.keysExchanged}`),e?!this.keysExchanged&&this.step===kr.KEY_HANDSHAKE_NONE||t?(this.debug&&console.debug(`KeyExchange::${this.context}::start -- start key exchange (force=${t}) -- step=${this.step}`,this.step),this.clean(),this.step=kr.KEY_HANDSHAKE_SYNACK,this.emit(ta.KEY_INFO,this.step),this.communicationLayer.sendMessage({type:kr.KEY_HANDSHAKE_SYN,pubkey:this.myPublicKey})):this.debug&&console.debug(`KeyExchange::${this.context}::start -- key exchange already ${this.keysExchanged?"done":"in progress"} -- aborted.`,this.step):this.keysExchanged&&!0!==t?this.debug&&console.debug("KeyExchange::start don't send KEY_HANDSHAKE_START -- exchange already done."):(this.communicationLayer.sendMessage({type:kr.KEY_HANDSHAKE_START}),this.clean())}checkStep(e){if(e.length>0&&-1===e.indexOf(this.step.toString()))throw new Error(`Wrong Step "${this.step}" not within ${e}`)}setKeysExchanged(e){this.keysExchanged=e}areKeysExchanged(){return this.keysExchanged}getMyPublicKey(){return this.myPublicKey}setOtherPublicKey(e){this.debug&&console.debug("KeyExchange::setOtherPubKey()",e),this.otherPublicKey=e}encryptMessage(e){if(!this.otherPublicKey)throw new Error("encryptMessage: Keys not exchanged - missing otherPubKey");return this.myECIES.encrypt(e,this.otherPublicKey)}decryptMessage(e){if(!this.otherPublicKey)throw new Error("decryptMessage: Keys not exchanged - missing otherPubKey");return this.myECIES.decrypt(e)}getKeyInfo(){return{ecies:Object.assign(Object.assign({},this.myECIES.getKeyInfo()),{otherPubKey:this.otherPublicKey}),step:this.step,keysExchanged:this.areKeysExchanged()}}toString(){const e={keyInfo:this.getKeyInfo(),keysExchanged:this.keysExchanged,step:this.step};return JSON.stringify(e)}}const xr=e=>new Promise((t=>{setTimeout(t,e)})),Cr=(e,t,a=200)=>Qt(void 0,void 0,void 0,(function*(){let d;const i=Date.now();let p=!1;for(;!p;){if(p=Date.now()-i>3e5,d=t[e],void 0!==d.elapsedTime)return d;yield xr(a)}throw new Error(`RPC ${e} timed out`)})),Mr=e=>Qt(void 0,void 0,void 0,(function*(){var t,a,d,i;e.state.debug&&console.debug(`SocketService::connectAgain instance.state.socket?.connected=${null===(t=e.state.socket)||void 0===t?void 0:t.connected} trying to reconnect after socketio disconnection`,e),yield xr(200),(null===(a=e.state.socket)||void 0===a?void 0:a.connected)||(e.state.resumed=!0,null===(d=e.state.socket)||void 0===d||d.connect(),e.emit(ta.SOCKET_RECONNECT),null===(i=e.state.socket)||void 0===i||i.emit(ta.JOIN_CHANNEL,e.state.channelId,`${e.state.context}connect_again`))}));function Dr(e){"undefined"!=typeof window&&"undefined"!=typeof document&&(e.state.debug&&console.debug(`SocketService::checkFocus hasFocus=${document.hasFocus()}`,e),document.hasFocus()?Mr(e).catch((e=>{console.error("SocketService::checkFocus Error reconnecting socket",e)})):window.addEventListener("focus",(()=>{Mr(e).catch((e=>{console.error("SocketService::checkFocus Error reconnecting socket",e)}))}),{once:!0}))}const Or=[{event:"error",handler:function(e){return t=>{e.state.debug&&console.debug("SocketService::on 'error' ",t),Dr(e)}}},{event:"ping",handler:function(e){return()=>{e.state.debug&&console.debug("SocketService::on 'ping'")}}},{event:"reconnect",handler:function(e){return t=>{e.state.debug&&console.debug(`SocketService::on 'reconnect' attempt=${t}`)}}},{event:"reconnect_error",handler:function(e){return t=>{e.state.debug&&console.debug("SocketService::on 'reconnect_error'",t)}}},{event:"reconnect_failed",handler:function(e){return()=>{e.state.debug&&console.debug("SocketService::on 'reconnect_failed'")}}},{event:"disconnect",handler:function(e){return t=>{e.state.debug&&console.debug(`SocketService::on 'disconnect' manualDisconnect=${e.state.manualDisconnect}`,t),e.state.manualDisconnect||(e.emit(ta.SOCKET_DISCONNECTED),Dr(e))}}}],Ir=[{event:"clients_connected",handler:function(e,t){return a=>Qt(this,void 0,void 0,(function*(){var a,d,i,p,r,n,s,o;e.state.debug&&console.debug(`SocketService::${e.state.context}::setupChannelListener::on 'clients_connected-${t}'  resumed=${e.state.resumed}  clientsPaused=${e.state.clientsPaused} keysExchanged=${null===(a=e.state.keyExchange)||void 0===a?void 0:a.areKeysExchanged()} isOriginator=${e.state.isOriginator}`),e.emit(ta.CLIENTS_CONNECTED,{isOriginator:e.state.isOriginator,keysExchanged:null===(d=e.state.keyExchange)||void 0===d?void 0:d.areKeysExchanged(),context:e.state.context}),e.state.resumed?(e.state.isOriginator||(e.state.debug&&console.debug(`SocketService::${e.state.context}::on 'clients_connected' / keysExchanged=${null===(i=e.state.keyExchange)||void 0===i?void 0:i.areKeysExchanged()} -- backward compatibility`),null===(p=e.state.keyExchange)||void 0===p||p.start({isOriginator:null!==(r=e.state.isOriginator)&&void 0!==r&&r})),e.state.resumed=!1):e.state.clientsPaused?console.debug("SocketService::on 'clients_connected' skip sending originatorInfo on pause"):e.state.isOriginator||(e.state.debug&&console.debug(`SocketService::${e.state.context}::on 'clients_connected' / keysExchanged=${null===(n=e.state.keyExchange)||void 0===n?void 0:n.areKeysExchanged()} -- backward compatibility`),null===(s=e.state.keyExchange)||void 0===s||s.start({isOriginator:null!==(o=e.state.isOriginator)&&void 0!==o&&o,force:!0})),e.state.clientsConnected=!0,e.state.clientsPaused=!1}))}},{event:"channel_created",handler:function(e,t){return a=>{e.state.debug&&console.debug(`SocketService::${e.state.context}::setupChannelListener::on 'channel_created-${t}'`,a),e.emit(ta.CHANNEL_CREATED,a)}}},{event:"clients_disconnected",handler:function(e,t){return()=>{var a;e.state.clientsConnected=!1,e.state.debug&&console.debug(`SocketService::${e.state.context}::setupChannelListener::on 'clients_disconnected-${t}'`),e.state.isOriginator&&!e.state.clientsPaused&&(null===(a=e.state.keyExchange)||void 0===a||a.clean()),e.emit(ta.CLIENTS_DISCONNECTED,t)}}},{event:"message",handler:function(e,t){return({id:a,message:d,error:i})=>{var p,r,n,s,o,l,m,c,u,h,f;if(e.state.debug&&console.debug(`SocketService::${e.state.context}::on 'message' ${t} keysExchanged=${null===(p=e.state.keyExchange)||void 0===p?void 0:p.areKeysExchanged()}`,d),i)throw e.state.debug&&console.debug(`\n      SocketService::${e.state.context}::on 'message' error=${i}`),new Error(i);try{!function(e,t){if(t!==e.channelId)throw e.debug&&console.error(`Wrong id ${t} - should be ${e.channelId}`),new Error("Wrong id")}(e.state,a)}catch(e){return void console.error("ignore message --- wrong id ",d)}if(e.state.isOriginator&&(null==d?void 0:d.type)===kr.KEY_HANDSHAKE_START)return e.state.debug&&console.debug(`SocketService::${e.state.context}::on 'message' received HANDSHAKE_START isOriginator=${e.state.isOriginator}`,d),void(null===(r=e.state.keyExchange)||void 0===r||r.start({isOriginator:null!==(n=e.state.isOriginator)&&void 0!==n&&n,force:!0}));if((null==d?void 0:d.type)===aa.PING)return e.state.debug&&console.debug(`SocketService::${e.state.context}::on 'message' ping `),void e.emit(ta.MESSAGE,{message:{type:"ping"}});if(e.state.debug&&console.debug(`SocketService::${e.state.context}::on 'message' originator=${e.state.isOriginator}, type=${null==d?void 0:d.type}, keysExchanged=${null===(s=e.state.keyExchange)||void 0===s?void 0:s.areKeysExchanged()}`),null===(o=null==d?void 0:d.type)||void 0===o?void 0:o.startsWith("key_handshake"))return e.state.debug&&console.debug(`SocketService::${e.state.context}::on 'message' emit KEY_EXCHANGE`,d),void e.emit(Tr.KEY_EXCHANGE,{message:d,context:e.state.context});if(null===(l=e.state.keyExchange)||void 0===l?void 0:l.areKeysExchanged()){if(-1!==d.toString().indexOf("type"))return console.warn("SocketService::on 'message' received non encrypted unkwown message"),void e.emit(ta.MESSAGE,d)}else{let t=!1;try{null===(m=e.state.keyExchange)||void 0===m||m.decryptMessage(d),t=!0}catch(e){}if(!t)return e.state.isOriginator?null===(u=e.state.keyExchange)||void 0===u||u.start({isOriginator:null!==(h=e.state.isOriginator)&&void 0!==h&&h}):e.sendMessage({type:kr.KEY_HANDSHAKE_START}),void console.warn("Message ignored because invalid key exchange status",d);console.warn("Invalid key exchange status detected --- updating it."),null===(c=e.state.keyExchange)||void 0===c||c.setKeysExchanged(!0)}const v=null===(f=e.state.keyExchange)||void 0===f?void 0:f.decryptMessage(d),b=JSON.parse(null!=v?v:"{}");if((null==b?void 0:b.type)===aa.PAUSE?e.state.clientsPaused=!0:e.state.clientsPaused=!1,e.state.isOriginator&&b.data){const t=b.data,a=e.state.rpcMethodTracker[t.id];if(a){const d=Date.now()-a.timestamp;e.state.debug&&console.debug(`SocketService::${e.state.context}::on 'message' received answer for id=${t.id} method=${a.method} responseTime=${d}`,b);const i=Object.assign(Object.assign({},a),{result:t.result,elapsedTime:d});e.state.rpcMethodTracker[t.id]=i,e.state.debug&&console.debug("HACK (wallet <7.3) update rpcMethodTracker",i),e.emit(ta.AUTHORIZED)}}e.emit(ta.MESSAGE,{message:b})}}},{event:"clients_waiting_to_join",handler:function(e,t){return a=>{e.state.debug&&console.debug(`SocketService::${e.state.context}::setupChannelListener::on 'clients_waiting_to_join-${t}'`,a),e.emit(ta.CLIENTS_WAITING,a)}}}],Vr=[{event:ta.KEY_INFO,handler:function(e){return t=>{e.state.debug&&console.debug("SocketService::on 'KEY_INFO'",t),e.emit(ta.KEY_INFO,t)}}},{event:ta.KEYS_EXCHANGED,handler:function(e){return()=>{var t,a;e.state.debug&&console.debug(`SocketService::on 'keys_exchanged' keyschanged=${null===(t=e.state.keyExchange)||void 0===t?void 0:t.areKeysExchanged()}`),e.emit(ta.KEYS_EXCHANGED,{keysExchanged:null===(a=e.state.keyExchange)||void 0===a?void 0:a.areKeysExchanged(),isOriginator:e.state.isOriginator});const d={keyInfo:e.getKeyInfo()};e.emit(ta.SERVICE_STATUS,d)}}}];function Rr(e,t){e.state.debug&&console.debug(`SocketService::${e.state.context}::setupChannelListener setting socket listeners for channel ${t}...`);const{socket:a}=e.state,{keyExchange:d}=e.state;Or.forEach((({event:d,handler:i})=>{const p=`${d}-${t}`;null==a||a.on(p,i(e))})),Ir.forEach((({event:d,handler:i})=>{const p=`${d}-${t}`;null==a||a.on(p,i(e,t))})),Vr.forEach((({event:t,handler:a})=>{null==d||d.on(t,a(e))}))}function Lr(e,t){var a,d;if(!e.state.channelId)throw new Error("Create a channel first");e.state.debug&&console.debug(`SocketService::${e.state.context}::sendMessage() areKeysExchanged=${null===(a=e.state.keyExchange)||void 0===a?void 0:a.areKeysExchanged()}`,t);(null===(d=null==t?void 0:t.type)||void 0===d?void 0:d.startsWith("key_handshake"))?function(e,t){var a;e.state.debug&&console.debug(`SocketService::${e.state.context}::sendMessage()`,t),null===(a=e.state.socket)||void 0===a||a.emit(ta.MESSAGE,{id:e.state.channelId,context:e.state.context,message:t})}(e,t):(!function(e,t){var a;if(!(null===(a=e.state.keyExchange)||void 0===a?void 0:a.areKeysExchanged()))throw e.state.debug&&console.debug(`SocketService::${e.state.context}::sendMessage() ERROR keys not exchanged`,t),new Error("Keys not exchanged BBB")}(e,t),function(e,t){var a;const d=null!==(a=null==t?void 0:t.method)&&void 0!==a?a:"",i=null==t?void 0:t.id;e.state.isOriginator&&i&&(e.state.rpcMethodTracker[i]={timestamp:Date.now(),method:d})}(e,t),function(e,t){var a,d;const i=null===(a=e.state.keyExchange)||void 0===a?void 0:a.encryptMessage(JSON.stringify(t)),p={id:e.state.channelId,context:e.state.context,message:i,plaintext:e.state.hasPlaintext?JSON.stringify(t):void 0};e.state.debug&&console.debug(`SocketService::${e.state.context}::sendMessage()`,p),t.type===aa.TERMINATE&&(e.state.manualDisconnect=!0),null===(d=e.state.socket)||void 0===d||d.emit(ta.MESSAGE,p)}(e,t),function(e,t){var a;return Qt(this,void 0,void 0,(function*(){const d=null==t?void 0:t.id,i=null!==(a=null==t?void 0:t.method)&&void 0!==a?a:"";if(e.state.isOriginator&&d)try{const a=yield Cr(d,e.state.rpcMethodTracker,200);e.state.debug&&console.debug(`SocketService::waitForRpc id=${t.id} ${i} ( ${a.elapsedTime} ms)`,a.result)}catch(e){console.warn(`Error rpcId=${t.id} ${i}`,e)}}))}(e,t).catch((e=>{console.warn("Error handleRpcReplies",e)})))}class Pr extends da.EventEmitter2{constructor({otherPublicKey:e,reconnect:t,communicationLayerPreference:a,transports:d,communicationServerUrl:i,context:p,ecies:r,logging:n}){super(),this.state={clientsConnected:!1,clientsPaused:!1,manualDisconnect:!1,rpcMethodTracker:{},hasPlaintext:!1,communicationServerUrl:""},this.state.resumed=t,this.state.context=p,this.state.communicationLayerPreference=a,this.state.debug=!0===(null==n?void 0:n.serviceLayer),this.state.communicationServerUrl=i,this.state.hasPlaintext=this.state.communicationServerUrl!==ra&&!0===(null==n?void 0:n.plaintext);const s={autoConnect:!1,transports:na};d&&(s.transports=d),this.state.debug&&console.debug(`SocketService::constructor() Socket IO url: ${this.state.communicationServerUrl}`),this.state.socket=Nr(i,s);const o={communicationLayer:this,otherPublicKey:e,sendPublicKey:!1,context:this.state.context,ecies:r,logging:n};this.state.keyExchange=new Ar(o)}resetKeys(){return(e=this).state.debug&&console.debug("SocketService::resetKeys()"),void(null===(t=e.state.keyExchange)||void 0===t||t.resetKeys());var e,t}createChannel(){return function(e){var t,a,d,i;e.state.debug&&console.debug(`SocketService::${e.state.context}::createChannel()`),(null===(t=e.state.socket)||void 0===t?void 0:t.connected)||null===(a=e.state.socket)||void 0===a||a.connect(),e.state.manualDisconnect=!1,e.state.isOriginator=!0;const p=ba();return e.state.channelId=p,Rr(e,p),null===(d=e.state.socket)||void 0===d||d.emit(ta.JOIN_CHANNEL,p,`${e.state.context}createChannel`),{channelId:p,pubKey:(null===(i=e.state.keyExchange)||void 0===i?void 0:i.getMyPublicKey())||""}}(this)}connectToChannel({channelId:e,isOriginator:t=!1,withKeyExchange:a=!1}){return function({options:e,instance:t}){var a,d,i,p;const{channelId:r,withKeyExchange:n,isOriginator:s}=e;if(t.state.debug&&console.debug(`SocketService::${t.state.context}::connectToChannel() channelId=${r} isOriginator=${s}`,null===(a=t.state.keyExchange)||void 0===a?void 0:a.toString()),null===(d=t.state.socket)||void 0===d?void 0:d.connected)throw new Error("socket already connected");t.state.manualDisconnect=!1,null===(i=t.state.socket)||void 0===i||i.connect(),t.state.withKeyExchange=n,t.state.isOriginator=s,t.state.channelId=r,Rr(t,r),null===(p=t.state.socket)||void 0===p||p.emit(ta.JOIN_CHANNEL,r,`${t.state.context}_connectToChannel`)}({options:{channelId:e,isOriginator:t,withKeyExchange:a},instance:this})}getKeyInfo(){return this.state.keyExchange.getKeyInfo()}keyCheck(){var e,t;null===(t=(e=this).state.socket)||void 0===t||t.emit(ta.MESSAGE,{id:e.state.channelId,context:e.state.context,message:{type:kr.KEY_HANDSHAKE_CHECK,pubkey:e.getKeyInfo().ecies.otherPubKey}})}sendMessage(e){return Lr(this,e)}ping(){return(e=this).state.debug&&console.debug(`SocketService::${e.state.context}::ping() keysExchanged=${null===(t=e.state.keyExchange)||void 0===t?void 0:t.areKeysExchanged()}`),e.state.isOriginator||((null===(a=e.state.keyExchange)||void 0===a?void 0:a.areKeysExchanged())?e.sendMessage({type:aa.READY}):null===(d=e.state.keyExchange)||void 0===d||d.start({isOriginator:null!==(i=e.state.isOriginator)&&void 0!==i&&i})),void(null===(p=e.state.socket)||void 0===p||p.emit(ta.MESSAGE,{id:e.state.channelId,context:e.state.context,message:{type:aa.PING}}));var e,t,a,d,i,p}pause(){return(e=this).state.debug&&console.debug(`SocketService::${e.state.context}::pause()`),e.state.manualDisconnect=!0,(null===(t=e.state.keyExchange)||void 0===t?void 0:t.areKeysExchanged())&&e.sendMessage({type:aa.PAUSE}),void(null===(a=e.state.socket)||void 0===a||a.disconnect());var e,t,a}isConnected(){var e;return null===(e=this.state.socket)||void 0===e?void 0:e.connected}resume(){return(e=this).state.debug&&console.debug(`SocketService::${e.state.context}::resume() connected=${null===(t=e.state.socket)||void 0===t?void 0:t.connected} manualDisconnect=${e.state.manualDisconnect} resumed=${e.state.resumed} keysExchanged=${null===(a=e.state.keyExchange)||void 0===a?void 0:a.areKeysExchanged()}`),(null===(d=e.state.socket)||void 0===d?void 0:d.connected)?e.state.debug&&console.debug("SocketService::resume() already connected."):(null===(i=e.state.socket)||void 0===i||i.connect(),e.state.debug&&console.debug(`SocketService::resume() after connecting socket --\x3e connected=${null===(p=e.state.socket)||void 0===p?void 0:p.connected}`),null===(r=e.state.socket)||void 0===r||r.emit(ta.JOIN_CHANNEL,e.state.channelId,`${e.state.context}_resume`)),(null===(n=e.state.keyExchange)||void 0===n?void 0:n.areKeysExchanged())?e.state.isOriginator||e.sendMessage({type:aa.READY}):e.state.isOriginator||null===(s=e.state.keyExchange)||void 0===s||s.start({isOriginator:null!==(o=e.state.isOriginator)&&void 0!==o&&o}),e.state.manualDisconnect=!1,void(e.state.resumed=!0);var e,t,a,d,i,p,r,n,s,o}disconnect(e){return function(e,t){var a,d;e.state.debug&&console.debug(`SocketService::${e.state.context}::disconnect()`,t),(null==t?void 0:t.terminate)&&(e.state.channelId=t.channelId,null===(a=e.state.keyExchange)||void 0===a||a.clean()),e.state.rpcMethodTracker={},e.state.manualDisconnect=!0,null===(d=e.state.socket)||void 0===d||d.disconnect()}(this,e)}}var Br,Fr;function jr(e){return()=>Qt(this,void 0,void 0,(function*(){var t,a,d;const{state:i}=e;if(i.authorized)return;yield(()=>Qt(this,void 0,void 0,(function*(){for(;!i.walletInfo;)yield xr(500)})))();const p="7.3".localeCompare((null===(t=i.walletInfo)||void 0===t?void 0:t.version)||"");if(i.debug&&console.debug(`RemoteCommunication HACK 'authorized' version=${null===(a=i.walletInfo)||void 0===a?void 0:a.version} compareValue=${p}`),1!==p)return;const r=i.platformType===Fr.MobileWeb||i.platformType===Fr.ReactNative||i.platformType===Fr.MetaMaskMobileWebview;i.debug&&console.debug(`RemoteCommunication HACK 'authorized' platform=${i.platformType} secure=${r} channel=${i.channelId} walletVersion=${null===(d=i.walletInfo)||void 0===d?void 0:d.version}`),r&&(i.authorized=!0,e.emit(ta.AUTHORIZED))}))}function Kr(e){return t=>{const{state:a}=e;a.debug&&console.debug(`RemoteCommunication::${a.context}::on 'channel_created' channelId=${t}`),e.emit(ta.CHANNEL_CREATED,t)}}!function(e){e.SOCKET="socket"}(Br||(Br={})),function(e){e.NonBrowser="nodejs",e.MetaMaskMobileWebview="in-app-browser",e.DesktopWeb="web-desktop",e.MobileWeb="web-mobile",e.ReactNative="react-native"}(Fr||(Fr={}));var Ur={exports:{}},qr={},zr={exports:{}},$r={},Hr=$r;function Yr(e){return e<0?-1:1}function Wr(e,t){t.unsigned||--e;const a=t.unsigned?0:-Math.pow(2,e),d=Math.pow(2,e)-1,i=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),p=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,r){r||(r={});let n=+e;if(r.enforceRange){if(!Number.isFinite(n))throw new TypeError("Argument is not a finite number");if(n=Yr(n)*Math.floor(Math.abs(n)),n<a||n>d)throw new TypeError("Argument is not in byte range");return n}if(!isNaN(n)&&r.clamp)return n=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(n),n<a&&(n=a),n>d&&(n=d),n;if(!Number.isFinite(n)||0===n)return 0;if(n=Yr(n)*Math.floor(Math.abs(n)),n%=i,!t.unsigned&&n>=p)return n-i;if(t.unsigned)if(n<0)n+=i;else if(-0===n)return 0;return n}}$r.void=function(){},$r.boolean=function(e){return!!e},$r.byte=Wr(8,{unsigned:!1}),$r.octet=Wr(8,{unsigned:!0}),$r.short=Wr(16,{unsigned:!1}),$r["unsigned short"]=Wr(16,{unsigned:!0}),$r.long=Wr(32,{unsigned:!1}),$r["unsigned long"]=Wr(32,{unsigned:!0}),$r["long long"]=Wr(32,{unsigned:!1,moduloBitLength:64}),$r["unsigned long long"]=Wr(32,{unsigned:!0,moduloBitLength:64}),$r.double=function(e){const t=+e;if(!Number.isFinite(t))throw new TypeError("Argument is not a finite floating-point value");return t},$r["unrestricted double"]=function(e){const t=+e;if(isNaN(t))throw new TypeError("Argument is NaN");return t},$r.float=$r.double,$r["unrestricted float"]=$r["unrestricted double"],$r.DOMString=function(e,t){return t||(t={}),t.treatNullAsEmptyString&&null===e?"":String(e)},$r.ByteString=function(e,t){const a=String(e);let d;for(let e=0;void 0!==(d=a.codePointAt(e));++e)if(d>255)throw new TypeError("Argument is not a valid bytestring");return a},$r.USVString=function(e){const t=String(e),a=t.length,d=[];for(let e=0;e<a;++e){const i=t.charCodeAt(e);if(i<55296||i>57343)d.push(String.fromCodePoint(i));else if(56320<=i&&i<=57343)d.push(String.fromCodePoint(65533));else if(e===a-1)d.push(String.fromCodePoint(65533));else{const a=t.charCodeAt(e+1);if(56320<=a&&a<=57343){const t=1023&i,p=1023&a;d.push(String.fromCodePoint(65536+1024*t+p)),++e}else d.push(String.fromCodePoint(65533))}}return d.join("")},$r.Date=function(e,t){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},$r.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e};var Gr={exports:{}};!function(e){e.exports.mixin=function(e,t){const a=Object.getOwnPropertyNames(t);for(let d=0;d<a.length;++d)Object.defineProperty(e,a[d],Object.getOwnPropertyDescriptor(t,a[d]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}}(Gr);var Zr=Gr.exports,Jr={},Xr={exports:{}},Qr={},en=b,tn=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]],an={TRANSITIONAL:0,NONTRANSITIONAL:1};function dn(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function pn(e){for(var t=0,a=tn.length-1;t<=a;){var d=Math.floor((t+a)/2),i=tn[d];if(i[0][0]<=e&&i[0][1]>=e)return i;i[0][0]>e?a=d-1:t=d+1}return null}var rn=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function nn(e){return e.replace(rn,"_").length}var sn=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function on(e,t){"xn--"===e.substr(0,4)&&(e=en.toUnicode(e),an.NONTRANSITIONAL);var a=!1;(dn(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(sn))&&(a=!0);for(var d=nn(e),i=0;i<d;++i){var p=pn(e.codePointAt(i));if(ln===an.TRANSITIONAL&&"valid"!==p[1]||ln===an.NONTRANSITIONAL&&"valid"!==p[1]&&"deviation"!==p[1]){a=!0;break}}return{label:e,error:a}}function ln(e,t,a){var d=function(e,t,a){for(var d=!1,i="",p=nn(e),r=0;r<p;++r){var n=e.codePointAt(r),s=pn(n);switch(s[1]){case"disallowed":d=!0,i+=String.fromCodePoint(n);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,s[2]);break;case"deviation":a===an.TRANSITIONAL?i+=String.fromCodePoint.apply(String,s[2]):i+=String.fromCodePoint(n);break;case"valid":i+=String.fromCodePoint(n);break;case"disallowed_STD3_mapped":t?(d=!0,i+=String.fromCodePoint(n)):i+=String.fromCodePoint.apply(String,s[2]);break;case"disallowed_STD3_valid":t&&(d=!0),i+=String.fromCodePoint(n)}}return{string:i,error:d}}(e,t,a);d.string=dn(d.string);for(var i=d.string.split("."),p=0;p<i.length;++p)try{var r=on(i[p]);i[p]=r.label,d.error=d.error||r.error}catch(e){d.error=!0}return{string:i.join("."),error:d.error}}Qr.toASCII=function(e,t,a,d){var i=ln(e,t,a),p=i.string.split(".");if(p=p.map((function(e){try{return en.toASCII(e)}catch(t){return i.error=!0,e}})),d){var r=p.slice(0,p.length-1).join(".").length;(r.length>253||0===r.length)&&(i.error=!0);for(var n=0;n<p.length;++n)if(p.length>63||0===p.length){i.error=!0;break}}return i.error?null:p.join(".")},Qr.toUnicode=function(e,t){var a=ln(e,t,an.NONTRANSITIONAL);return{domain:a.string,error:a.error}},Qr.PROCESSING_OPTIONS=an,function(e){const t=b,a=Qr,d={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},i=Symbol("failure");function p(e){return t.ucs2.decode(e).length}function r(e,t){const a=e[t];return isNaN(a)?void 0:String.fromCodePoint(a)}function n(e){return e>=48&&e<=57}function s(e){return e>=65&&e<=90||e>=97&&e<=122}function o(e){return n(e)||e>=65&&e<=70||e>=97&&e<=102}function l(e){return"."===e||"%2e"===e.toLowerCase()}function m(e){return 2===e.length&&s(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function c(e){return void 0!==d[e]}function u(e){return c(e.scheme)}function h(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function f(e){return e<=31||e>126}const v=new Set([32,34,35,60,62,63,96,123,125]);function g(e){return f(e)||v.has(e)}const y=new Set([47,58,59,61,64,91,92,93,94,124]);function w(e){return g(e)||y.has(e)}function _(e,t){const a=String.fromCodePoint(e);return t(e)?function(e){const t=new Buffer(e);let a="";for(let e=0;e<t.length;++e)a+=h(t[e]);return a}(a):a}function S(e){let t=10;if(e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e)return 0;return(10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?i:parseInt(e,t)}function E(e,d){if("["===e[0])return"]"!==e[e.length-1]?i:function(e){const a=[0,0,0,0,0,0,0,0];let d=0,p=null,s=0;if(58===(e=t.ucs2.decode(e))[s]){if(58!==e[s+1])return i;s+=2,++d,p=d}for(;s<e.length;){if(8===d)return i;if(58===e[s]){if(null!==p)return i;++s,++d,p=d;continue}let t=0,l=0;for(;l<4&&o(e[s]);)t=16*t+parseInt(r(e,s),16),++s,++l;if(46===e[s]){if(0===l)return i;if(s-=l,d>6)return i;let t=0;for(;void 0!==e[s];){let p=null;if(t>0){if(!(46===e[s]&&t<4))return i;++s}if(!n(e[s]))return i;for(;n(e[s]);){const t=parseInt(r(e,s));if(null===p)p=t;else{if(0===p)return i;p=10*p+t}if(p>255)return i;++s}a[d]=256*a[d]+p,++t,2!==t&&4!==t||++d}if(4!==t)return i;break}if(58===e[s]){if(++s,void 0===e[s])return i}else if(void 0!==e[s])return i;a[d]=t,++d}if(null!==p){let e=d-p;for(d=7;0!==d&&e>0;){const t=a[p+e-1];a[p+e-1]=a[d],a[d]=t,--d,--e}}else if(null===p&&8!==d)return i;return a}(e.substring(1,e.length-1));if(!d)return function(e){if(a=e,-1!==a.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return i;var a;let d="";const p=t.ucs2.decode(e);for(let e=0;e<p.length;++e)d+=_(p[e],f);return d}(e);const p=function(e){const t=new Buffer(e),a=[];for(let e=0;e<t.length;++e)37!==t[e]?a.push(t[e]):37===t[e]&&o(t[e+1])&&o(t[e+2])?(a.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):a.push(t[e]);return new Buffer(a).toString()}(e),s=a.toASCII(p,!1,a.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===s)return i;if(-1!==s.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return i;const l=function(e){const t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;const a=[];for(const d of t){if(""===d)return e;const t=S(d);if(t===i)return e;a.push(t)}for(let e=0;e<a.length-1;++e)if(a[e]>255)return i;if(a[a.length-1]>=Math.pow(256,5-a.length))return i;let d=a.pop(),p=0;for(const e of a)d+=e*Math.pow(256,3-p),++p;return d}(s);return"number"==typeof l||l===i?l:s}function N(e){return"number"==typeof e?function(e){let t="",a=e;for(let e=1;e<=4;++e)t=String(a%256)+t,4!==e&&(t="."+t),a=Math.floor(a/256);return t}(e):e instanceof Array?"["+function(e){let t="";const a=function(e){let t=null,a=1,d=null,i=0;for(let p=0;p<e.length;++p)0!==e[p]?(i>a&&(t=d,a=i),d=null,i=0):(null===d&&(d=p),++i);return i>a&&(t=d,a=i),{idx:t,len:a}}(e),d=a.idx;let i=!1;for(let a=0;a<=7;++a)i&&0===e[a]||(i&&(i=!1),d!==a?(t+=e[a].toString(16),7!==a&&(t+=":")):(t+=0===a?"::":":",i=!0));return t}(e)+"]":e}function T(e){const t=e.path;var a;0!==t.length&&("file"===e.scheme&&1===t.length&&(a=t[0],/^[A-Za-z]:$/.test(a))||t.pop())}function k(e){return""!==e.username||""!==e.password}function A(e,a,d,p,r){if(this.pointer=0,this.input=e,this.base=a||null,this.encodingOverride=d||"utf-8",this.stateOverride=r,this.url=p,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const n=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(n!==this.input&&(this.parseError=!0),this.input=n,this.state=r||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=t.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),a=this["parse "+this.state](e,t);if(!a)break;if(a===i){this.failure=!0;break}}}A.prototype["parse scheme start"]=function(e,t){if(s(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,i;this.state="no scheme",--this.pointer}return!0},A.prototype["parse scheme"]=function(e,t){if(function(e){return s(e)||n(e)}(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride){if(u(this.url)&&!c(this.buffer))return!1;if(!u(this.url)&&c(this.buffer))return!1;if((k(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):u(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":u(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,i;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},A.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?i:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},A.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},A.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},A.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):u(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},A.prototype["parse relative slash"]=function(e){return!u(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},A.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},A.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},A.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=p(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const a=_(e,w);this.passwordTokenSeenFlag?this.url.password+=a:this.url.username+=a}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||u(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,i;this.pointer-=p(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},A.prototype["parse hostname"]=A.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||u(this.url)&&92===e){if(--this.pointer,u(this.url)&&""===this.buffer)return this.parseError=!0,i;if(this.stateOverride&&""===this.buffer&&(k(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=E(this.buffer,u(this.url));if(e===i)return i;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t;else{if(""===this.buffer)return this.parseError=!0,i;const e=E(this.buffer,u(this.url));if(e===i)return i;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},A.prototype["parse port"]=function(e,t){if(n(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||u(this.url)&&92===e||this.stateOverride))return this.parseError=!0,i;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,i;this.url.port=e===(a=this.url.scheme,d[a])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var a;return!0};const x=new Set([47,92,63,35]);A.prototype["parse file"]=function(e){var t,a;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(t=e,a=this.input[this.pointer+1],!s(t)||58!==a&&124!==a)||this.input.length-this.pointer-1>=2&&!x.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),T(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},A.prototype["parse file slash"]=function(e){var t;return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(2===(t=this.base.path[0]).length&&s(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},A.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&m(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=E(this.buffer,u(this.url));if(e===i)return i;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0},A.prototype["parse path start"]=function(e){return u(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},A.prototype["parse path"]=function(e){if(isNaN(e)||47===e||u(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(u(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t?(T(this.url),47===e||u(this.url)&&92===e||this.url.path.push("")):!l(this.buffer)||47===e||u(this.url)&&92===e?l(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&m(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||o(this.input[this.pointer+1])&&o(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=_(e,g);var t;return!0},A.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||o(this.input[this.pointer+1])&&o(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+_(e,f))),!0},A.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){u(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=h(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||o(this.input[this.pointer+1])&&o(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},A.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||o(this.input[this.pointer+1])&&o(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=_(e,f))),!0},e.exports.serializeURL=function(e,t){let a=e.scheme+":";if(null!==e.host?(a+="//",""===e.username&&""===e.password||(a+=e.username,""!==e.password&&(a+=":"+e.password),a+="@"),a+=N(e.host),null!==e.port&&(a+=":"+e.port)):null===e.host&&"file"===e.scheme&&(a+="//"),e.cannotBeABaseURL)a+=e.path[0];else for(const t of e.path)a+="/"+t;return null!==e.query&&(a+="?"+e.query),t||null===e.fragment||(a+="#"+e.fragment),a},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let t=e.scheme+"://";return t+=N(e.host),null!==e.port&&(t+=":"+e.port),t}({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});const a=new A(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return a.failure?"failure":a.url},e.exports.setTheUsername=function(e,a){e.username="";const d=t.ucs2.decode(a);for(let t=0;t<d.length;++t)e.username+=_(d[t],w)},e.exports.setThePassword=function(e,a){e.password="";const d=t.ucs2.decode(a);for(let t=0;t<d.length;++t)e.password+=_(d[t],w)},e.exports.serializeHost=N,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,a){return void 0===a&&(a={}),e.exports.basicURLParse(t,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}}(Xr);var mn=Xr.exports;const cn=mn;Jr.implementation=class{constructor(e){const t=e[0],a=e[1];let d=null;if(void 0!==a&&(d=cn.basicURLParse(a),"failure"===d))throw new TypeError("Invalid base URL");const i=cn.basicURLParse(t,{baseURL:d});if("failure"===i)throw new TypeError("Invalid URL");this._url=i}get href(){return cn.serializeURL(this._url)}set href(e){const t=cn.basicURLParse(e);if("failure"===t)throw new TypeError("Invalid URL");this._url=t}get origin(){return cn.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){cn.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){cn.cannotHaveAUsernamePasswordPort(this._url)||cn.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){cn.cannotHaveAUsernamePasswordPort(this._url)||cn.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?cn.serializeHost(e.host):cn.serializeHost(e.host)+":"+cn.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||cn.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":cn.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||cn.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":cn.serializeInteger(this._url.port)}set port(e){cn.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:cn.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],cn.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const t=this._url;if(""===e)return void(t.query=null);const a="?"===e[0]?e.substring(1):e;t.query="",cn.basicURLParse(a,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const t="#"===e[0]?e.substring(1):e;this._url.fragment="",cn.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}},function(e){const t=Hr,a=Zr,d=Jr,i=a.implSymbol;function p(a){if(!this||this[i]||!(this instanceof p))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const d=[];for(let e=0;e<arguments.length&&e<2;++e)d[e]=arguments[e];d[0]=t.USVString(d[0]),void 0!==d[1]&&(d[1]=t.USVString(d[1])),e.exports.setup(this,d)}p.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[i].toJSON.apply(this[i],t)},Object.defineProperty(p.prototype,"href",{get(){return this[i].href},set(e){e=t.USVString(e),this[i].href=e},enumerable:!0,configurable:!0}),p.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(p.prototype,"origin",{get(){return this[i].origin},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"protocol",{get(){return this[i].protocol},set(e){e=t.USVString(e),this[i].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"username",{get(){return this[i].username},set(e){e=t.USVString(e),this[i].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"password",{get(){return this[i].password},set(e){e=t.USVString(e),this[i].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"host",{get(){return this[i].host},set(e){e=t.USVString(e),this[i].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hostname",{get(){return this[i].hostname},set(e){e=t.USVString(e),this[i].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"port",{get(){return this[i].port},set(e){e=t.USVString(e),this[i].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"pathname",{get(){return this[i].pathname},set(e){e=t.USVString(e),this[i].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"search",{get(){return this[i].search},set(e){e=t.USVString(e),this[i].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hash",{get(){return this[i].hash},set(e){e=t.USVString(e),this[i].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[i]instanceof d.implementation,create(e,t){let a=Object.create(p.prototype);return this.setup(a,e,t),a},setup(e,t,p){p||(p={}),p.wrapper=e,e[i]=new d.implementation(t,p),e[i][a.wrapperSymbol]=e},interface:p,expose:{Window:{URL:p},Worker:{URL:p}}}}(zr);var un=zr.exports;qr.URL=un.interface,qr.serializeURL=mn.serializeURL,qr.serializeURLOrigin=mn.serializeURLOrigin,qr.basicURLParse=mn.basicURLParse,qr.setTheUsername=mn.setTheUsername,qr.setThePassword=mn.setThePassword,qr.serializeHost=mn.serializeHost,qr.serializeInteger=mn.serializeInteger,qr.parseURL=mn.parseURL;const hn=c.Readable,fn=Symbol("buffer"),vn=Symbol("type");let bn,gn=class e{constructor(){this[vn]="";const t=arguments[0],a=arguments[1],d=[];let i=0;if(t){const a=t,p=Number(a.length);for(let t=0;t<p;t++){const p=a[t];let r;r=p instanceof Buffer?p:ArrayBuffer.isView(p)?Buffer.from(p.buffer,p.byteOffset,p.byteLength):p instanceof ArrayBuffer?Buffer.from(p):p instanceof e?p[fn]:Buffer.from("string"==typeof p?p:String(p)),i+=r.length,d.push(r)}}this[fn]=Buffer.concat(d);let p=a&&void 0!==a.type&&String(a.type).toLowerCase();p&&!/[^\u0020-\u007E]/.test(p)&&(this[vn]=p)}get size(){return this[fn].length}get type(){return this[vn]}text(){return Promise.resolve(this[fn].toString())}arrayBuffer(){const e=this[fn],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new hn;return e._read=function(){},e.push(this[fn]),e.push(null),e}toString(){return"[object Blob]"}slice(){const t=this.size,a=arguments[0],d=arguments[1];let i,p;i=void 0===a?0:a<0?Math.max(t+a,0):Math.min(a,t),p=void 0===d?t:d<0?Math.max(t+d,0):Math.min(d,t);const r=Math.max(p-i,0),n=this[fn].slice(i,i+r),s=new e([],{type:arguments[2]});return s[fn]=n,s}};function yn(e,t,a){Error.call(this,e),this.message=e,this.type=t,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}Object.defineProperties(gn.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(gn.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),yn.prototype=Object.create(Error.prototype),yn.prototype.constructor=yn,yn.prototype.name="FetchError";try{bn=require("encoding").convert}catch(e){}const wn=Symbol("Body internals"),_n=c.PassThrough;function Sn(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=a.size;let i=void 0===d?0:d;var p=a.timeout;let r=void 0===p?0:p;null==e?e=null:Nn(e)?e=Buffer.from(e.toString()):Tn(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof c||(e=Buffer.from(String(e)))),this[wn]={body:e,disturbed:!1,error:null},this.size=i,this.timeout=r,e instanceof c&&e.on("error",(function(e){const a="AbortError"===e.name?e:new yn(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[wn].error=a}))}function En(){var e=this;if(this[wn].disturbed)return Sn.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[wn].disturbed=!0,this[wn].error)return Sn.Promise.reject(this[wn].error);let t=this.body;if(null===t)return Sn.Promise.resolve(Buffer.alloc(0));if(Tn(t)&&(t=t.stream()),Buffer.isBuffer(t))return Sn.Promise.resolve(t);if(!(t instanceof c))return Sn.Promise.resolve(Buffer.alloc(0));let a=[],d=0,i=!1;return new Sn.Promise((function(p,r){let n;e.timeout&&(n=setTimeout((function(){i=!0,r(new yn(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),t.on("error",(function(t){"AbortError"===t.name?(i=!0,r(t)):r(new yn(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))})),t.on("data",(function(t){if(!i&&null!==t){if(e.size&&d+t.length>e.size)return i=!0,void r(new yn(`content size at ${e.url} over limit: ${e.size}`,"max-size"));d+=t.length,a.push(t)}})),t.on("end",(function(){if(!i){clearTimeout(n);try{p(Buffer.concat(a,d))}catch(t){r(new yn(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}}))}))}function Nn(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function Tn(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function kn(e){let t,a,d=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return d instanceof c&&"function"!=typeof d.getBoundary&&(t=new _n,a=new _n,d.pipe(t),d.pipe(a),e[wn].body=t,d=a),d}function An(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":Nn(e)?"application/x-www-form-urlencoded;charset=UTF-8":Tn(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof c?null:"text/plain;charset=UTF-8"}function xn(e){const t=e.body;return null===t?0:Tn(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}Sn.prototype={get body(){return this[wn].body},get bodyUsed(){return this[wn].disturbed},arrayBuffer(){return En.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return En.call(this).then((function(t){return Object.assign(new gn([],{type:e.toLowerCase()}),{[fn]:t})}))},json(){var e=this;return En.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return Sn.Promise.reject(new yn(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return En.call(this).then((function(e){return e.toString()}))},buffer(){return En.call(this)},textConverted(){var e=this;return En.call(this).then((function(t){return function(e,t){if("function"!=typeof bn)throw new Error("The package `encoding` must be installed to use the textConverted() function");const a=t.get("content-type");let d,i,p="utf-8";a&&(d=/charset=([^;]*)/i.exec(a));i=e.slice(0,1024).toString(),!d&&i&&(d=/<meta.+?charset=(['"])(.+?)\1/i.exec(i));!d&&i&&(d=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i),d||(d=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i),d&&d.pop()),d&&(d=/charset=(.*)/i.exec(d.pop())));!d&&i&&(d=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i));d&&(p=d.pop(),"gb2312"!==p&&"gbk"!==p||(p="gb18030"));return bn(e,"UTF-8",p).toString()}(t,e.headers)}))}},Object.defineProperties(Sn.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),Sn.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Sn.prototype))if(!(t in e)){const a=Object.getOwnPropertyDescriptor(Sn.prototype,t);Object.defineProperty(e,t,a)}},Sn.Promise=global.Promise;const Cn=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,Mn=/[^\t\x20-\x7e\x80-\xff]/;function Dn(e){if(e=`${e}`,Cn.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function On(e){if(e=`${e}`,Mn.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function In(e,t){t=t.toLowerCase();for(const a in e)if(a.toLowerCase()===t)return a}const Vn=Symbol("map");class Rn{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[Vn]=Object.create(null),e instanceof Rn){const t=e.raw(),a=Object.keys(t);for(const e of a)for(const a of t[e])this.append(e,a)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw new TypeError("Header pairs must be iterable");const a=[];for(const t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw new TypeError("Each header pair must be iterable");a.push(Array.from(t))}for(const e of a){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const t of Object.keys(e)){const a=e[t];this.append(t,a)}}}}get(e){Dn(e=`${e}`);const t=In(this[Vn],e);return void 0===t?null:this[Vn][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,a=Ln(this),d=0;for(;d<a.length;){var i=a[d];const p=i[0],r=i[1];e.call(t,r,p,this),a=Ln(this),d++}}set(e,t){t=`${t}`,Dn(e=`${e}`),On(t);const a=In(this[Vn],e);this[Vn][void 0!==a?a:e]=[t]}append(e,t){t=`${t}`,Dn(e=`${e}`),On(t);const a=In(this[Vn],e);void 0!==a?this[Vn][a].push(t):this[Vn][e]=[t]}has(e){return Dn(e=`${e}`),void 0!==In(this[Vn],e)}delete(e){Dn(e=`${e}`);const t=In(this[Vn],e);void 0!==t&&delete this[Vn][t]}raw(){return this[Vn]}keys(){return Bn(this,"key")}values(){return Bn(this,"value")}[Symbol.iterator](){return Bn(this,"key+value")}}function Ln(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[Vn]).sort().map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[Vn][t].join(", ")}:function(t){return[t.toLowerCase(),e[Vn][t].join(", ")]})}Rn.prototype.entries=Rn.prototype[Symbol.iterator],Object.defineProperty(Rn.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Rn.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const Pn=Symbol("internal");function Bn(e,t){const a=Object.create(Fn);return a[Pn]={target:e,kind:t,index:0},a}const Fn=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==Fn)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[Pn];const t=e.target,a=e.kind,d=e.index,i=Ln(t,a);return d>=i.length?{value:void 0,done:!0}:(this[Pn].index=d+1,{value:i[d],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function jn(e){const t=Object.assign({__proto__:null},e[Vn]),a=In(e[Vn],"Host");return void 0!==a&&(t[a]=t[a][0]),t}Object.defineProperty(Fn,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const Kn=Symbol("Response internals"),Un=l.STATUS_CODES;class qn{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Sn.call(this,e,t);const a=t.status||200,d=new Rn(t.headers);if(null!=e&&!d.has("Content-Type")){const t=An(e);t&&d.append("Content-Type",t)}this[Kn]={url:t.url,status:a,statusText:t.statusText||Un[a],headers:d,counter:t.counter}}get url(){return this[Kn].url||""}get status(){return this[Kn].status}get ok(){return this[Kn].status>=200&&this[Kn].status<300}get redirected(){return this[Kn].counter>0}get statusText(){return this[Kn].statusText}get headers(){return this[Kn].headers}clone(){return new qn(kn(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Sn.mixIn(qn.prototype),Object.defineProperties(qn.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(qn.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const zn=Symbol("Request internals"),$n=s.URL||qr.URL,Hn=s.parse,Yn=s.format;function Wn(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new $n(e).toString()),Hn(e)}const Gn="destroy"in c.Readable.prototype;function Zn(e){return"object"==typeof e&&"object"==typeof e[zn]}class Jn{constructor(e){let t,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Zn(e)?t=Wn(e.url):(t=e&&e.href?Wn(e.href):Wn(`${e}`),e={});let d=a.method||e.method||"GET";if(d=d.toUpperCase(),(null!=a.body||Zn(e)&&null!==e.body)&&("GET"===d||"HEAD"===d))throw new TypeError("Request with GET/HEAD method cannot have body");let i=null!=a.body?a.body:Zn(e)&&null!==e.body?kn(e):null;Sn.call(this,i,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});const p=new Rn(a.headers||e.headers||{});if(null!=i&&!p.has("Content-Type")){const e=An(i);e&&p.append("Content-Type",e)}let r=Zn(e)?e.signal:null;if("signal"in a&&(r=a.signal),null!=r&&!function(e){const t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!t||"AbortSignal"!==t.constructor.name)}(r))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[zn]={method:d,redirect:a.redirect||e.redirect||"follow",headers:p,parsedURL:t,signal:r},this.follow=void 0!==a.follow?a.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==a.compress?a.compress:void 0===e.compress||e.compress,this.counter=a.counter||e.counter||0,this.agent=a.agent||e.agent}get method(){return this[zn].method}get url(){return Yn(this[zn].parsedURL)}get headers(){return this[zn].headers}get redirect(){return this[zn].redirect}get signal(){return this[zn].signal}clone(){return new Jn(this)}}function Xn(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}Sn.mixIn(Jn.prototype),Object.defineProperty(Jn.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Jn.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),Xn.prototype=Object.create(Error.prototype),Xn.prototype.constructor=Xn,Xn.prototype.name="AbortError";const Qn=s.URL||qr.URL,es=c.PassThrough;function ts(e,t){if(!ts.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return Sn.Promise=ts.Promise,new ts.Promise((function(a,d){const i=new Jn(e,t),p=function(e){const t=e[zn].parsedURL,a=new Rn(e[zn].headers);if(a.has("Accept")||a.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof c.Readable&&!Gn)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let d=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(d="0"),null!=e.body){const t=xn(e);"number"==typeof t&&(d=String(t))}d&&a.set("Content-Length",d),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(t)),a.has("Connection")||i||a.set("Connection","close"),Object.assign({},t,{method:e.method,headers:jn(a),agent:i})}(i),r=("https:"===p.protocol?m:l).request,n=i.signal;let s=null;const o=function(){let e=new Xn("The user aborted a request.");d(e),i.body&&i.body instanceof c.Readable&&as(i.body,e),s&&s.body&&s.body.emit("error",e)};if(n&&n.aborted)return void o();const h=function(){o(),b()},f=r(p);let v;function b(){f.abort(),n&&n.removeEventListener("abort",h),clearTimeout(v)}n&&n.addEventListener("abort",h),i.timeout&&f.once("socket",(function(e){v=setTimeout((function(){d(new yn(`network timeout at: ${i.url}`,"request-timeout")),b()}),i.timeout)})),f.on("error",(function(e){d(new yn(`request to ${i.url} failed, reason: ${e.message}`,"system",e)),s&&s.body&&as(s.body,e),b()})),function(e,t){let a;e.on("socket",(function(e){a=e})),e.on("response",(function(e){const d=e.headers;"chunked"!==d["transfer-encoding"]||d["content-length"]||e.once("close",(function(e){if(a&&a.listenerCount("data")>0&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",t(e)}}))}))}(f,(function(e){n&&n.aborted||s&&s.body&&as(s.body,e)})),parseInt(process.version.substring(1))<14&&f.on("socket",(function(e){e.addListener("close",(function(t){const a=e.listenerCount("data")>0;if(s&&a&&!t&&(!n||!n.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",s.body.emit("error",e)}}))})),f.on("response",(function(e){clearTimeout(v);const t=function(e){const t=new Rn;for(const a of Object.keys(e))if(!Cn.test(a))if(Array.isArray(e[a]))for(const d of e[a])Mn.test(d)||(void 0===t[Vn][a]?t[Vn][a]=[d]:t[Vn][a].push(d));else Mn.test(e[a])||(t[Vn][a]=[e[a]]);return t}(e.headers);if(ts.isRedirect(e.statusCode)){const r=t.get("Location");let n=null;try{n=null===r?null:new Qn(r,i.url).toString()}catch(e){if("manual"!==i.redirect)return d(new yn(`uri requested responds with an invalid redirect URL: ${r}`,"invalid-redirect")),void b()}switch(i.redirect){case"error":return d(new yn(`uri requested responds with a redirect, redirect mode is set to error: ${i.url}`,"no-redirect")),void b();case"manual":if(null!==n)try{t.set("Location",n)}catch(e){d(e)}break;case"follow":if(null===n)break;if(i.counter>=i.follow)return d(new yn(`maximum redirect reached at: ${i.url}`,"max-redirect")),void b();const r={headers:new Rn(i.headers),follow:i.follow,counter:i.counter+1,agent:i.agent,compress:i.compress,method:i.method,body:i.body,signal:i.signal,timeout:i.timeout,size:i.size};if(!function(e,t){const a=new Qn(t).hostname,d=new Qn(e).hostname;return a===d||"."===a[a.length-d.length-1]&&a.endsWith(d)}(i.url,n)||(p=i.url,new Qn(n).protocol!==new Qn(p).protocol))for(const e of["authorization","www-authenticate","cookie","cookie2"])r.headers.delete(e);return 303!==e.statusCode&&i.body&&null===xn(i)?(d(new yn("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void b()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==i.method)||(r.method="GET",r.body=void 0,r.headers.delete("content-length")),a(ts(new Jn(n,r))),void b())}}var p;e.once("end",(function(){n&&n.removeEventListener("abort",h)}));let r=e.pipe(new es);const o={url:i.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:i.size,timeout:i.timeout,counter:i.counter},l=t.get("Content-Encoding");if(!i.compress||"HEAD"===i.method||null===l||204===e.statusCode||304===e.statusCode)return s=new qn(r,o),void a(s);const m={flush:u.Z_SYNC_FLUSH,finishFlush:u.Z_SYNC_FLUSH};if("gzip"==l||"x-gzip"==l)return r=r.pipe(u.createGunzip(m)),s=new qn(r,o),void a(s);if("deflate"==l||"x-deflate"==l){const t=e.pipe(new es);return t.once("data",(function(e){r=8==(15&e[0])?r.pipe(u.createInflate()):r.pipe(u.createInflateRaw()),s=new qn(r,o),a(s)})),void t.on("end",(function(){s||(s=new qn(r,o),a(s))}))}if("br"==l&&"function"==typeof u.createBrotliDecompress)return r=r.pipe(u.createBrotliDecompress()),s=new qn(r,o),void a(s);s=new qn(r,o),a(s)})),function(e,t){const a=t.body;null===a?e.end():Tn(a)?a.stream().pipe(e):Buffer.isBuffer(a)?(e.write(a),e.end()):a.pipe(e)}(f,i)}))}function as(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}ts.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},ts.Promise=global.Promise;var ds=_(Object.freeze({__proto__:null,FetchError:yn,Headers:Rn,Request:Jn,Response:qn,default:ts}));!function(e,t){const a=ds,d=a.default||a,i=function(e,t){return/^\/\//.test(e)&&(e="https:"+e),d.call(this,e,t)};i.ponyfill=!0,e.exports=t=i,t.fetch=i,t.Headers=a.Headers,t.Request=a.Request,t.Response=a.Response,t.default=i}(Ur,Ur.exports);var is=w(Ur.exports);const ps=(e,t)=>Qt(void 0,void 0,void 0,(function*(){const a=t.endsWith("/")?`${t}debug`:`${t}/debug`,d=JSON.stringify(e),i=yield is(a,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:d});return yield i.text()}));var rs,ns;function ss(e,t){return()=>{var a,d,i,p;const{state:r}=e;if(r.debug&&console.debug(`RemoteCommunication::on 'clients_connected' channel=${r.channelId} keysExchanged=${null===(d=null===(a=r.communicationLayer)||void 0===a?void 0:a.getKeyInfo())||void 0===d?void 0:d.keysExchanged}`),r.analytics){const e=r.isOriginator?rs.REQUEST:rs.REQUEST_MOBILE;ps(Object.assign(Object.assign({id:null!==(i=r.channelId)&&void 0!==i?i:"",event:r.reconnection?rs.RECONNECT:e},r.originatorInfo),{commLayer:t,sdkVersion:r.sdkVersion,walletVersion:null===(p=r.walletInfo)||void 0===p?void 0:p.version,commLayerVersion:ia.version}),r.communicationServerUrl).catch((e=>{console.error("Cannot send analytics",e)}))}r.clientsConnected=!0,r.originatorInfoSent=!1,e.emit(ta.CLIENTS_CONNECTED)}}function os(e,t){return a=>{var d;const{state:i}=e;i.debug&&console.debug(`RemoteCommunication::${i.context}]::on 'clients_disconnected' channelId=${a}`),i.clientsConnected=!1,e.emit(ta.CLIENTS_DISCONNECTED,i.channelId),e.setConnectionStatus(la.DISCONNECTED),i.ready=!1,i.authorized=!1,i.analytics&&i.channelId&&ps({id:i.channelId,event:rs.DISCONNECTED,sdkVersion:i.sdkVersion,commLayer:t,commLayerVersion:ia.version,walletVersion:null===(d=i.walletInfo)||void 0===d?void 0:d.version},i.communicationServerUrl).catch((e=>{console.error("Cannot send analytics",e)}))}}function ls(e){return t=>{var a;const{state:d}=e;if(d.debug&&console.debug(`RemoteCommunication::${d.context}::on 'clients_waiting' numberUsers=${t} ready=${d.ready} autoStarted=${d.originatorConnectStarted}`),e.setConnectionStatus(la.WAITING),e.emit(ta.CLIENTS_WAITING,t),d.originatorConnectStarted){d.debug&&console.debug(`RemoteCommunication::on 'clients_waiting' watch autoStarted=${d.originatorConnectStarted} timeout`,d.autoConnectOptions);const t=(null===(a=d.autoConnectOptions)||void 0===a?void 0:a.timeout)||3e3,i=setTimeout((()=>{d.debug&&console.debug(`RemoteCommunication::on setTimeout(${t}) terminate channelConfig`,d.autoConnectOptions),d.originatorConnectStarted=!1,d.ready||e.setConnectionStatus(la.TIMEOUT),clearTimeout(i)}),t)}}}function ms(e,t){return a=>{var d,i,p,r,n;const{state:s}=e;s.debug&&console.debug(`RemoteCommunication::${s.context}::on commLayer.'keys_exchanged' channel=${s.channelId}`,a),(null===(i=null===(d=s.communicationLayer)||void 0===d?void 0:d.getKeyInfo())||void 0===i?void 0:i.keysExchanged)&&e.setConnectionStatus(la.LINKED),function(e,t){var a,d,i,p;const{state:r}=e;r.debug&&console.debug(`RemoteCommunication::setLastActiveDate() channel=${r.channelId}`,t);const n={channelId:null!==(a=r.channelId)&&void 0!==a?a:"",validUntil:null!==(i=null===(d=r.channelConfig)||void 0===d?void 0:d.validUntil)&&void 0!==i?i:0,lastActive:t.getTime()};null===(p=r.storageManager)||void 0===p||p.persistChannelConfig(n)}(e,new Date),s.analytics&&s.channelId&&ps({id:s.channelId,event:a.isOriginator?rs.CONNECTED:rs.CONNECTED_MOBILE,sdkVersion:s.sdkVersion,commLayer:t,commLayerVersion:ia.version,walletVersion:null===(p=s.walletInfo)||void 0===p?void 0:p.version},s.communicationServerUrl).catch((e=>{console.error("Cannot send analytics",e)})),s.isOriginator=a.isOriginator,a.isOriginator||(null===(r=s.communicationLayer)||void 0===r||r.sendMessage({type:aa.READY}),s.ready=!0,s.paused=!1),a.isOriginator&&!s.originatorInfoSent&&(null===(n=s.communicationLayer)||void 0===n||n.sendMessage({type:aa.ORIGINATOR_INFO,originatorInfo:s.originatorInfo,originator:s.originatorInfo}),s.originatorInfoSent=!0)}}function cs(e){return t=>{let a=t;t.message&&(a=a.message),function(e,t){const{state:a}=t;a.debug&&console.debug(`RemoteCommunication::${a.context}::on 'message' typeof=${typeof e}`,e);if(t.state.ready=!0,!a.isOriginator&&e.type===aa.ORIGINATOR_INFO)return void function(e,t){var a;const{state:d}=e;null===(a=d.communicationLayer)||void 0===a||a.sendMessage({type:aa.WALLET_INFO,walletInfo:d.walletInfo}),d.originatorInfo=t.originatorInfo||t.originator,e.emit(ta.CLIENTS_READY,{isOriginator:d.isOriginator,originatorInfo:d.originatorInfo}),d.paused=!1}(t,e);if(a.isOriginator&&e.type===aa.WALLET_INFO)return void function(e,t){const{state:a}=e;a.walletInfo=t.walletInfo,a.paused=!1}(t,e);if(e.type===aa.TERMINATE)!function(e){const{state:t}=e;t.isOriginator&&(fs({options:{terminate:!0,sendMessage:!1},instance:e}),console.debug(),e.emit(ta.TERMINATE))}(t);else if(e.type===aa.PAUSE)!function(e){const{state:t}=e;t.paused=!0,e.setConnectionStatus(la.PAUSED)}(t);else if(e.type===aa.READY&&a.isOriginator)!function(e){const{state:t}=e;e.setConnectionStatus(la.LINKED);const a=t.paused;t.paused=!1,e.emit(ta.CLIENTS_READY,{isOriginator:t.isOriginator,walletInfo:t.walletInfo}),a&&(t.authorized=!0,e.emit(ta.AUTHORIZED))}(t);else{if(e.type===aa.OTP&&a.isOriginator)return void function(e,t){var a;const{state:d}=e;e.emit(ta.OTP,t.otpAnswer),1==="6.6".localeCompare((null===(a=d.walletInfo)||void 0===a?void 0:a.version)||"")&&(console.warn("RemoteCommunication::on 'otp' -- backward compatibility <6.6 -- triger eth_requestAccounts"),e.emit(ta.SDK_RPC_CALL,{method:oa.ETH_REQUESTACCOUNTS,params:[]}))}(t,e);e.type===aa.AUTHORIZED&&a.isOriginator&&function(e){const{state:t}=e;t.authorized=!0,e.emit(ta.AUTHORIZED)}(t)}t.emit(ta.MESSAGE,e)}(a,e)}}function us(e){return()=>{const{state:t}=e;t.debug&&console.debug("RemoteCommunication::on 'socket_reconnect' -- reset key exchange status / set ready to false"),t.ready=!1,pa(t)}}function hs(e){return()=>{const{state:t}=e;t.debug&&console.debug("RemoteCommunication::on 'socket_Disconnected' set ready to false"),t.ready=!1}}function fs({options:e,instance:t}){var a,d,i,p,r,n;const{state:s}=t;s.debug&&console.debug(`RemoteCommunication::disconnect() channel=${s.channelId}`,e),s.ready=!1,s.paused=!1,(null==e?void 0:e.terminate)?(null===(a=s.storageManager)||void 0===a||a.terminate(null!==(d=s.channelId)&&void 0!==d?d:""),(null===(i=s.communicationLayer)||void 0===i?void 0:i.getKeyInfo().keysExchanged)&&(null==e?void 0:e.sendMessage)&&(null===(p=s.communicationLayer)||void 0===p||p.sendMessage({type:aa.TERMINATE})),s.channelId=ba(),e.channelId=s.channelId,s.channelConfig=void 0,s.originatorConnectStarted=!1,null===(r=s.communicationLayer)||void 0===r||r.disconnect(e),t.setConnectionStatus(la.TERMINATED)):(null===(n=s.communicationLayer)||void 0===n||n.disconnect(e),t.setConnectionStatus(la.DISCONNECTED))}function vs(e,t){var a,d;return Qt(this,void 0,void 0,(function*(){const{state:i}=e;i.debug&&console.log(`RemoteCommunication::${i.context}::sendMessage paused=${i.paused} ready=${i.ready} authorized=${i.authorized} socket=${null===(a=i.communicationLayer)||void 0===a?void 0:a.isConnected()} clientsConnected=${i.clientsConnected} status=${i._connectionStatus}`,t),!i.paused&&i.ready&&(null===(d=i.communicationLayer)||void 0===d?void 0:d.isConnected())&&i.clientsConnected||(i.debug&&console.log(`RemoteCommunication::${i.context}::sendMessage  SKIP message waiting for MM mobile readiness.`),yield new Promise((t=>{e.once(ta.CLIENTS_READY,t)})),i.debug&&console.log(`RemoteCommunication::${i.context}::sendMessage  AFTER SKIP / READY -- sending pending message`));try{yield function(e,t){return Qt(this,void 0,void 0,(function*(){return new Promise((a=>{var d,i,p,r;const{state:n}=e;if(n.debug&&console.log(`RemoteCommunication::${n.context}::sendMessage::handleAuthorization ready=${n.ready} authorized=${n.authorized} method=${t.method}`),1==="7.3".localeCompare((null===(d=n.walletInfo)||void 0===d?void 0:d.version)||""))return n.debug&&console.debug(`compatibility hack wallet version > ${null===(i=n.walletInfo)||void 0===i?void 0:i.version}`),null===(p=n.communicationLayer)||void 0===p||p.sendMessage(t),void a();!n.isOriginator||n.authorized?(null===(r=n.communicationLayer)||void 0===r||r.sendMessage(t),a()):e.once(ta.AUTHORIZED,(()=>{var e;n.debug&&console.log(`RemoteCommunication::${n.context}::sendMessage  AFTER SKIP / AUTHORIZED -- sending pending message`),null===(e=n.communicationLayer)||void 0===e||e.sendMessage(t),a()}))}))}))}(e,t)}catch(e){throw console.error(`RemoteCommunication::${i.context}::sendMessage  ERROR`,e),e}}))}!function(e){e.REQUEST="sdk_connect_request_started",e.REQUEST_MOBILE="sdk_connect_request_started_mobile",e.RECONNECT="sdk_reconnect_request_started",e.CONNECTED="sdk_connection_established",e.CONNECTED_MOBILE="sdk_connection_established_mobile",e.AUTHORIZED="sdk_connection_authorized",e.REJECTED="sdk_connection_rejected",e.TERMINATED="sdk_connection_terminated",e.DISCONNECTED="sdk_disconnected",e.SDK_USE_EXTENSION="sdk_use_extension",e.SDK_EXTENSION_UTILIZED="sdk_extension_utilized",e.SDK_USE_INAPP_BROWSER="sdk_use_inapp_browser"}(rs||(rs={}));class bs extends da.EventEmitter2{constructor({platformType:e,communicationLayerPreference:t,otherPublicKey:a,reconnect:d,walletInfo:i,dappMetadata:p,transports:r,context:n,ecies:s,analytics:o=!1,storage:l,sdkVersion:m,communicationServerUrl:c=ra,logging:u,autoConnect:h={timeout:3e3}}){super(),this.state={ready:!1,authorized:!1,isOriginator:!1,paused:!1,platformType:"metamask-mobile",analytics:!1,reconnection:!1,originatorInfoSent:!1,communicationServerUrl:ra,context:"",clientsConnected:!1,sessionDuration:sa,originatorConnectStarted:!1,debug:!1,_connectionStatus:la.DISCONNECTED},this.state.otherPublicKey=a,this.state.dappMetadata=p,this.state.walletInfo=i,this.state.transports=r,this.state.platformType=e,this.state.analytics=o,this.state.isOriginator=!a,this.state.communicationServerUrl=c,this.state.context=n,this.state.sdkVersion=m,this.setMaxListeners(50),this.setConnectionStatus(la.DISCONNECTED),(null==l?void 0:l.duration)&&(this.state.sessionDuration=sa),this.state.storageOptions=l,this.state.autoConnectOptions=h,this.state.debug=!0===(null==u?void 0:u.remoteLayer),this.state.logging=u,(null==l?void 0:l.storageManager)&&(this.state.storageManager=l.storageManager),this.initCommunicationLayer({communicationLayerPreference:t,otherPublicKey:a,reconnect:d,ecies:s,communicationServerUrl:c}),this.emitServiceStatusEvent()}initCommunicationLayer({communicationLayerPreference:e,otherPublicKey:t,reconnect:a,ecies:d,communicationServerUrl:i=ra}){return function({communicationLayerPreference:e,otherPublicKey:t,reconnect:a,ecies:d,communicationServerUrl:i=ra,instance:p}){var r,n,s,o;const{state:l}=p;if(e!==Br.SOCKET)throw new Error("Invalid communication protocol");l.communicationLayer=new Pr({communicationLayerPreference:e,otherPublicKey:t,reconnect:a,transports:l.transports,communicationServerUrl:i,context:l.context,ecies:d,logging:l.logging});let m="undefined"!=typeof document&&document.URL||"",c="undefined"!=typeof document&&document.title||"";(null===(r=l.dappMetadata)||void 0===r?void 0:r.url)&&(m=l.dappMetadata.url),(null===(n=l.dappMetadata)||void 0===n?void 0:n.name)&&(c=l.dappMetadata.name);const u={url:m,title:c,source:null===(s=l.dappMetadata)||void 0===s?void 0:s.source,icon:null===(o=l.dappMetadata)||void 0===o?void 0:o.base64Icon,platform:l.platformType,apiVersion:ia.version};l.originatorInfo=u;const h={[ta.AUTHORIZED]:jr(p),[ta.MESSAGE]:cs(p),[ta.CLIENTS_CONNECTED]:ss(p,e),[ta.KEYS_EXCHANGED]:ms(p,e),[ta.SOCKET_DISCONNECTED]:hs(p),[ta.SOCKET_RECONNECT]:us(p),[ta.CLIENTS_DISCONNECTED]:os(p,e),[ta.CHANNEL_CREATED]:Kr(p),[ta.CLIENTS_WAITING]:ls(p)};for(const[e,t]of Object.entries(h))try{l.communicationLayer.on(e,t)}catch(t){console.error(`Error registering handler for ${e}:`,t)}}({communicationLayerPreference:e,otherPublicKey:t,reconnect:a,ecies:d,communicationServerUrl:i,instance:this})}originatorSessionConnect(){return Qt(this,void 0,void 0,(function*(){return yield function(e){var t,a,d;return Qt(this,void 0,void 0,(function*(){const{state:i}=e;if(!i.storageManager)return void(i.debug&&console.debug("RemoteCommunication::connect() no storage manager defined - skip"));const p=yield i.storageManager.getPersistedChannelConfig(null!==(t=i.channelId)&&void 0!==t?t:"");if(i.debug&&console.debug(`RemoteCommunication::connect() autoStarted=${i.originatorConnectStarted} channelConfig`,p),null===(a=i.communicationLayer)||void 0===a?void 0:a.isConnected())return i.debug&&console.debug("RemoteCommunication::connect() socket already connected - skip"),p;if(p){if(p.validUntil>Date.now())return i.channelConfig=p,i.originatorConnectStarted=!0,i.channelId=null==p?void 0:p.channelId,i.reconnection=!0,null===(d=i.communicationLayer)||void 0===d||d.connectToChannel({channelId:p.channelId,isOriginator:!0}),p;i.debug&&console.log("RemoteCommunication::autoConnect Session has expired")}i.originatorConnectStarted=!1}))}(this)}))}generateChannelIdConnect(){return Qt(this,void 0,void 0,(function*(){return function(e){var t,a,d,i,p;if(!e.communicationLayer)throw new Error("communication layer not initialized");if(e.ready)throw new Error("Channel already connected");if(e.channelId&&(null===(t=e.communicationLayer)||void 0===t?void 0:t.isConnected()))return console.warn("Channel already exists -- interrupt generateChannelId",e.channelConfig),e.channelConfig={channelId:e.channelId,validUntil:Date.now()+e.sessionDuration},null===(a=e.storageManager)||void 0===a||a.persistChannelConfig(e.channelConfig),{channelId:e.channelId,pubKey:null===(i=null===(d=e.communicationLayer)||void 0===d?void 0:d.getKeyInfo())||void 0===i?void 0:i.ecies.public};e.debug&&console.debug("RemoteCommunication::generateChannelId()"),pa(e);const r=e.communicationLayer.createChannel();e.debug&&console.debug("RemoteCommunication::generateChannelId() channel created",r);const n={channelId:r.channelId,validUntil:Date.now()+e.sessionDuration};return e.channelId=r.channelId,e.channelConfig=n,null===(p=e.storageManager)||void 0===p||p.persistChannelConfig(n),{channelId:e.channelId,pubKey:r.pubKey}}(this.state)}))}clean(){return pa(this.state)}connectToChannel(e,t){return function({channelId:e,withKeyExchange:t,state:a}){var d,i,p;if(!fa(e))throw console.debug(`RemoteCommunication::${a.context}::connectToChannel() invalid channel channelId=${e}`),new Error(`Invalid channel ${e}`);if(a.debug&&console.debug(`RemoteCommunication::${a.context}::connectToChannel() channelId=${e}`),null===(d=a.communicationLayer)||void 0===d?void 0:d.isConnected())return void console.debug(`RemoteCommunication::${a.context}::connectToChannel() already connected - interrup connection.`);a.channelId=e,null===(i=a.communicationLayer)||void 0===i||i.connectToChannel({channelId:e,withKeyExchange:t});const r={channelId:e,validUntil:Date.now()+a.sessionDuration};a.channelConfig=r,null===(p=a.storageManager)||void 0===p||p.persistChannelConfig(r)}({channelId:e,withKeyExchange:t,state:this.state})}sendMessage(e){return vs(this,e)}testStorage(){return Qt(this,void 0,void 0,(function*(){return function(e){var t,a;return Qt(this,void 0,void 0,(function*(){const d=yield null===(t=e.storageManager)||void 0===t?void 0:t.getPersistedChannelConfig(null!==(a=e.channelId)&&void 0!==a?a:"");console.debug("RemoteCommunication.testStorage() res",d)}))}(this.state)}))}getChannelConfig(){return this.state.channelConfig}isReady(){return this.state.ready}isConnected(){var e;return null===(e=this.state.communicationLayer)||void 0===e?void 0:e.isConnected()}isAuthorized(){return this.state.authorized}isPaused(){return this.state.paused}getCommunicationLayer(){return this.state.communicationLayer}ping(){var e;this.state.debug&&console.debug(`RemoteCommunication::ping() channel=${this.state.channelId}`),null===(e=this.state.communicationLayer)||void 0===e||e.ping()}keyCheck(){var e;this.state.debug&&console.debug(`RemoteCommunication::keyCheck() channel=${this.state.channelId}`),null===(e=this.state.communicationLayer)||void 0===e||e.keyCheck()}setConnectionStatus(e){this.state._connectionStatus!==e&&(this.state._connectionStatus=e,this.emit(ta.CONNECTION_STATUS,e),this.emitServiceStatusEvent())}emitServiceStatusEvent(){this.emit(ta.SERVICE_STATUS,this.getServiceStatus())}getConnectionStatus(){return this.state._connectionStatus}getServiceStatus(){return{originatorInfo:this.state.originatorInfo,keyInfo:this.getKeyInfo(),connectionStatus:this.state._connectionStatus,channelConfig:this.state.channelConfig,channelId:this.state.channelId}}getKeyInfo(){var e;return null===(e=this.state.communicationLayer)||void 0===e?void 0:e.getKeyInfo()}resetKeys(){var e;null===(e=this.state.communicationLayer)||void 0===e||e.resetKeys()}pause(){var e;this.state.debug&&console.debug(`RemoteCommunication::pause() channel=${this.state.channelId}`),null===(e=this.state.communicationLayer)||void 0===e||e.pause(),this.setConnectionStatus(la.PAUSED)}getVersion(){return ia.version}resume(){return function(e){var t;const{state:a}=e;a.debug&&console.debug(`RemoteCommunication::resume() channel=${a.channelId}`),null===(t=a.communicationLayer)||void 0===t||t.resume(),e.setConnectionStatus(la.LINKED)}(this)}getChannelId(){return this.state.channelId}disconnect(e){return fs({options:e,instance:this})}}!function(e){e.RENEW="renew",e.LINK="link"}(ns||(ns={}));export{ns as AutoConnectType,Br as CommunicationLayerPreference,la as ConnectionStatus,ra as DEFAULT_SERVER_URL,Xt as ECIES,ta as EventType,aa as MessageType,Fr as PlatformType,bs as RemoteCommunication,ps as SendAnalytics,Pr as SocketService,rs as TrackingEvents};
//# sourceMappingURL=metamask-sdk-communication-layer.js.map
