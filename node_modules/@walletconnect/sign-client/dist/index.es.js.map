{"version":3,"file":"index.es.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/constants/pendingRequest.ts","../src/constants/verify.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/controllers/pendingRequest.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_request_sent: \"session_request_sent\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\nexport const WALLETCONNECT_DEEPLINK_CHOICE = \"WALLETCONNECT_DEEPLINK_CHOICE\";\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n\nexport const PROPOSAL_EXPIRY_MESSAGE = \"Proposal expired\";\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, SEVEN_DAYS, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n\nexport const ENGINE_QUEUE_STATES: { idle: \"IDLE\"; active: \"ACTIVE\" } = {\n  idle: \"IDLE\",\n  active: \"ACTIVE\",\n};\n","export const REQUEST_CONTEXT = \"request\";\n","export const METHODS_TO_VERIFY = [\"wc_sessionPropose\", \"wc_sessionRequest\", \"wc_authRequest\"];\n","import {\n  EXPIRER_EVENTS,\n  PAIRING_EVENTS,\n  RELAYER_DEFAULT_PROTOCOL,\n  RELAYER_EVENTS,\n  VERIFY_SERVER,\n} from \"@walletconnect/core\";\n\nimport {\n  formatJsonRpcError,\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  payloadId,\n  isJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  JsonRpcRequest,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\nimport {\n  EnginePrivate,\n  EngineTypes,\n  ExpirerTypes,\n  IEngine,\n  IEngineEvents,\n  JsonRpcTypes,\n  PendingRequestTypes,\n  Verify,\n  CoreTypes,\n  ProposalTypes,\n  RelayerTypes,\n  SessionTypes,\n  PairingTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  createDelayedPromise,\n  engineEvent,\n  getInternalError,\n  getRequiredNamespacesFromNamespaces,\n  getSdkError,\n  isConformingNamespaces,\n  isExpired,\n  isSessionCompatible,\n  isUndefined,\n  isValidController,\n  isValidErrorReason,\n  isValidEvent,\n  isValidId,\n  isValidNamespaces,\n  isValidNamespacesChainId,\n  isValidNamespacesEvent,\n  isValidNamespacesRequest,\n  isValidObject,\n  isValidParams,\n  isValidRelay,\n  isValidRelays,\n  isValidRequest,\n  isValidRequestExpiry,\n  hashMessage,\n  isBrowser,\n  isValidRequiredNamespaces,\n  isValidResponse,\n  isValidString,\n  parseExpirerTarget,\n  TYPE_1,\n  handleDeeplinkRedirect,\n  MemoryStore,\n} from \"@walletconnect/utils\";\nimport EventEmmiter from \"events\";\nimport {\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n  PROPOSAL_EXPIRY_MESSAGE,\n  SESSION_EXPIRY,\n  SESSION_REQUEST_EXPIRY_BOUNDARIES,\n  METHODS_TO_VERIFY,\n  WALLETCONNECT_DEEPLINK_CHOICE,\n  ENGINE_QUEUE_STATES,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  /**\n   * Queue responsible for processing incoming requests such as session_update, session_event, session_ping etc\n   * It's needed when the client receives multiple requests at once from the mailbox immediately after initialization and to avoid attempting to process them all at the same time\n   */\n  private requestQueue: EngineTypes.EngineQueue<EngineTypes.EventCallback<JsonRpcRequest>> = {\n    state: ENGINE_QUEUE_STATES.idle,\n    queue: [],\n  };\n\n  /**\n   * Queue responsible for processing incoming session_request\n   * The queue emits the next request only after the previous one has been responded to\n   */\n  private sessionRequestQueue: EngineTypes.EngineQueue<PendingRequestTypes.Struct> = {\n    state: ENGINE_QUEUE_STATES.idle,\n    queue: [],\n  };\n\n  private requestQueueDelay = ONE_SECOND;\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.registerPairingEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n\n      setTimeout(() => {\n        this.sessionRequestQueue.queue = this.getPendingSessionRequests();\n        this.processSessionRequestQueue();\n      }, toMiliseconds(this.requestQueueDelay));\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    await this.isInitialized();\n\n    const connectParams = {\n      ...params,\n      requiredNamespaces: params.requiredNamespaces || {},\n      optionalNamespaces: params.optionalNamespaces || {},\n    };\n    await this.isValidConnect(connectParams);\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      connectParams;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n\n    const proposal = {\n      requiredNamespaces,\n      optionalNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n      ...(sessionProperties && { sessionProperties }),\n    };\n    const {\n      reject,\n      resolve,\n      done: approval,\n    } = createDelayedPromise<SessionTypes.Struct>(FIVE_MINUTES, PROPOSAL_EXPIRY_MESSAGE);\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = {\n            ...session,\n            requiredNamespaces: session.requiredNamespaces,\n            optionalNamespaces: session.optionalNamespaces,\n          };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest({\n      topic,\n      method: \"wc_sessionPropose\",\n      params: proposal,\n    });\n\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    await this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidApprove(params);\n\n    const { id, relayProtocol, namespaces, sessionProperties } = params;\n    const proposal = this.client.proposal.get(id);\n    let { pairingTopic, proposer, requiredNamespaces, optionalNamespaces } = proposal;\n    pairingTopic = pairingTopic || \"\";\n    if (!isValidObject(requiredNamespaces)) {\n      requiredNamespaces = getRequiredNamespacesFromNamespaces(namespaces, \"approve()\");\n    }\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n\n    if (pairingTopic && id) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: proposer.metadata,\n      });\n      await this.sendResult<\"wc_sessionPropose\">({\n        id,\n        topic: pairingTopic,\n        result: {\n          relay: {\n            protocol: relayProtocol ?? \"irn\",\n          },\n          responderPublicKey: selfPublicKey,\n        },\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      optionalNamespaces,\n      pairingTopic,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n      ...(sessionProperties && { sessionProperties }),\n    };\n    await this.client.core.relayer.subscribe(sessionTopic);\n    await this.sendRequest({\n      topic: sessionTopic,\n      method: \"wc_sessionSettle\",\n      params: sessionSettle,\n      throwOnFailedPublish: true,\n    });\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      pairingTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    return {\n      topic: sessionTopic,\n      acknowledged: () =>\n        new Promise((resolve) =>\n          setTimeout(() => resolve(this.client.session.get(sessionTopic)), 5_00),\n        ), // artificial delay to allow for the session to be processed by the peer\n    };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest({\n      topic,\n      method: \"wc_sessionUpdate\",\n      params: { namespaces },\n    });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest({ topic, method: \"wc_sessionExtend\", params: {} });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    await this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic, expiry } = params;\n    const id = payloadId();\n    const { done, resolve, reject } = createDelayedPromise<T>(\n      expiry,\n      \"Request expired. Please try again.\",\n    );\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    return await Promise.all([\n      new Promise<void>(async (resolve) => {\n        await this.sendRequest({\n          clientRpcId: id,\n          topic,\n          method: \"wc_sessionRequest\",\n          params: { request, chainId },\n          expiry,\n          throwOnFailedPublish: true,\n        }).catch((error) => reject(error));\n        this.client.events.emit(\"session_request_sent\", { topic, request, chainId, id });\n        resolve();\n      }),\n      new Promise<void>(async (resolve) => {\n        const wcDeepLink = await this.client.core.storage.getItem(WALLETCONNECT_DEEPLINK_CHOICE);\n        handleDeeplinkRedirect({ id, topic, wcDeepLink });\n        resolve();\n      }),\n      done(),\n    ]).then((result) => result[2]); // order is important here, we want to return the result of the `done` promise\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult({ id, topic, result: response.result, throwOnFailedPublish: true });\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n    this.cleanupAfterResponse(params);\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest({ topic, method: \"wc_sessionPing\", params: {} });\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest({ topic, method: \"wc_sessionEvent\", params: { event, chainId } });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    await this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      // await an ack to ensure the relay has received the disconnect request\n      await this.sendRequest({\n        topic,\n        method: \"wc_sessionDelete\",\n        params: getSdkError(\"USER_DISCONNECTED\"),\n        throwOnFailedPublish: true,\n      });\n      await this.deleteSession(topic);\n    } else {\n      await this.client.core.pairing.disconnect({ topic });\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  public getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"] = () => {\n    this.isInitialized();\n    return this.client.pendingRequest.getAll();\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private cleanupDuplicatePairings: EnginePrivate[\"cleanupDuplicatePairings\"] = async (\n    session: SessionTypes.Struct,\n  ) => {\n    // older SDK versions are missing the `pairingTopic` prop thus we need to check for it\n    if (!session.pairingTopic) return;\n\n    try {\n      const pairing = this.client.core.pairing.pairings.get(session.pairingTopic);\n      const allPairings = this.client.core.pairing.pairings.getAll();\n      const duplicates = allPairings.filter(\n        (p) =>\n          p.peerMetadata?.url &&\n          p.peerMetadata?.url === session.peer.metadata.url &&\n          p.topic &&\n          p.topic !== pairing.topic,\n      );\n      if (duplicates.length === 0) return;\n      this.client.logger.info(`Cleaning up ${duplicates.length} duplicate pairing(s)`);\n      await Promise.all(\n        duplicates.map((p) => this.client.core.pairing.disconnect({ topic: p.topic })),\n      );\n      this.client.logger.info(`Duplicate pairings clean up finished`);\n    } catch (error) {\n      this.client.logger.error(error);\n    }\n  };\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic, expirerHasDeleted) => {\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n    if (this.client.core.crypto.keychain.has(self.publicKey)) {\n      await this.client.core.crypto.deleteKeyPair(self.publicKey);\n    }\n    if (this.client.core.crypto.keychain.has(topic)) {\n      await this.client.core.crypto.deleteSymKey(topic);\n    }\n    if (!expirerHasDeleted) this.client.core.expirer.del(topic);\n    // remove any deeplinks from storage after the session is deleted\n    // to avoid navigating to incorrect deeplink later on\n    this.client.core.storage\n      .removeItem(WALLETCONNECT_DEEPLINK_CHOICE)\n      .catch((e) => this.client.logger.warn(e));\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private deletePendingSessionRequest: EnginePrivate[\"deletePendingSessionRequest\"] = async (\n    id,\n    reason,\n    expirerHasDeleted = false,\n  ) => {\n    await Promise.all([\n      this.client.pendingRequest.delete(id, reason),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n    this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((r) => r.id !== id);\n    // set the requestQueue state to idle if expirer has deleted a request as trying to respond to it would result in an exception\n    if (expirerHasDeleted) {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.idle;\n    }\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, proposal.expiry);\n  };\n\n  private setPendingSessionRequest: EnginePrivate[\"setPendingSessionRequest\"] = async (\n    pendingRequest: PendingRequestTypes.Struct,\n  ) => {\n    const expiry = ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl;\n    const { id, topic, params, verifyContext } = pendingRequest;\n    await this.client.pendingRequest.set(id, {\n      id,\n      topic,\n      params,\n      verifyContext,\n    });\n    if (expiry) this.client.core.expirer.set(id, calcExpiry(expiry));\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (args) => {\n    const { topic, method, params, expiry, relayRpcId, clientRpcId, throwOnFailedPublish } = args;\n    const payload = formatJsonRpcRequest(method, params, clientRpcId);\n    if (isBrowser() && METHODS_TO_VERIFY.includes(method)) {\n      const hash = hashMessage(JSON.stringify(payload));\n      this.client.core.verify.register({ attestationId: hash });\n    }\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    if (expiry) opts.ttl = expiry;\n    if (relayRpcId) opts.id = relayRpcId;\n    this.client.core.history.set(topic, payload);\n    if (throwOnFailedPublish) {\n      opts.internal = {\n        ...opts.internal,\n        throwOnFailedPublish: true,\n      };\n      await this.client.core.relayer.publish(topic, message, opts);\n    } else {\n      this.client.core.relayer\n        .publish(topic, message, opts)\n        .catch((error) => this.client.logger.error(error));\n    }\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (args) => {\n    const { id, topic, result, throwOnFailedPublish } = args;\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    if (throwOnFailedPublish) {\n      opts.internal = {\n        ...opts.internal,\n        throwOnFailedPublish: true,\n      };\n      await this.client.core.relayer.publish(topic, message, opts);\n    } else {\n      this.client.core.relayer\n        .publish(topic, message, opts)\n        .catch((error) => this.client.logger.error(error));\n    }\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession(topic)),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private async isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n    await this.client.core.relayer.confirmOnlineStateOrThrow();\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n        try {\n          if (isJsonRpcRequest(payload)) {\n            this.client.core.history.set(topic, payload);\n            this.onRelayEventRequest({ topic, payload });\n          } else if (isJsonRpcResponse(payload)) {\n            await this.client.core.history.resolve(payload);\n            await this.onRelayEventResponse({ topic, payload });\n            this.client.core.history.delete(topic, payload.id);\n          } else {\n            this.onRelayEventUnknownPayload({ topic, payload });\n          }\n        } catch (error) {\n          this.client.logger.error(error);\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = async (event) => {\n    this.requestQueue.queue.push(event);\n    await this.processRequestsQueue();\n  };\n\n  private processRequestsQueue = async () => {\n    if (this.requestQueue.state === ENGINE_QUEUE_STATES.active) {\n      this.client.logger.info(`Request queue already active, skipping...`);\n      return;\n    }\n\n    this.client.logger.info(\n      `Request queue starting with ${this.requestQueue.queue.length} requests`,\n    );\n\n    while (this.requestQueue.queue.length > 0) {\n      this.requestQueue.state = ENGINE_QUEUE_STATES.active;\n      const request = this.requestQueue.queue.shift();\n      if (!request) continue;\n\n      try {\n        this.processRequest(request);\n        // small delay to allow for any async tasks to complete\n        await new Promise((resolve) => setTimeout(resolve, 300));\n      } catch (error) {\n        this.client.logger.warn(error);\n      }\n    }\n    this.requestQueue.state = ENGINE_QUEUE_STATES.idle;\n  };\n\n  private processRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  private onRelayEventUnknownPayload: EnginePrivate[\"onRelayEventUnknownPayload\"] = (event) => {\n    const { topic } = event;\n    const { message } = getInternalError(\n      \"MISSING_OR_INVALID\",\n      `Decoded payload on topic ${topic} is not identifiable as a JSON-RPC request or a response.`,\n    );\n    throw new Error(message);\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      const hash = hashMessage(JSON.stringify(payload));\n      const verifyContext = await this.getVerifyContext(hash, proposal.proposer.metadata);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal, verifyContext });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const {\n        relay,\n        controller,\n        expiry,\n        namespaces,\n        requiredNamespaces,\n        optionalNamespaces,\n        sessionProperties,\n        pairingTopic,\n      } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        pairingTopic,\n        requiredNamespaces,\n        optionalNamespaces,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n        ...(sessionProperties && { sessionProperties }),\n      };\n      await this.sendResult<\"wc_sessionSettle\">({ id: payload.id, topic, result: true });\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n      this.cleanupDuplicatePairings(session);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      const memoryKey = `${topic}_session_update`;\n      // compare the current request id with the last processed session update\n      // we want to update only if the request is newer than the last processed one\n      const lastSessionUpdateId = MemoryStore.get<number>(memoryKey);\n      if (lastSessionUpdateId && this.isRequestOutOfSync(lastSessionUpdateId, id)) {\n        this.client.logger.info(`Discarding out of sync request - ${id}`);\n        return;\n      }\n\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">({ id, topic, result: true });\n      this.client.events.emit(\"session_update\", { id, topic, params });\n      MemoryStore.set(memoryKey, id);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // compares the timestamp of the last processed request with the current request\n  // client <-> client rpc ID is timestamp + 3 random digits\n  private isRequestOutOfSync = (lastId: number, currentId: number) => {\n    return parseInt(currentId.toString().slice(0, -3)) <= parseInt(lastId.toString().slice(0, -3));\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">({ id, topic, result: true });\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">({ id, topic, result: true });\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      await Promise.all([\n        new Promise((resolve) => {\n          // RPC request needs to happen before deletion as it utalises session encryption\n          this.client.core.relayer.once(RELAYER_EVENTS.publish, async () => {\n            resolve(await this.deleteSession(topic));\n          });\n        }),\n        this.sendResult<\"wc_sessionDelete\">({ id, topic, result: true }),\n      ]);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      const hash = hashMessage(\n        JSON.stringify(formatJsonRpcRequest(\"wc_sessionRequest\", params, id)),\n      );\n      const session = this.client.session.get(topic);\n      const verifyContext = await this.getVerifyContext(hash, session.peer.metadata);\n      const request = { id, topic, params, verifyContext };\n      await this.setPendingSessionRequest(request);\n      this.addSessionRequestToSessionRequestQueue(request);\n      this.processSessionRequestQueue();\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      // similar to session update, we want to discard out of sync requests\n      // additionally we have to check the event type as well e.g. chainChanged/accountsChanged\n      const memoryKey = `${topic}_session_event_${params.event.name}`;\n      // compare the current request id with the last processed session update\n      // we want to update only if the request is newer than the last processed one\n      const lastSessionUpdateId = MemoryStore.get<number>(memoryKey);\n      if (lastSessionUpdateId && this.isRequestOutOfSync(lastSessionUpdateId, id)) {\n        this.client.logger.info(`Discarding out of sync request - ${id}`);\n        return;\n      }\n\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n      MemoryStore.set(memoryKey, id);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private addSessionRequestToSessionRequestQueue = (request: PendingRequestTypes.Struct) => {\n    this.sessionRequestQueue.queue.push(request);\n  };\n\n  private cleanupAfterResponse = (params: EngineTypes.RespondParams) => {\n    this.deletePendingSessionRequest(params.response.id, { message: \"fulfilled\", code: 0 });\n    // intentionally delay the emitting of the next pending request a bit\n    setTimeout(() => {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.idle;\n      this.processSessionRequestQueue();\n    }, toMiliseconds(this.requestQueueDelay));\n  };\n\n  private processSessionRequestQueue = () => {\n    if (this.sessionRequestQueue.state === ENGINE_QUEUE_STATES.active) {\n      this.client.logger.info(\"session request queue is already active.\");\n      return;\n    }\n    // Select the first/oldest request in the array to ensure last-in-first-out (LIFO)\n    const request = this.sessionRequestQueue.queue[0];\n    if (!request) {\n      this.client.logger.info(\"session request queue is empty.\");\n      return;\n    }\n\n    try {\n      this.sessionRequestQueue.state = ENGINE_QUEUE_STATES.active;\n      this.client.events.emit(\"session_request\", request);\n    } catch (error) {\n      this.client.logger.error(error);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (id && this.client.pendingRequest.keys.includes(id)) {\n        return await this.deletePendingSessionRequest(id, getInternalError(\"EXPIRED\"), true);\n      }\n\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic, true);\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n        this.client.events.emit(\"proposal_expire\", { id });\n      }\n    });\n  }\n\n  // ---------- Pairing Events ---------------------------------------- //\n  private registerPairingEvents() {\n    this.client.core.pairing.events.on(PAIRING_EVENTS.create, (pairing: PairingTypes.Struct) =>\n      this.onPairingCreated(pairing),\n    );\n  }\n\n  /**\n   * when a pairing is created, we check if there is a pending proposal for it.\n   * if there is, we send it to onSessionProposeRequest to be processed as if it was received from the relay.\n   * It allows QR/URI to be scanned multiple times without having to create new pairing.\n   */\n  private onPairingCreated = (pairing: PairingTypes.Struct) => {\n    if (pairing.active) return;\n    const proposals = this.client.proposal.getAll();\n    const proposal = proposals.find((p) => p.pairingTopic === pairing.topic);\n    if (!proposal) return;\n    this.onSessionProposeRequest(\n      pairing.topic,\n      formatJsonRpcRequest(\n        \"wc_sessionPropose\",\n        {\n          requiredNamespaces: proposal.requiredNamespaces,\n          optionalNamespaces: proposal.optionalNamespaces,\n          relays: proposal.relays,\n          proposer: proposal.proposer,\n        },\n        proposal.id,\n      ),\n    );\n  };\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n\n    // validate required namespaces only if they are defined\n    if (!isUndefined(requiredNamespaces) && isValidObject(requiredNamespaces) !== 0) {\n      this.validateNamespaces(requiredNamespaces, \"requiredNamespaces\");\n    }\n\n    // validate optional namespaces only if they are defined\n    if (!isUndefined(optionalNamespaces) && isValidObject(optionalNamespaces) !== 0) {\n      this.validateNamespaces(optionalNamespaces, \"optionalNamespaces\");\n    }\n\n    // validate session properties only if they are defined\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private validateNamespaces = (\n    namespaces: ProposalTypes.RequiredNamespaces | ProposalTypes.OptionalNamespaces,\n    type: string,\n  ) => {\n    const validRequiredNamespacesError = isValidRequiredNamespaces(namespaces, \"connect()\", type);\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol, sessionProperties } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"approve()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId, expiry } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n    if (expiry && !isValidRequestExpiry(expiry, SESSION_REQUEST_EXPIRY_BOUNDARIES)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() expiry: ${expiry}. Expiry must be a number (in seconds) between ${SESSION_REQUEST_EXPIRY_BOUNDARIES.min} and ${SESSION_REQUEST_EXPIRY_BOUNDARIES.max}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private getVerifyContext = async (hash: string, metadata: CoreTypes.Metadata) => {\n    const context: Verify.Context = {\n      verified: {\n        verifyUrl: metadata.verifyUrl || VERIFY_SERVER,\n        validation: \"UNKNOWN\",\n        origin: metadata.url || \"\",\n      },\n    };\n\n    try {\n      const result = await this.client.core.verify.resolve({\n        attestationId: hash,\n        verifyUrl: metadata.verifyUrl,\n      });\n      if (result) {\n        context.verified.origin = result.origin;\n        context.verified.isScam = result.isScam;\n        context.verified.validation =\n          result.origin === new URL(metadata.url).origin ? \"VALID\" : \"INVALID\";\n      }\n    } catch (e) {\n      this.client.logger.info(e);\n    }\n\n    this.client.logger.info(`Verify context: ${JSON.stringify(context)}`);\n    return context;\n  };\n\n  private validateSessionProps = (properties: ProposalTypes.SessionProperties, type: string) => {\n    Object.values(properties).forEach((property) => {\n      if (!isValidString(property, false)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `${type} must be in Record<string, string> format. Received: ${JSON.stringify(property)}`,\n        );\n        throw new Error(message);\n      }\n    });\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(\n      core,\n      logger,\n      REQUEST_CONTEXT,\n      SIGN_CLIENT_STORAGE_PREFIX,\n      (val: PendingRequestTypes.Struct) => val.id,\n    );\n  }\n}\n","import { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.engine.init();\n      this.core.verify.init({ verifyUrl: this.metadata.verifyUrl });\n      this.logger.info(`SignClient Initialization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_QUEUE_STATES","ONE_SECOND","ENGINE_RPC_OPTS","toMiliseconds","params","connectParams","__spreadProps","__spreadValues","pairingTopic","requiredNamespaces","optionalNamespaces","sessionProperties","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","PROPOSAL_EXPIRY_MESSAGE","engineEvent","error","session","completeSession","message","getInternalError","id","expiry","calcExpiry","relayProtocol","namespaces","proposer","isValidObject","getRequiredNamespacesFromNamespaces","selfPublicKey","peerPublicKey","sessionTopic","getSdkError","sessionSettle","SESSION_EXPIRY","reason","acknowledged","chainId","request","payloadId","done","result","wcDeepLink","WALLETCONNECT_DEEPLINK_CHOICE","handleDeeplinkRedirect","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","pairing","duplicates","p","_a","_b","expirerHasDeleted","self","e","r","pendingRequest","verifyContext","args","method","relayRpcId","clientRpcId","throwOnFailedPublish","payload","formatJsonRpcRequest","isBrowser","METHODS_TO_VERIFY","hash","hashMessage","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","isExpired","reqMethod","resMethod","err","subscriptionId","relay","controller","memoryKey","lastSessionUpdateId","MemoryStore","lastId","currentId","_topic","RELAYER_EVENTS","isValidParams","isUndefined","isValidRelays","type","validRequiredNamespacesError","isValidRequiredNamespaces","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidRequestExpiry","SESSION_REQUEST_EXPIRY_BOUNDARIES","isValidResponse","isValidEvent","isValidNamespacesEvent","metadata","context","VERIFY_SERVER","properties","property","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","PAIRING_EVENTS","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","REQUEST_CONTEXT","val","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","getLoggerContext","Client"],"mappings":"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"}