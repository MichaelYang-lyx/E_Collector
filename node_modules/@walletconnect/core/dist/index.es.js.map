{"version":3,"file":"index.es.js","sources":["../../../node_modules/multiformats/esm/vendor/base-x.js","../../../node_modules/multiformats/esm/src/bytes.js","../../../node_modules/multiformats/esm/src/bases/base.js","../../../node_modules/multiformats/esm/src/bases/identity.js","../../../node_modules/multiformats/esm/src/bases/base2.js","../../../node_modules/multiformats/esm/src/bases/base8.js","../../../node_modules/multiformats/esm/src/bases/base10.js","../../../node_modules/multiformats/esm/src/bases/base16.js","../../../node_modules/multiformats/esm/src/bases/base32.js","../../../node_modules/multiformats/esm/src/bases/base36.js","../../../node_modules/multiformats/esm/src/bases/base58.js","../../../node_modules/multiformats/esm/src/bases/base64.js","../../../node_modules/multiformats/esm/src/bases/base256emoji.js","../../../node_modules/multiformats/esm/vendor/varint.js","../../../node_modules/multiformats/esm/src/varint.js","../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../node_modules/multiformats/esm/src/codecs/json.js","../../../node_modules/multiformats/esm/src/basics.js","../../../node_modules/uint8arrays/esm/src/util/as-uint8array.js","../../../node_modules/uint8arrays/esm/src/alloc.js","../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../node_modules/uint8arrays/esm/src/from-string.js","../src/constants/core.ts","../src/constants/crypto.ts","../src/constants/keychain.ts","../src/constants/messages.ts","../src/constants/publisher.ts","../src/constants/relayer.ts","../src/constants/store.ts","../src/constants/subscriber.ts","../src/constants/pairing.ts","../src/constants/history.ts","../src/constants/expirer.ts","../src/constants/verify.ts","../src/controllers/keychain.ts","../src/controllers/crypto.ts","../src/controllers/messages.ts","../src/controllers/publisher.ts","../src/controllers/topicmap.ts","../src/controllers/subscriber.ts","../src/controllers/relayer.ts","../src/controllers/store.ts","../src/controllers/pairing.ts","../src/controllers/history.ts","../src/controllers/expirer.ts","../src/controllers/verify.ts","../src/core.ts","../src/index.ts"],"sourcesContent":["function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","export const CORE_PROTOCOL = \"wc\";\nexport const CORE_VERSION = 2;\nexport const CORE_CONTEXT = \"core\";\n\nexport const CORE_STORAGE_PREFIX = `${CORE_PROTOCOL}@${CORE_VERSION}:${CORE_CONTEXT}:`;\n\nexport const CORE_DEFAULT = {\n  name: CORE_CONTEXT,\n  logger: \"error\",\n};\n\nexport const CORE_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const CRYPTO_CONTEXT = \"crypto\";\n\nexport const CRYPTO_CLIENT_SEED = \"client_ed25519_seed\";\n\nexport const CRYPTO_JWT_TTL = ONE_DAY;\n","export const KEYCHAIN_CONTEXT = \"keychain\";\n\nexport const KEYCHAIN_STORAGE_VERSION = \"0.3\";\n","export const MESSAGES_CONTEXT = \"messages\";\n\nexport const MESSAGES_STORAGE_VERSION = \"0.3\";\n","import { SIX_HOURS } from \"@walletconnect/time\";\n\nexport const PUBLISHER_DEFAULT_TTL = SIX_HOURS;\n\nexport const PUBLISHER_CONTEXT = \"publisher\";\n","import { ONE_SECOND } from \"@walletconnect/time\";\n\nexport const RELAYER_DEFAULT_PROTOCOL = \"irn\";\n\nexport const RELAYER_DEFAULT_LOGGER = \"error\";\n\nexport const RELAYER_DEFAULT_RELAY_URL = \"wss://relay.walletconnect.com\";\nexport const RELAYER_FAILOVER_RELAY_URL = \"wss://relay.walletconnect.org\";\n\nexport const RELAYER_CONTEXT = \"relayer\";\n\nexport const RELAYER_EVENTS = {\n  message: \"relayer_message\",\n  message_ack: \"relayer_message_ack\",\n  connect: \"relayer_connect\",\n  disconnect: \"relayer_disconnect\",\n  error: \"relayer_error\",\n  connection_stalled: \"relayer_connection_stalled\",\n  transport_closed: \"relayer_transport_closed\",\n  publish: \"relayer_publish\",\n};\n\nexport const RELAYER_SUBSCRIBER_SUFFIX = \"_subscription\";\n\nexport const RELAYER_PROVIDER_EVENTS = {\n  payload: \"payload\",\n  connect: \"connect\",\n  disconnect: \"disconnect\",\n  error: \"error\",\n};\n\nexport const RELAYER_RECONNECT_TIMEOUT = ONE_SECOND;\n\nexport const RELAYER_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\n// Updated automatically via `new-version` npm script.\n\nexport const RELAYER_SDK_VERSION = \"2.10.2\";\n\n// delay to wait before closing the transport connection after init if not active\nexport const RELAYER_TRANSPORT_CUTOFF = 10_000;\n","export const STORE_STORAGE_VERSION = \"0.3\";\n\nexport const WALLETCONNECT_CLIENT_ID = \"WALLETCONNECT_CLIENT_ID\";\n","import { THIRTY_DAYS, FIVE_SECONDS } from \"@walletconnect/time\";\n\nexport const SUBSCRIBER_EVENTS = {\n  created: \"subscription_created\",\n  deleted: \"subscription_deleted\",\n  expired: \"subscription_expired\",\n  disabled: \"subscription_disabled\",\n  sync: \"subscription_sync\",\n  resubscribed: \"subscription_resubscribed\",\n};\n\nexport const SUBSCRIBER_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const SUBSCRIBER_CONTEXT = \"subscription\";\n\nexport const SUBSCRIBER_STORAGE_VERSION = \"0.3\";\n\nexport const PENDING_SUB_RESOLUTION_TIMEOUT = FIVE_SECONDS * 1000;\n","import { THIRTY_DAYS, ONE_DAY, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { RelayerTypes, PairingJsonRpcTypes } from \"@walletconnect/types\";\n\nexport const PAIRING_CONTEXT = \"pairing\";\n\nexport const PAIRING_STORAGE_VERSION = \"0.3\";\n\nexport const PAIRING_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const PAIRING_RPC_OPTS: Record<\n  PairingJsonRpcTypes.WcMethod | \"unregistered_method\",\n  {\n    req: RelayerTypes.PublishOptions;\n    res: RelayerTypes.PublishOptions;\n  }\n> = {\n  wc_pairingDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1000,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1001,\n    },\n  },\n  wc_pairingPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1002,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1003,\n    },\n  },\n  unregistered_method: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n  },\n};\n\nexport const PAIRING_EVENTS = {\n  create: \"pairing_create\",\n  expire: \"pairing_expire\",\n  delete: \"pairing_delete\",\n  ping: \"pairing_ping\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const EXPIRER_CONTEXT = \"expirer\";\n\nexport const EXPIRER_EVENTS = {\n  created: \"expirer_created\",\n  deleted: \"expirer_deleted\",\n  expired: \"expirer_expired\",\n  sync: \"expirer_sync\",\n};\n\nexport const EXPIRER_STORAGE_VERSION = \"0.3\";\n\nexport const EXPIRER_DEFAULT_TTL = ONE_DAY;\n","export const VERIFY_CONTEXT = \"verify-api\";\n\nexport const VERIFY_SERVER = \"https://verify.walletconnect.com\";\n\nexport const VERIFY_FALLBACK_SERVER = \"https://verify.walletconnect.org\";\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IKeyChain } from \"@walletconnect/types\";\nimport { getInternalError, mapToObj, objToMap } from \"@walletconnect/utils\";\n\nimport { CORE_STORAGE_PREFIX, KEYCHAIN_CONTEXT, KEYCHAIN_STORAGE_VERSION } from \"../constants\";\n\nexport class KeyChain implements IKeyChain {\n  public keychain = new Map<string, string>();\n  public name = KEYCHAIN_CONTEXT;\n  public version = KEYCHAIN_STORAGE_VERSION;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IKeyChain[\"init\"] = async () => {\n    if (!this.initialized) {\n      const keychain = await this.getKeyChain();\n      if (typeof keychain !== \"undefined\") {\n        this.keychain = keychain;\n      }\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  public has: IKeyChain[\"has\"] = (tag) => {\n    this.isInitialized();\n    return this.keychain.has(tag);\n  };\n\n  public set: IKeyChain[\"set\"] = async (tag, key) => {\n    this.isInitialized();\n    this.keychain.set(tag, key);\n    await this.persist();\n  };\n\n  public get: IKeyChain[\"get\"] = (tag) => {\n    this.isInitialized();\n    const key = this.keychain.get(tag);\n    if (typeof key === \"undefined\") {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${tag}`);\n      throw new Error(message);\n    }\n    return key;\n  };\n\n  public del: IKeyChain[\"del\"] = async (tag) => {\n    this.isInitialized();\n    this.keychain.delete(tag);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setKeyChain(keychain: Map<string, string>) {\n    await this.core.storage.setItem<Record<string, string>>(this.storageKey, mapToObj(keychain));\n  }\n\n  private async getKeyChain() {\n    const keychain = await this.core.storage.getItem<Record<string, string>>(this.storageKey);\n    return typeof keychain !== \"undefined\" ? objToMap(keychain) : undefined;\n  }\n\n  private async persist() {\n    await this.setKeyChain(this.keychain);\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nimport { ICore, ICrypto, IKeyChain } from \"@walletconnect/types\";\nimport * as relayAuth from \"@walletconnect/relay-auth\";\nimport { fromString } from \"uint8arrays/from-string\";\nimport {\n  decrypt,\n  deriveSymKey,\n  encrypt,\n  generateKeyPair as generateKeyPairUtil,\n  hashKey,\n  getInternalError,\n  generateRandomBytes32,\n  validateEncoding,\n  validateDecoding,\n  isTypeOneEnvelope,\n  deserialize,\n  decodeTypeByte,\n  BASE16,\n} from \"@walletconnect/utils\";\nimport { toString } from \"uint8arrays\";\n\nimport { CRYPTO_CONTEXT, CRYPTO_CLIENT_SEED, CRYPTO_JWT_TTL } from \"../constants\";\nimport { KeyChain } from \"./keychain\";\n\nexport class Crypto implements ICrypto {\n  public name = CRYPTO_CONTEXT;\n  public keychain: ICrypto[\"keychain\"];\n\n  private initialized = false;\n\n  constructor(public core: ICore, public logger: Logger, keychain?: IKeyChain) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n    this.keychain = keychain || new KeyChain(this.core, this.logger);\n  }\n\n  public init: ICrypto[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.keychain.init();\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public hasKeys: ICrypto[\"hasKeys\"] = (tag) => {\n    this.isInitialized();\n    return this.keychain.has(tag);\n  };\n\n  public getClientId: ICrypto[\"getClientId\"] = async () => {\n    this.isInitialized();\n    const seed = await this.getClientSeed();\n    const keyPair = relayAuth.generateKeyPair(seed);\n    const clientId = relayAuth.encodeIss(keyPair.publicKey);\n    return clientId;\n  };\n\n  public generateKeyPair: ICrypto[\"generateKeyPair\"] = () => {\n    this.isInitialized();\n    const keyPair = generateKeyPairUtil();\n    return this.setPrivateKey(keyPair.publicKey, keyPair.privateKey);\n  };\n\n  public signJWT: ICrypto[\"signJWT\"] = async (aud) => {\n    this.isInitialized();\n    const seed = await this.getClientSeed();\n    const keyPair = relayAuth.generateKeyPair(seed);\n    const sub = generateRandomBytes32();\n    const ttl = CRYPTO_JWT_TTL;\n    const jwt = await relayAuth.signJWT(sub, aud, ttl, keyPair);\n    return jwt;\n  };\n\n  public generateSharedKey: ICrypto[\"generateSharedKey\"] = (\n    selfPublicKey,\n    peerPublicKey,\n    overrideTopic,\n  ) => {\n    this.isInitialized();\n    const selfPrivateKey = this.getPrivateKey(selfPublicKey);\n    const symKey = deriveSymKey(selfPrivateKey, peerPublicKey);\n    return this.setSymKey(symKey, overrideTopic);\n  };\n\n  public setSymKey: ICrypto[\"setSymKey\"] = async (symKey, overrideTopic) => {\n    this.isInitialized();\n    const topic = overrideTopic || hashKey(symKey);\n    await this.keychain.set(topic, symKey);\n    return topic;\n  };\n\n  public deleteKeyPair: ICrypto[\"deleteKeyPair\"] = async (publicKey: string) => {\n    this.isInitialized();\n    await this.keychain.del(publicKey);\n  };\n\n  public deleteSymKey: ICrypto[\"deleteSymKey\"] = async (topic: string) => {\n    this.isInitialized();\n    await this.keychain.del(topic);\n  };\n\n  public encode: ICrypto[\"encode\"] = async (topic, payload, opts) => {\n    this.isInitialized();\n    const params = validateEncoding(opts);\n    const message = safeJsonStringify(payload);\n    if (isTypeOneEnvelope(params)) {\n      const selfPublicKey = params.senderPublicKey;\n      const peerPublicKey = params.receiverPublicKey;\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\n    }\n    const symKey = this.getSymKey(topic);\n    const { type, senderPublicKey } = params;\n    const result = encrypt({ type, symKey, message, senderPublicKey });\n    return result;\n  };\n\n  public decode: ICrypto[\"decode\"] = async (topic, encoded, opts) => {\n    this.isInitialized();\n    const params = validateDecoding(encoded, opts);\n    if (isTypeOneEnvelope(params)) {\n      const selfPublicKey = params.receiverPublicKey;\n      const peerPublicKey = params.senderPublicKey;\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\n    }\n    try {\n      const symKey = this.getSymKey(topic);\n      const message = decrypt({ symKey, encoded });\n      const payload = safeJsonParse(message);\n      return payload;\n    } catch (error) {\n      this.logger.error(\n        `Failed to decode message from topic: '${topic}', clientId: '${await this.getClientId()}'`,\n      );\n      this.logger.error(error);\n    }\n  };\n\n  public getPayloadType: ICrypto[\"getPayloadType\"] = (encoded) => {\n    const deserialized = deserialize(encoded);\n    return decodeTypeByte(deserialized.type);\n  };\n\n  public getPayloadSenderPublicKey: ICrypto[\"getPayloadSenderPublicKey\"] = (encoded) => {\n    const deserialized = deserialize(encoded);\n    return deserialized.senderPublicKey\n      ? toString(deserialized.senderPublicKey, BASE16)\n      : undefined;\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setPrivateKey(publicKey: string, privateKey: string): Promise<string> {\n    await this.keychain.set(publicKey, privateKey);\n    return publicKey;\n  }\n\n  private getPrivateKey(publicKey: string) {\n    const privateKey = this.keychain.get(publicKey);\n    return privateKey;\n  }\n\n  private async getClientSeed(): Promise<Uint8Array> {\n    let seed = \"\";\n    try {\n      seed = this.keychain.get(CRYPTO_CLIENT_SEED);\n    } catch {\n      seed = generateRandomBytes32();\n      await this.keychain.set(CRYPTO_CLIENT_SEED, seed);\n    }\n    return fromString(seed, \"base16\");\n  }\n\n  private getSymKey(topic: string) {\n    const symKey = this.keychain.get(topic);\n    return symKey;\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IMessageTracker, MessageRecord } from \"@walletconnect/types\";\nimport { hashMessage, mapToObj, objToMap, getInternalError } from \"@walletconnect/utils\";\nimport { CORE_STORAGE_PREFIX, MESSAGES_CONTEXT, MESSAGES_STORAGE_VERSION } from \"../constants\";\n\nexport class MessageTracker extends IMessageTracker {\n  public messages = new Map<string, MessageRecord>();\n  public name = MESSAGES_CONTEXT;\n  public version = MESSAGES_STORAGE_VERSION;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public logger: Logger, public core: ICore) {\n    super(logger, core);\n    this.logger = generateChildLogger(logger, this.name);\n    this.core = core;\n  }\n\n  public init: IMessageTracker[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      try {\n        const messages = await this.getRelayerMessages();\n        if (typeof messages !== \"undefined\") {\n          this.messages = messages;\n        }\n\n        this.logger.debug(`Successfully Restored records for ${this.name}`);\n        this.logger.trace({ type: \"method\", method: \"restore\", size: this.messages.size });\n      } catch (e) {\n        this.logger.debug(`Failed to Restore records for ${this.name}`);\n        this.logger.error(e as any);\n      } finally {\n        this.initialized = true;\n      }\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  public set: IMessageTracker[\"set\"] = async (topic, message) => {\n    this.isInitialized();\n    const hash = hashMessage(message);\n    let messages = this.messages.get(topic);\n    if (typeof messages === \"undefined\") {\n      messages = {};\n    }\n    if (typeof messages[hash] !== \"undefined\") {\n      return hash;\n    }\n    messages[hash] = message;\n    this.messages.set(topic, messages);\n    await this.persist();\n    return hash;\n  };\n\n  public get: IMessageTracker[\"get\"] = (topic) => {\n    this.isInitialized();\n    let messages = this.messages.get(topic);\n    if (typeof messages === \"undefined\") {\n      messages = {};\n    }\n    return messages;\n  };\n\n  public has: IMessageTracker[\"has\"] = (topic, message) => {\n    this.isInitialized();\n    const messages = this.get(topic);\n    const hash = hashMessage(message);\n    return typeof messages[hash] !== \"undefined\";\n  };\n\n  public del: IMessageTracker[\"del\"] = async (topic) => {\n    this.isInitialized();\n    this.messages.delete(topic);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setRelayerMessages(messages: Map<string, MessageRecord>): Promise<void> {\n    await this.core.storage.setItem<Record<string, MessageRecord>>(\n      this.storageKey,\n      mapToObj(messages),\n    );\n  }\n\n  private async getRelayerMessages(): Promise<Map<string, MessageRecord> | undefined> {\n    const messages = await this.core.storage.getItem<Record<string, MessageRecord>>(\n      this.storageKey,\n    );\n    return typeof messages !== \"undefined\" ? objToMap(messages) : undefined;\n  }\n\n  private async persist() {\n    await this.setRelayerMessages(this.messages);\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { JsonRpcPayload, RequestArguments } from \"@walletconnect/jsonrpc-types\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { IPublisher, IRelayer, PublisherTypes, RelayerTypes } from \"@walletconnect/types\";\nimport {\n  getRelayProtocolApi,\n  getRelayProtocolName,\n  isUndefined,\n  createExpiringPromise,\n} from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\n\nimport { PUBLISHER_CONTEXT, PUBLISHER_DEFAULT_TTL, RELAYER_EVENTS } from \"../constants\";\nimport { getBigIntRpcId } from \"@walletconnect/jsonrpc-utils\";\nimport { TEN_SECONDS, toMiliseconds } from \"@walletconnect/time\";\n\nexport class Publisher extends IPublisher {\n  public events = new EventEmitter();\n  public name = PUBLISHER_CONTEXT;\n  public queue = new Map<string, PublisherTypes.Params>();\n\n  private publishTimeout = toMiliseconds(TEN_SECONDS);\n  private needsTransportRestart = false;\n\n  constructor(public relayer: IRelayer, public logger: Logger) {\n    super(relayer, logger);\n    this.relayer = relayer;\n    this.logger = generateChildLogger(logger, this.name);\n    this.registerEventListeners();\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public publish: IPublisher[\"publish\"] = async (topic, message, opts) => {\n    this.logger.debug(`Publishing Payload`);\n    this.logger.trace({ type: \"method\", method: \"publish\", params: { topic, message, opts } });\n    try {\n      const ttl = opts?.ttl || PUBLISHER_DEFAULT_TTL;\n      const relay = getRelayProtocolName(opts);\n      const prompt = opts?.prompt || false;\n      const tag = opts?.tag || 0;\n      const id = opts?.id || (getBigIntRpcId().toString() as any);\n      const params = { topic, message, opts: { ttl, relay, prompt, tag, id } };\n      // delay adding to queue to avoid cases where heartbeat might pulse right after publish resulting in duplicate publish\n      const queueTimeout = setTimeout(() => this.queue.set(id, params), this.publishTimeout);\n      try {\n        const publish = await createExpiringPromise(\n          this.rpcPublish(topic, message, ttl, relay, prompt, tag, id),\n          this.publishTimeout,\n          \"Failed to publish payload, please try again.\",\n        );\n        await publish;\n        this.removeRequestFromQueue(id);\n        this.relayer.events.emit(RELAYER_EVENTS.publish, params);\n      } catch (err) {\n        this.logger.debug(`Publishing Payload stalled`);\n        this.needsTransportRestart = true;\n        if (opts?.internal?.throwOnFailedPublish) {\n          // remove the request from the queue so it's not retried automatically\n          this.removeRequestFromQueue(id);\n          throw err;\n        }\n        return;\n      } finally {\n        clearTimeout(queueTimeout);\n      }\n      this.logger.debug(`Successfully Published Payload`);\n      this.logger.trace({ type: \"method\", method: \"publish\", params: { topic, message, opts } });\n    } catch (e) {\n      this.logger.debug(`Failed to Publish Payload`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  };\n\n  public on: IPublisher[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IPublisher[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IPublisher[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IPublisher[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private rpcPublish(\n    topic: string,\n    message: string,\n    ttl: number,\n    relay: RelayerTypes.ProtocolOptions,\n    prompt?: boolean,\n    tag?: number,\n    id?: number,\n  ) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.PublishParams> = {\n      method: api.publish,\n      params: {\n        topic,\n        message,\n        ttl,\n        prompt,\n        tag,\n      },\n      id,\n    };\n    if (isUndefined(request.params?.prompt)) delete request.params?.prompt;\n    if (isUndefined(request.params?.tag)) delete request.params?.tag;\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"message\", direction: \"outgoing\", request });\n    return this.relayer.request(request);\n  }\n\n  private removeRequestFromQueue(id: string) {\n    this.queue.delete(id);\n  }\n\n  private checkQueue() {\n    this.queue.forEach(async (params) => {\n      const { topic, message, opts } = params;\n      await this.publish(topic, message, opts);\n    });\n  }\n\n  private registerEventListeners() {\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\n      // restart the transport if needed\n      // queue will be processed on the next pulse\n      if (this.needsTransportRestart) {\n        this.needsTransportRestart = false;\n        this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n        return;\n      }\n      this.checkQueue();\n    });\n    this.relayer.on(RELAYER_EVENTS.message_ack, (event: JsonRpcPayload) => {\n      this.removeRequestFromQueue(event.id.toString());\n    });\n  }\n}\n","import { ISubscriberTopicMap } from \"@walletconnect/types\";\n\nexport class SubscriberTopicMap implements ISubscriberTopicMap {\n  public map = new Map<string, string[]>();\n\n  get topics(): string[] {\n    return Array.from(this.map.keys());\n  }\n\n  public set: ISubscriberTopicMap[\"set\"] = (topic, id) => {\n    const ids = this.get(topic);\n    if (this.exists(topic, id)) return;\n    this.map.set(topic, [...ids, id]);\n  };\n\n  public get: ISubscriberTopicMap[\"get\"] = (topic) => {\n    const ids = this.map.get(topic);\n    return ids || [];\n  };\n\n  public exists: ISubscriberTopicMap[\"exists\"] = (topic, id) => {\n    const ids = this.get(topic);\n    return ids.includes(id);\n  };\n\n  public delete: ISubscriberTopicMap[\"delete\"] = (topic, id) => {\n    if (typeof id === \"undefined\") {\n      this.map.delete(topic);\n      return;\n    }\n    if (!this.map.has(topic)) return;\n    const ids = this.get(topic);\n    if (!this.exists(topic, id)) return;\n    const remaining = ids.filter((x) => x !== id);\n    if (!remaining.length) {\n      this.map.delete(topic);\n      return;\n    }\n    this.map.set(topic, remaining);\n  };\n\n  public clear: ISubscriberTopicMap[\"clear\"] = () => {\n    this.map.clear();\n  };\n}\n","import { EventEmitter } from \"events\";\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { ErrorResponse, RequestArguments } from \"@walletconnect/jsonrpc-types\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { Watch } from \"@walletconnect/time\";\nimport {\n  IRelayer,\n  ISubscriber,\n  RelayerTypes,\n  SubscriberEvents,\n  SubscriberTypes,\n} from \"@walletconnect/types\";\nimport {\n  getSdkError,\n  getInternalError,\n  getRelayProtocolApi,\n  getRelayProtocolName,\n  createExpiringPromise,\n  hashMessage,\n  isValidArray,\n} from \"@walletconnect/utils\";\nimport {\n  CORE_STORAGE_PREFIX,\n  SUBSCRIBER_CONTEXT,\n  SUBSCRIBER_EVENTS,\n  SUBSCRIBER_STORAGE_VERSION,\n  PENDING_SUB_RESOLUTION_TIMEOUT,\n  RELAYER_EVENTS,\n} from \"../constants\";\nimport { SubscriberTopicMap } from \"./topicmap\";\n\nexport class Subscriber extends ISubscriber {\n  public subscriptions = new Map<string, SubscriberTypes.Active>();\n  public topicMap = new SubscriberTopicMap();\n  public events = new EventEmitter();\n  public name = SUBSCRIBER_CONTEXT;\n  public version = SUBSCRIBER_STORAGE_VERSION;\n  public pending = new Map<string, SubscriberTypes.Params>();\n\n  private cached: SubscriberTypes.Active[] = [];\n  private initialized = false;\n  private pendingSubscriptionWatchLabel = \"pending_sub_watch_label\";\n  private pollingInterval = 20;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private subscribeTimeout = 10_000;\n  private restartInProgress = false;\n  private clientId: string;\n  private batchSubscribeTopicsLimit = 500;\n  constructor(public relayer: IRelayer, public logger: Logger) {\n    super(relayer, logger);\n    this.relayer = relayer;\n    this.logger = generateChildLogger(logger, this.name);\n    this.clientId = \"\"; // assigned in init\n  }\n\n  public init: ISubscriber[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      this.registerEventListeners();\n      this.clientId = await this.relayer.core.crypto.getClientId();\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return (\n      this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name\n    );\n  }\n\n  get length() {\n    return this.subscriptions.size;\n  }\n\n  get ids() {\n    return Array.from(this.subscriptions.keys());\n  }\n\n  get values() {\n    return Array.from(this.subscriptions.values());\n  }\n\n  get topics() {\n    return this.topicMap.topics;\n  }\n\n  public subscribe: ISubscriber[\"subscribe\"] = async (topic, opts) => {\n    await this.restartToComplete();\n    this.isInitialized();\n    this.logger.debug(`Subscribing Topic`);\n    this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\n    try {\n      const relay = getRelayProtocolName(opts);\n      const params = { topic, relay };\n      this.pending.set(topic, params);\n      const id = await this.rpcSubscribe(topic, relay);\n      this.onSubscribe(id, params);\n      this.logger.debug(`Successfully Subscribed Topic`);\n      this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\n      return id;\n    } catch (e) {\n      this.logger.debug(`Failed to Subscribe Topic`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  };\n\n  public unsubscribe: ISubscriber[\"unsubscribe\"] = async (topic, opts) => {\n    await this.restartToComplete();\n    this.isInitialized();\n    if (typeof opts?.id !== \"undefined\") {\n      await this.unsubscribeById(topic, opts.id, opts);\n    } else {\n      await this.unsubscribeByTopic(topic, opts);\n    }\n  };\n\n  public isSubscribed: ISubscriber[\"isSubscribed\"] = async (topic: string) => {\n    // topic subscription is already resolved\n    if (this.topics.includes(topic)) return true;\n\n    // wait for the subscription to resolve\n    const exists = await new Promise<boolean>((resolve, reject) => {\n      const watch = new Watch();\n      watch.start(this.pendingSubscriptionWatchLabel);\n      const interval = setInterval(() => {\n        if (!this.pending.has(topic) && this.topics.includes(topic)) {\n          clearInterval(interval);\n          watch.stop(this.pendingSubscriptionWatchLabel);\n          resolve(true);\n        }\n        if (watch.elapsed(this.pendingSubscriptionWatchLabel) >= PENDING_SUB_RESOLUTION_TIMEOUT) {\n          clearInterval(interval);\n          watch.stop(this.pendingSubscriptionWatchLabel);\n          reject(new Error(\"Subscription resolution timeout\"));\n        }\n      }, this.pollingInterval);\n    }).catch(() => false);\n    return exists;\n  };\n\n  public on: ISubscriber[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: ISubscriber[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: ISubscriber[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: ISubscriber[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private hasSubscription(id: string, topic: string) {\n    let result = false;\n    try {\n      const subscription = this.getSubscription(id);\n      result = subscription.topic === topic;\n    } catch (e) {\n      // ignore error\n    }\n    return result;\n  }\n\n  private onEnable() {\n    this.cached = [];\n    this.initialized = true;\n  }\n\n  private onDisable() {\n    this.cached = this.values;\n    this.subscriptions.clear();\n    this.topicMap.clear();\n  }\n\n  private async unsubscribeByTopic(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    const ids = this.topicMap.get(topic);\n    await Promise.all(ids.map(async (id) => await this.unsubscribeById(topic, id, opts)));\n  }\n\n  private async unsubscribeById(topic: string, id: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    this.logger.debug(`Unsubscribing Topic`);\n    this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\n    try {\n      const relay = getRelayProtocolName(opts);\n      await this.rpcUnsubscribe(topic, id, relay);\n      const reason = getSdkError(\"USER_DISCONNECTED\", `${this.name}, ${topic}`);\n      await this.onUnsubscribe(topic, id, reason);\n      this.logger.debug(`Successfully Unsubscribed Topic`);\n      this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\n    } catch (e) {\n      this.logger.debug(`Failed to Unsubscribe Topic`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  }\n\n  private async rpcSubscribe(topic: string, relay: RelayerTypes.ProtocolOptions) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.SubscribeParams> = {\n      method: api.subscribe,\n      params: {\n        topic,\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    try {\n      const subscribe = await createExpiringPromise(\n        this.relayer.request(request),\n        this.subscribeTimeout,\n      );\n      await subscribe;\n    } catch (err) {\n      this.logger.debug(`Outgoing Relay Subscribe Payload stalled`);\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n    return hashMessage(topic + this.clientId);\n  }\n\n  private async rpcBatchSubscribe(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n    const relay = subscriptions[0].relay;\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.BatchSubscribeParams> = {\n      method: api.batchSubscribe,\n      params: {\n        topics: subscriptions.map((s) => s.topic),\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    try {\n      const subscribe = await createExpiringPromise(\n        this.relayer.request(request),\n        this.subscribeTimeout,\n      );\n      return await subscribe;\n    } catch (err) {\n      this.logger.debug(`Outgoing Relay Payload stalled`);\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n  }\n\n  private rpcUnsubscribe(topic: string, id: string, relay: RelayerTypes.ProtocolOptions) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.UnsubscribeParams> = {\n      method: api.unsubscribe,\n      params: {\n        topic,\n        id,\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    return this.relayer.request(request);\n  }\n\n  private onSubscribe(id: string, params: SubscriberTypes.Params) {\n    this.setSubscription(id, { ...params, id });\n    this.pending.delete(params.topic);\n  }\n\n  private onBatchSubscribe(subscriptions: SubscriberTypes.Active[]) {\n    if (!subscriptions.length) return;\n    subscriptions.forEach((subscription) => {\n      this.setSubscription(subscription.id, { ...subscription });\n      this.pending.delete(subscription.topic);\n    });\n  }\n\n  private async onUnsubscribe(topic: string, id: string, reason: ErrorResponse) {\n    this.events.removeAllListeners(id);\n    if (this.hasSubscription(id, topic)) {\n      this.deleteSubscription(id, reason);\n    }\n    await this.relayer.messages.del(topic);\n  }\n\n  private async setRelayerSubscriptions(subscriptions: SubscriberTypes.Active[]) {\n    await this.relayer.core.storage.setItem<SubscriberTypes.Active[]>(\n      this.storageKey,\n      subscriptions,\n    );\n  }\n\n  private async getRelayerSubscriptions() {\n    const subscriptions = await this.relayer.core.storage.getItem<SubscriberTypes.Active[]>(\n      this.storageKey,\n    );\n    return subscriptions;\n  }\n\n  private setSubscription(id: string, subscription: SubscriberTypes.Active) {\n    if (this.subscriptions.has(id)) return;\n    this.logger.debug(`Setting subscription`);\n    this.logger.trace({ type: \"method\", method: \"setSubscription\", id, subscription });\n    this.addSubscription(id, subscription);\n  }\n\n  private addSubscription(id: string, subscription: SubscriberTypes.Active) {\n    this.subscriptions.set(id, { ...subscription });\n    this.topicMap.set(subscription.topic, id);\n    this.events.emit(SUBSCRIBER_EVENTS.created, subscription);\n  }\n\n  private getSubscription(id: string) {\n    this.logger.debug(`Getting subscription`);\n    this.logger.trace({ type: \"method\", method: \"getSubscription\", id });\n    const subscription = this.subscriptions.get(id);\n    if (!subscription) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return subscription;\n  }\n\n  private deleteSubscription(id: string, reason: ErrorResponse) {\n    this.logger.debug(`Deleting subscription`);\n    this.logger.trace({ type: \"method\", method: \"deleteSubscription\", id, reason });\n    const subscription = this.getSubscription(id);\n    this.subscriptions.delete(id);\n    this.topicMap.delete(subscription.topic, id);\n    this.events.emit(SUBSCRIBER_EVENTS.deleted, {\n      ...subscription,\n      reason,\n    } as SubscriberEvents.Deleted);\n  }\n\n  private restart = async () => {\n    this.restartInProgress = true;\n    await this.restore();\n    await this.reset();\n    this.restartInProgress = false;\n  };\n\n  private async persist() {\n    await this.setRelayerSubscriptions(this.values);\n    this.events.emit(SUBSCRIBER_EVENTS.sync);\n  }\n\n  private async reset() {\n    if (this.cached.length) {\n      const batches = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n      for (let i = 0; i < batches; i++) {\n        const batch = this.cached.splice(0, this.batchSubscribeTopicsLimit);\n        await this.batchSubscribe(batch);\n      }\n    }\n    this.events.emit(SUBSCRIBER_EVENTS.resubscribed);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getRelayerSubscriptions();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.subscriptions.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored subscriptions for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", subscriptions: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private async batchSubscribe(subscriptions: SubscriberTypes.Params[]) {\n    if (!subscriptions.length) return;\n    const result = (await this.rpcBatchSubscribe(subscriptions)) as string[];\n    if (!isValidArray(result)) return;\n    this.onBatchSubscribe(result.map((id, i) => ({ ...subscriptions[i], id })));\n  }\n\n  private async onConnect() {\n    if (this.restartInProgress) return;\n    await this.restart();\n    this.onEnable();\n  }\n\n  private onDisconnect() {\n    this.onDisable();\n  }\n\n  private async checkPending() {\n    if (!this.initialized || this.relayer.transportExplicitlyClosed) {\n      return;\n    }\n    const pendingSubscriptions: SubscriberTypes.Params[] = [];\n    this.pending.forEach((params) => {\n      pendingSubscriptions.push(params);\n    });\n    await this.batchSubscribe(pendingSubscriptions);\n  }\n\n  private registerEventListeners() {\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, async () => {\n      await this.checkPending();\n    });\n    this.relayer.on(RELAYER_EVENTS.connect, async () => {\n      await this.onConnect();\n    });\n    this.relayer.on(RELAYER_EVENTS.disconnect, () => {\n      this.onDisconnect();\n    });\n    this.events.on(SUBSCRIBER_EVENTS.created, async (createdEvent: SubscriberEvents.Created) => {\n      const eventName = SUBSCRIBER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      await this.persist();\n    });\n    this.events.on(SUBSCRIBER_EVENTS.deleted, async (deletedEvent: SubscriberEvents.Deleted) => {\n      const eventName = SUBSCRIBER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      await this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private async restartToComplete() {\n    if (!this.restartInProgress) return;\n\n    await new Promise<void>((resolve) => {\n      const interval = setInterval(() => {\n        if (!this.restartInProgress) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, this.pollingInterval);\n    });\n  }\n}\n","import { EventEmitter } from \"events\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport {\n  formatJsonRpcResult,\n  IJsonRpcProvider,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  JsonRpcPayload,\n  JsonRpcRequest,\n  RequestArguments,\n} from \"@walletconnect/jsonrpc-utils\";\nimport WsConnection from \"@walletconnect/jsonrpc-ws-connection\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n  Logger,\n} from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { toMiliseconds } from \"@walletconnect/time\";\nimport {\n  ICore,\n  IMessageTracker,\n  IPublisher,\n  IRelayer,\n  ISubscriber,\n  RelayerOptions,\n  RelayerTypes,\n  SubscriberTypes,\n} from \"@walletconnect/types\";\nimport {\n  createExpiringPromise,\n  formatRelayRpcUrl,\n  getInternalError,\n  isOnline,\n  subscribeToNetworkChange,\n} from \"@walletconnect/utils\";\n\nimport {\n  RELAYER_SDK_VERSION,\n  RELAYER_CONTEXT,\n  RELAYER_DEFAULT_LOGGER,\n  RELAYER_EVENTS,\n  RELAYER_PROVIDER_EVENTS,\n  RELAYER_RECONNECT_TIMEOUT,\n  RELAYER_SUBSCRIBER_SUFFIX,\n  RELAYER_DEFAULT_RELAY_URL,\n  RELAYER_FAILOVER_RELAY_URL,\n  SUBSCRIBER_EVENTS,\n  RELAYER_TRANSPORT_CUTOFF,\n} from \"../constants\";\nimport { MessageTracker } from \"./messages\";\nimport { Publisher } from \"./publisher\";\nimport { Subscriber } from \"./subscriber\";\nexport class Relayer extends IRelayer {\n  public protocol = \"wc\";\n  public version = 2;\n\n  public core: ICore;\n  public logger: Logger;\n  public events = new EventEmitter();\n  public provider: IJsonRpcProvider;\n  public messages: IMessageTracker;\n  public subscriber: ISubscriber;\n  public publisher: IPublisher;\n  public name = RELAYER_CONTEXT;\n  public transportExplicitlyClosed = false;\n\n  private initialized = false;\n  private connectionAttemptInProgress = false;\n  private relayUrl: string;\n  private projectId: string | undefined;\n  private connectionStatusPollingInterval = 20;\n  private staleConnectionErrors = [\"socket hang up\", \"socket stalled\"];\n  private hasExperiencedNetworkDisruption = false;\n\n  constructor(opts: RelayerOptions) {\n    super(opts);\n    this.core = opts.core;\n    this.logger =\n      typeof opts.logger !== \"undefined\" && typeof opts.logger !== \"string\"\n        ? generateChildLogger(opts.logger, this.name)\n        : pino(getDefaultLoggerOptions({ level: opts.logger || RELAYER_DEFAULT_LOGGER }));\n    this.messages = new MessageTracker(this.logger, opts.core);\n    this.subscriber = new Subscriber(this, this.logger);\n    this.publisher = new Publisher(this, this.logger);\n\n    this.relayUrl = opts?.relayUrl || RELAYER_DEFAULT_RELAY_URL;\n    this.projectId = opts.projectId;\n\n    // re-assigned during init()\n    this.provider = {} as IJsonRpcProvider;\n  }\n\n  public async init() {\n    this.logger.trace(`Initialized`);\n    this.registerEventListeners();\n    await this.createProvider();\n    await Promise.all([this.messages.init(), this.subscriber.init()]);\n    try {\n      await this.transportOpen();\n    } catch {\n      this.logger.warn(\n        `Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${RELAYER_FAILOVER_RELAY_URL}...`,\n      );\n      await this.restartTransport(RELAYER_FAILOVER_RELAY_URL);\n    }\n    this.initialized = true;\n    setTimeout(async () => {\n      if (this.subscriber.topics.length === 0) {\n        this.logger.info(`No topics subscribed to after init, closing transport`);\n        await this.transportClose();\n        this.transportExplicitlyClosed = false;\n      }\n    }, RELAYER_TRANSPORT_CUTOFF);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get connected() {\n    return this.provider.connection.connected;\n  }\n\n  get connecting() {\n    return this.provider.connection.connecting;\n  }\n\n  public async publish(topic: string, message: string, opts?: RelayerTypes.PublishOptions) {\n    this.isInitialized();\n    await this.publisher.publish(topic, message, opts);\n    await this.recordMessageEvent({\n      topic,\n      message,\n      // We don't have `publishedAt` from the relay server on outgoing, so use current time to satisfy type.\n      publishedAt: Date.now(),\n    });\n  }\n\n  public async subscribe(topic: string, opts?: RelayerTypes.SubscribeOptions) {\n    this.isInitialized();\n    let id = this.subscriber.topicMap.get(topic)?.[0] || \"\";\n\n    if (id) return id;\n\n    let resolvePromise: () => void;\n    const onSubCreated = (subscription: SubscriberTypes.Active) => {\n      if (subscription.topic === topic) {\n        this.subscriber.off(SUBSCRIBER_EVENTS.created, onSubCreated);\n        resolvePromise();\n      }\n    };\n\n    await Promise.all([\n      new Promise<void>((resolve) => {\n        resolvePromise = resolve;\n        this.subscriber.on(SUBSCRIBER_EVENTS.created, onSubCreated);\n      }),\n      new Promise<void>(async (resolve) => {\n        id = await this.subscriber.subscribe(topic, opts);\n        resolve();\n      }),\n    ]);\n\n    return id;\n  }\n\n  public request = async (request: RequestArguments<RelayJsonRpc.SubscribeParams>) => {\n    this.logger.debug(`Publishing Request Payload`);\n    try {\n      await this.toEstablishConnection();\n      return await this.provider.request(request);\n    } catch (e) {\n      this.logger.debug(`Failed to Publish Request`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  };\n\n  public async unsubscribe(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    this.isInitialized();\n    await this.subscriber.unsubscribe(topic, opts);\n  }\n\n  public on(event: string, listener: any) {\n    this.events.on(event, listener);\n  }\n\n  public once(event: string, listener: any) {\n    this.events.once(event, listener);\n  }\n\n  public off(event: string, listener: any) {\n    this.events.off(event, listener);\n  }\n\n  public removeListener(event: string, listener: any) {\n    this.events.removeListener(event, listener);\n  }\n\n  public async transportClose() {\n    this.transportExplicitlyClosed = true;\n    /**\n     * if there was a network disruption like restart of network driver, the socket is most likely stalled and we can't rely on it\n     * as in this case provider.disconnect() is not reliable, since it might resolve after a long time or not emit disconnect event at all.\n     */\n    if (this.hasExperiencedNetworkDisruption && this.connected) {\n      await createExpiringPromise(this.provider.disconnect(), 1000, \"provider.disconnect()\").catch(\n        () => this.onProviderDisconnect(),\n      );\n    } else if (this.connected) {\n      await this.provider.disconnect();\n    }\n  }\n\n  public async transportOpen(relayUrl?: string) {\n    this.transportExplicitlyClosed = false;\n    await this.confirmOnlineStateOrThrow();\n    if (this.connectionAttemptInProgress) return;\n\n    if (relayUrl && relayUrl !== this.relayUrl) {\n      this.relayUrl = relayUrl;\n      await this.transportClose();\n      await this.createProvider();\n    }\n    this.connectionAttemptInProgress = true;\n    try {\n      await Promise.all([\n        new Promise<void>((resolve) => {\n          if (!this.initialized) return resolve();\n          // wait for the subscriber to finish resubscribing to its topics\n          this.subscriber.once(SUBSCRIBER_EVENTS.resubscribed, () => {\n            resolve();\n          });\n        }),\n        new Promise<void>(async (resolve, reject) => {\n          try {\n            await createExpiringPromise(\n              this.provider.connect(),\n              10_000,\n              `Socket stalled when trying to connect to ${this.relayUrl}`,\n            );\n          } catch (e) {\n            reject(e);\n            return;\n          }\n          resolve();\n        }),\n      ]);\n    } catch (e: unknown | Error) {\n      this.logger.error(e);\n      const error = e as Error;\n      if (!this.isConnectionStalled(error.message)) {\n        throw e;\n      }\n      this.provider.events.emit(RELAYER_PROVIDER_EVENTS.disconnect);\n    } finally {\n      this.connectionAttemptInProgress = false;\n      this.hasExperiencedNetworkDisruption = false;\n    }\n  }\n\n  public async restartTransport(relayUrl?: string) {\n    await this.confirmOnlineStateOrThrow();\n    if (this.connectionAttemptInProgress) return;\n    this.relayUrl = relayUrl || this.relayUrl;\n    await this.transportClose();\n    await this.createProvider();\n    await this.transportOpen();\n  }\n\n  public async confirmOnlineStateOrThrow() {\n    if (await isOnline()) return;\n    throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n  }\n\n  // ---------- Private ----------------------------------------------- //\n\n  private isConnectionStalled(message: string) {\n    return this.staleConnectionErrors.some((error) => message.includes(error));\n  }\n\n  private async createProvider() {\n    if (this.provider.connection) {\n      this.unregisterProviderListeners();\n    }\n    const auth = await this.core.crypto.signJWT(this.relayUrl);\n    this.provider = new JsonRpcProvider(\n      new WsConnection(\n        formatRelayRpcUrl({\n          sdkVersion: RELAYER_SDK_VERSION,\n          protocol: this.protocol,\n          version: this.version,\n          relayUrl: this.relayUrl,\n          projectId: this.projectId,\n          auth,\n          useOnCloseEvent: true,\n        }),\n      ),\n    );\n    this.registerProviderListeners();\n  }\n\n  private async recordMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    const { topic, message } = messageEvent;\n    await this.messages.set(topic, message);\n  }\n\n  private async shouldIgnoreMessageEvent(\n    messageEvent: RelayerTypes.MessageEvent,\n  ): Promise<boolean> {\n    const { topic, message } = messageEvent;\n\n    // Ignore if incoming `message` is clearly invalid.\n    if (!message || message.length === 0) {\n      this.logger.debug(`Ignoring invalid/empty message: ${message}`);\n      return true;\n    }\n\n    // Ignore if `topic` is not subscribed to.\n    if (!(await this.subscriber.isSubscribed(topic))) {\n      this.logger.debug(`Ignoring message for non-subscribed topic ${topic}`);\n      return true;\n    }\n\n    // Ignore if `message` is a duplicate.\n    const exists = this.messages.has(topic, message);\n    if (exists) {\n      this.logger.debug(`Ignoring duplicate message: ${message}`);\n    }\n    return exists;\n  }\n\n  private async onProviderPayload(payload: JsonRpcPayload) {\n    this.logger.debug(`Incoming Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"incoming\", payload });\n    if (isJsonRpcRequest(payload)) {\n      if (!payload.method.endsWith(RELAYER_SUBSCRIBER_SUFFIX)) return;\n      const event = (payload as JsonRpcRequest<RelayJsonRpc.SubscriptionParams>).params;\n      const { topic, message, publishedAt } = event.data;\n      const messageEvent: RelayerTypes.MessageEvent = { topic, message, publishedAt };\n      this.logger.debug(`Emitting Relayer Payload`);\n      this.logger.trace({ type: \"event\", event: event.id, ...messageEvent });\n      this.events.emit(event.id, messageEvent);\n      await this.acknowledgePayload(payload);\n      await this.onMessageEvent(messageEvent);\n    } else if (isJsonRpcResponse(payload)) {\n      this.events.emit(RELAYER_EVENTS.message_ack, payload);\n    }\n  }\n\n  private async onMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    if (await this.shouldIgnoreMessageEvent(messageEvent)) return;\n    this.events.emit(RELAYER_EVENTS.message, messageEvent);\n    await this.recordMessageEvent(messageEvent);\n  }\n\n  private async acknowledgePayload(payload: JsonRpcPayload) {\n    const response = formatJsonRpcResult(payload.id, true);\n    await this.provider.connection.send(response);\n  }\n\n  // ---------- Events Handlers ----------------------------------------------- //\n  private onPayloadHandler = (payload: JsonRpcPayload) => {\n    this.onProviderPayload(payload);\n  };\n\n  private onConnectHandler = () => {\n    this.events.emit(RELAYER_EVENTS.connect);\n  };\n\n  private onDisconnectHandler = () => {\n    this.onProviderDisconnect();\n  };\n\n  private onProviderErrorHandler = (error: Error) => {\n    this.logger.error(error);\n    this.events.emit(RELAYER_EVENTS.error, error);\n\n    // close the transport when a fatal error is received as there's no way to recover from it\n    // usual cases are missing/invalid projectId, expired jwt token, invalid origin etc\n    this.logger.info(\"Fatal socket error received, closing transport\");\n    this.transportClose();\n  };\n\n  private registerProviderListeners = () => {\n    this.provider.on(RELAYER_PROVIDER_EVENTS.payload, this.onPayloadHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.connect, this.onConnectHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, this.onDisconnectHandler);\n    this.provider.on(RELAYER_PROVIDER_EVENTS.error, this.onProviderErrorHandler);\n  };\n\n  private unregisterProviderListeners() {\n    this.provider.off(RELAYER_PROVIDER_EVENTS.payload, this.onPayloadHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.connect, this.onConnectHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.disconnect, this.onDisconnectHandler);\n    this.provider.off(RELAYER_PROVIDER_EVENTS.error, this.onProviderErrorHandler);\n  }\n\n  private async registerEventListeners() {\n    this.events.on(RELAYER_EVENTS.connection_stalled, () => {\n      this.restartTransport().catch((error) => this.logger.error(error));\n    });\n\n    let lastConnectedState = await isOnline();\n    subscribeToNetworkChange(async (connected: boolean) => {\n      if (!this.initialized) return;\n\n      // sometimes the network change event is triggered multiple times so avoid reacting to the same value\n      if (lastConnectedState === connected) return;\n\n      lastConnectedState = connected;\n\n      if (connected) {\n        await this.restartTransport().catch((error) => this.logger.error(error));\n      } else {\n        // when the device network is restarted, the socket might stay in false `connected` state\n        this.hasExperiencedNetworkDisruption = true;\n        await this.transportClose().catch((error) => this.logger.error(error));\n      }\n    });\n  }\n\n  private onProviderDisconnect() {\n    this.events.emit(RELAYER_EVENTS.disconnect);\n    this.attemptToReconnect();\n  }\n\n  private attemptToReconnect() {\n    if (this.transportExplicitlyClosed) {\n      return;\n    }\n\n    this.logger.info(\"attemptToReconnect called. Connecting...\");\n    // Attempt reconnection after one second.\n    setTimeout(async () => {\n      await this.restartTransport().catch((error) => this.logger.error(error));\n    }, toMiliseconds(RELAYER_RECONNECT_TIMEOUT));\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private async toEstablishConnection() {\n    await this.confirmOnlineStateOrThrow();\n    if (this.connected) return;\n    if (this.connectionAttemptInProgress) {\n      return await new Promise<void>((resolve) => {\n        const interval = setInterval(() => {\n          if (this.connected) {\n            clearInterval(interval);\n            resolve();\n          }\n        }, this.connectionStatusPollingInterval);\n      });\n    }\n    await this.restartTransport();\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IStore } from \"@walletconnect/types\";\nimport {\n  getInternalError,\n  isProposalStruct,\n  isSessionStruct,\n  isUndefined,\n} from \"@walletconnect/utils\";\nimport { CORE_STORAGE_PREFIX, STORE_STORAGE_VERSION } from \"../constants\";\nimport isEqual from \"lodash.isequal\";\n\nexport class Store<Key, Data extends Record<string, any>> extends IStore<Key, Data> {\n  public map = new Map<Key, Data>();\n  public version = STORE_STORAGE_VERSION;\n\n  private cached: Data[] = [];\n  private initialized = false;\n\n  /**\n   * Regenerates the value key to retrieve it from cache\n   */\n  private getKey: ((data: Data) => Key) | undefined;\n\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  /**\n   * @param {ICore} core Core\n   * @param {Logger} logger Logger\n   * @param {string} name Store's name\n   * @param {Store<Key, Data>[\"getKey\"]} getKey Regenerates the value key to retrieve it from cache\n   * @param {string} storagePrefix Prefixes value keys\n   */\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n    public name: string,\n    storagePrefix: string = CORE_STORAGE_PREFIX,\n    getKey: Store<Key, Data>[\"getKey\"] = undefined,\n  ) {\n    super(core, logger, name, storagePrefix);\n    this.logger = generateChildLogger(logger, this.name);\n    this.storagePrefix = storagePrefix;\n    this.getKey = getKey;\n  }\n\n  public init: IStore<Key, Data>[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n\n      await this.restore();\n\n      this.cached.forEach((value) => {\n        if (this.getKey && value !== null && !isUndefined(value)) {\n          this.map.set(this.getKey(value), value);\n        } else if (isProposalStruct(value)) {\n          // TODO(pedro) revert type casting as any\n          this.map.set(value.id as any, value);\n        } else if (isSessionStruct(value)) {\n          // TODO(pedro) revert type casting as any\n          this.map.set(value.topic as any, value);\n        }\n      });\n\n      this.cached = [];\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get length() {\n    return this.map.size;\n  }\n\n  get keys() {\n    return Array.from(this.map.keys());\n  }\n\n  get values() {\n    return Array.from(this.map.values());\n  }\n\n  public set: IStore<Key, Data>[\"set\"] = async (key, value) => {\n    this.isInitialized();\n    if (this.map.has(key)) {\n      await this.update(key, value);\n    } else {\n      this.logger.debug(`Setting value`);\n      this.logger.trace({ type: \"method\", method: \"set\", key, value });\n      this.map.set(key, value);\n      await this.persist();\n    }\n  };\n\n  public get: IStore<Key, Data>[\"get\"] = (key) => {\n    this.isInitialized();\n    this.logger.debug(`Getting value`);\n    this.logger.trace({ type: \"method\", method: \"get\", key });\n    const value = this.getData(key);\n    return value;\n  };\n\n  public getAll: IStore<Key, Data>[\"getAll\"] = (filter) => {\n    this.isInitialized();\n    if (!filter) return this.values;\n\n    return this.values.filter((value) =>\n      Object.keys(filter).every((key) => isEqual(value[key], filter[key])),\n    );\n  };\n\n  public update: IStore<Key, Data>[\"update\"] = async (key, update) => {\n    this.isInitialized();\n    this.logger.debug(`Updating value`);\n    this.logger.trace({ type: \"method\", method: \"update\", key, update });\n    const value = { ...this.getData(key), ...update };\n    this.map.set(key, value);\n    await this.persist();\n  };\n\n  public delete: IStore<Key, Data>[\"delete\"] = async (key, reason) => {\n    this.isInitialized();\n    if (!this.map.has(key)) return;\n    this.logger.debug(`Deleting value`);\n    this.logger.trace({ type: \"method\", method: \"delete\", key, reason });\n    this.map.delete(key);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setDataStore(value: Data[]) {\n    await this.core.storage.setItem<Data[]>(this.storageKey, value);\n  }\n\n  private async getDataStore() {\n    const value = await this.core.storage.getItem<Data[]>(this.storageKey);\n    return value;\n  }\n\n  private getData(key: Key) {\n    const value = this.map.get(key);\n    if (!value) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${key}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return value;\n  }\n\n  private async persist() {\n    await this.setDataStore(this.values);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getDataStore();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.map.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored value for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", value: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore value for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport {\n  ICore,\n  PairingTypes,\n  IPairing,\n  IPairingPrivate,\n  IStore,\n  RelayerTypes,\n  PairingJsonRpcTypes,\n  ExpirerTypes,\n} from \"@walletconnect/types\";\nimport {\n  getInternalError,\n  parseUri,\n  calcExpiry,\n  generateRandomBytes32,\n  formatUri,\n  getSdkError,\n  engineEvent,\n  createDelayedPromise,\n  isValidParams,\n  isValidUrl,\n  isValidString,\n  isExpired,\n  parseExpirerTarget,\n  TYPE_1,\n} from \"@walletconnect/utils\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES, THIRTY_DAYS } from \"@walletconnect/time\";\nimport EventEmitter from \"events\";\nimport {\n  PAIRING_CONTEXT,\n  PAIRING_STORAGE_VERSION,\n  CORE_STORAGE_PREFIX,\n  RELAYER_DEFAULT_PROTOCOL,\n  PAIRING_RPC_OPTS,\n  RELAYER_EVENTS,\n  EXPIRER_EVENTS,\n  PAIRING_EVENTS,\n} from \"../constants\";\nimport { Store } from \"../controllers/store\";\n\nexport class Pairing implements IPairing {\n  public name = PAIRING_CONTEXT;\n  public version = PAIRING_STORAGE_VERSION;\n\n  public events = new EventEmitter();\n  public pairings: IStore<string, PairingTypes.Struct>;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private ignoredPayloadTypes = [TYPE_1];\n  private registeredMethods: string[] = [];\n\n  constructor(public core: ICore, public logger: Logger) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n    this.pairings = new Store(this.core, this.logger, this.name, this.storagePrefix);\n  }\n\n  public init: IPairing[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.pairings.init();\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.initialized = true;\n      this.logger.trace(`Initialized`);\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public register: IPairing[\"register\"] = ({ methods }) => {\n    this.isInitialized();\n    this.registeredMethods = [...new Set([...this.registeredMethods, ...methods])];\n  };\n\n  public create: IPairing[\"create\"] = async () => {\n    this.isInitialized();\n    const symKey = generateRandomBytes32();\n    const topic = await this.core.crypto.setSymKey(symKey);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const relay = { protocol: RELAYER_DEFAULT_PROTOCOL };\n    const pairing = { topic, expiry, relay, active: false };\n    const uri = formatUri({\n      protocol: this.core.protocol,\n      version: this.core.version,\n      topic,\n      symKey,\n      relay,\n    });\n    await this.pairings.set(topic, pairing);\n    await this.core.relayer.subscribe(topic);\n    this.core.expirer.set(topic, expiry);\n\n    return { topic, uri };\n  };\n\n  public pair: IPairing[\"pair\"] = async (params) => {\n    this.isInitialized();\n    this.isValidPair(params);\n    const { topic, symKey, relay } = parseUri(params.uri);\n    let existingPairing;\n    if (this.pairings.keys.includes(topic)) {\n      existingPairing = this.pairings.get(topic);\n      if (existingPairing.active) {\n        throw new Error(\n          `Pairing already exists: ${topic}. Please try again with a new connection URI.`,\n        );\n      }\n    }\n\n    // avoid overwriting keychain pairing already exists\n    if (!this.core.crypto.keychain.has(topic)) {\n      await this.core.crypto.setSymKey(symKey, topic);\n      await this.core.relayer.subscribe(topic, { relay });\n    }\n\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const pairing = { topic, relay, expiry, active: false };\n    await this.pairings.set(topic, pairing);\n    this.core.expirer.set(topic, expiry);\n\n    if (params.activatePairing) {\n      await this.activate({ topic });\n    }\n\n    this.events.emit(PAIRING_EVENTS.create, pairing);\n    return pairing;\n  };\n\n  public activate: IPairing[\"activate\"] = async ({ topic }) => {\n    this.isInitialized();\n    const expiry = calcExpiry(THIRTY_DAYS);\n    await this.pairings.update(topic, { active: true, expiry });\n    this.core.expirer.set(topic, expiry);\n  };\n\n  public ping: IPairing[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.pairings.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_pairingPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"pairing_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    }\n  };\n\n  public updateExpiry: IPairing[\"updateExpiry\"] = async ({ topic, expiry }) => {\n    this.isInitialized();\n    await this.pairings.update(topic, { expiry });\n  };\n\n  public updateMetadata: IPairing[\"updateMetadata\"] = async ({ topic, metadata }) => {\n    this.isInitialized();\n    await this.pairings.update(topic, { peerMetadata: metadata });\n  };\n\n  public getPairings: IPairing[\"getPairings\"] = () => {\n    this.isInitialized();\n    return this.pairings.values;\n  };\n\n  public disconnect: IPairing[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.pairings.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_pairingDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deletePairing(topic);\n    }\n  };\n\n  // ---------- Private Helpers ----------------------------------------------- //\n\n  private sendRequest: IPairingPrivate[\"sendRequest\"] = async (topic, method, params) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.core.crypto.encode(topic, payload);\n    const opts = PAIRING_RPC_OPTS[method].req;\n    this.core.history.set(topic, payload);\n    this.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: IPairingPrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.core.crypto.encode(topic, payload);\n    const record = await this.core.history.get(topic, id);\n    const opts = PAIRING_RPC_OPTS[record.request.method].res;\n    await this.core.relayer.publish(topic, message, opts);\n    await this.core.history.resolve(payload);\n  };\n\n  private sendError: IPairingPrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.core.crypto.encode(topic, payload);\n    const record = await this.core.history.get(topic, id);\n    const opts = PAIRING_RPC_OPTS[record.request.method]\n      ? PAIRING_RPC_OPTS[record.request.method].res\n      : PAIRING_RPC_OPTS.unregistered_method.res;\n\n    await this.core.relayer.publish(topic, message, opts);\n    await this.core.history.resolve(payload);\n  };\n\n  private deletePairing: IPairingPrivate[\"deletePairing\"] = async (topic, expirerHasDeleted) => {\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.pairings.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.core.expirer.del(topic),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private cleanup = async () => {\n    const expiredPairings = this.pairings.getAll().filter((pairing) => isExpired(pairing.expiry));\n    await Promise.all(expiredPairings.map((pairing) => this.deletePairing(pairing.topic)));\n  };\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.core.relayer.on(RELAYER_EVENTS.message, async (event: RelayerTypes.MessageEvent) => {\n      const { topic, message } = event;\n\n      // Do not handle if the topic is not related to known pairing topics.\n      if (!this.pairings.keys.includes(topic)) return;\n\n      // messages of certain types should be ignored as they are handled by their respective SDKs\n      if (this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(message))) return;\n\n      const payload = await this.core.crypto.decode(topic, message);\n\n      try {\n        if (isJsonRpcRequest(payload)) {\n          this.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.core.history.resolve(payload);\n          await this.onRelayEventResponse({ topic, payload });\n          this.core.history.delete(topic, payload.id);\n        }\n      } catch (error) {\n        this.logger.error(error);\n      }\n    });\n  }\n\n  private onRelayEventRequest: IPairingPrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as PairingJsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_pairingPing\":\n        return this.onPairingPingRequest(topic, payload);\n      case \"wc_pairingDelete\":\n        return this.onPairingDeleteRequest(topic, payload);\n      default:\n        return this.onUnknownRpcMethodRequest(topic, payload);\n    }\n  };\n\n  private onRelayEventResponse: IPairingPrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as PairingJsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_pairingPing\":\n        return this.onPairingPingResponse(topic, payload);\n      default:\n        return this.onUnknownRpcMethodResponse(resMethod);\n    }\n  };\n\n  private onPairingPingRequest: IPairingPrivate[\"onPairingPingRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_pairingPing\">(id, topic, true);\n      this.events.emit(PAIRING_EVENTS.ping, { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onPairingPingResponse: IPairingPrivate[\"onPairingPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where pairing_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"pairing_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"pairing_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onPairingDeleteRequest: IPairingPrivate[\"onPairingDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic });\n      await this.deletePairing(topic);\n      this.events.emit(PAIRING_EVENTS.delete, { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onUnknownRpcMethodRequest: IPairingPrivate[\"onUnknownRpcMethodRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, method } = payload;\n\n    try {\n      // Ignore if the implementing client has registered this method as known.\n      if (this.registeredMethods.includes(method)) return;\n      const error = getSdkError(\"WC_METHOD_UNSUPPORTED\", method);\n      await this.sendError(id, topic, error);\n      this.logger.error(error);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onUnknownRpcMethodResponse: IPairingPrivate[\"onUnknownRpcMethodResponse\"] = (method) => {\n    // Ignore if the implementing client has registered this method as known.\n    if (this.registeredMethods.includes(method)) return;\n    this.logger.error(getSdkError(\"WC_METHOD_UNSUPPORTED\", method));\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic } = parseExpirerTarget(event.target);\n      if (!topic) return;\n      if (!this.pairings.keys.includes(topic)) return;\n      await this.deletePairing(topic, true);\n      this.events.emit(PAIRING_EVENTS.expire, { topic });\n    });\n  }\n\n  // ---------- Validation Helpers ----------------------------------- //\n\n  private isValidPair = (params: { uri: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() params: ${params}`);\n      throw new Error(message);\n    }\n    if (!isValidUrl(params.uri)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri: ${params.uri}`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing = async (params: { topic: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidPairingTopic(topic);\n  };\n\n  private isValidDisconnect = async (params: { topic: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidPairingTopic(topic);\n  };\n\n  private isValidPairingTopic = async (topic: any) => {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.pairings.get(topic).expiry)) {\n      await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  };\n}\n","import { formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { IJsonRpcHistory, JsonRpcRecord, RequestEvent, ICore } from \"@walletconnect/types\";\nimport { calcExpiry, getInternalError } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { THIRTY_DAYS, toMiliseconds } from \"@walletconnect/time\";\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport {\n  CORE_STORAGE_PREFIX,\n  HISTORY_CONTEXT,\n  HISTORY_EVENTS,\n  HISTORY_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class JsonRpcHistory extends IJsonRpcHistory {\n  public records = new Map<number, JsonRpcRecord>();\n  public events = new EventEmitter();\n  public name = HISTORY_CONTEXT;\n  public version = HISTORY_STORAGE_VERSION;\n\n  private cached: JsonRpcRecord[] = [];\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IJsonRpcHistory[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((record) => this.records.set(record.id, record));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get size(): number {\n    return this.records.size;\n  }\n\n  get keys(): number[] {\n    return Array.from(this.records.keys());\n  }\n\n  get values() {\n    return Array.from(this.records.values());\n  }\n\n  get pending(): RequestEvent[] {\n    const requests: RequestEvent[] = [];\n    this.values.forEach((record) => {\n      if (typeof record.response !== \"undefined\") return;\n      const requestEvent: RequestEvent = {\n        topic: record.topic,\n        request: formatJsonRpcRequest(record.request.method, record.request.params, record.id),\n        chainId: record.chainId,\n      };\n      return requests.push(requestEvent);\n    });\n    return requests;\n  }\n\n  public set: IJsonRpcHistory[\"set\"] = (topic, request, chainId) => {\n    this.isInitialized();\n    this.logger.debug(`Setting JSON-RPC request history record`);\n    this.logger.trace({ type: \"method\", method: \"set\", topic, request, chainId });\n    if (this.records.has(request.id)) return;\n    const record: JsonRpcRecord = {\n      id: request.id,\n      topic,\n      request: { method: request.method, params: request.params || null },\n      chainId,\n      expiry: calcExpiry(THIRTY_DAYS),\n    };\n    this.records.set(record.id, record);\n    this.events.emit(HISTORY_EVENTS.created, record);\n  };\n\n  public resolve: IJsonRpcHistory[\"resolve\"] = async (response) => {\n    this.isInitialized();\n    this.logger.debug(`Updating JSON-RPC response history record`);\n    this.logger.trace({ type: \"method\", method: \"update\", response });\n    if (!this.records.has(response.id)) return;\n    const record = await this.getRecord(response.id);\n    if (typeof record.response !== \"undefined\") return;\n    record.response = isJsonRpcError(response)\n      ? { error: response.error }\n      : { result: response.result };\n    this.records.set(record.id, record);\n    this.events.emit(HISTORY_EVENTS.updated, record);\n  };\n\n  public get: IJsonRpcHistory[\"get\"] = async (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Getting record`);\n    this.logger.trace({ type: \"method\", method: \"get\", topic, id });\n    const record = await this.getRecord(id);\n    return record;\n  };\n\n  public delete: IJsonRpcHistory[\"delete\"] = (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Deleting record`);\n    this.logger.trace({ type: \"method\", method: \"delete\", id });\n    this.values.forEach((record: JsonRpcRecord) => {\n      if (record.topic === topic) {\n        if (typeof id !== \"undefined\" && record.id !== id) return;\n        this.records.delete(record.id);\n        this.events.emit(HISTORY_EVENTS.deleted, record);\n      }\n    });\n  };\n\n  public exists: IJsonRpcHistory[\"exists\"] = async (topic, id) => {\n    this.isInitialized();\n    if (!this.records.has(id)) return false;\n    const record = await this.getRecord(id);\n    return record.topic === topic;\n  };\n\n  public on: IJsonRpcHistory[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IJsonRpcHistory[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IJsonRpcHistory[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IJsonRpcHistory[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setJsonRpcRecords(records: JsonRpcRecord[]): Promise<void> {\n    await this.core.storage.setItem<JsonRpcRecord[]>(this.storageKey, records);\n  }\n\n  private async getJsonRpcRecords(): Promise<JsonRpcRecord[] | undefined> {\n    const records = await this.core.storage.getItem<JsonRpcRecord[]>(this.storageKey);\n    return records;\n  }\n\n  private getRecord(id: number) {\n    this.isInitialized();\n    const record = this.records.get(id);\n    if (!record) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return record;\n  }\n\n  private async persist() {\n    await this.setJsonRpcRecords(this.values);\n    this.events.emit(HISTORY_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getJsonRpcRecords();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.records.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored records for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", records: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore records for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private registerEventListeners(): void {\n    this.events.on(HISTORY_EVENTS.created, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n    this.events.on(HISTORY_EVENTS.updated, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.updated;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n\n    this.events.on(HISTORY_EVENTS.deleted, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\n      this.cleanup();\n    });\n  }\n\n  private cleanup() {\n    try {\n      this.records.forEach((record: JsonRpcRecord) => {\n        const msToExpiry = toMiliseconds(record.expiry || 0) - Date.now();\n        if (msToExpiry <= 0) {\n          this.logger.info(`Deleting expired history log: ${record.id}`);\n          this.delete(record.topic, record.id);\n        }\n      });\n    } catch (e) {\n      this.logger.warn(e);\n    }\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { toMiliseconds } from \"@walletconnect/time\";\nimport { ExpirerTypes, ICore, IExpirer } from \"@walletconnect/types\";\nimport { getInternalError, formatIdTarget, formatTopicTarget } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport {\n  CORE_STORAGE_PREFIX,\n  EXPIRER_CONTEXT,\n  EXPIRER_EVENTS,\n  EXPIRER_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class Expirer extends IExpirer {\n  public expirations = new Map<string, ExpirerTypes.Expiration>();\n  public events = new EventEmitter();\n  public name = EXPIRER_CONTEXT;\n  public version = EXPIRER_STORAGE_VERSION;\n\n  private cached: ExpirerTypes.Expiration[] = [];\n  private initialized = false;\n\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IExpirer[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((expiration) => this.expirations.set(expiration.target, expiration));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n  }\n\n  get length(): number {\n    return this.expirations.size;\n  }\n\n  get keys(): string[] {\n    return Array.from(this.expirations.keys());\n  }\n\n  get values(): ExpirerTypes.Expiration[] {\n    return Array.from(this.expirations.values());\n  }\n\n  public has: IExpirer[\"has\"] = (key) => {\n    try {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      return typeof expiration !== \"undefined\";\n    } catch (e) {\n      // ignore\n      return false;\n    }\n  };\n\n  public set: IExpirer[\"set\"] = (key, expiry) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    const expiration = { target, expiry };\n    this.expirations.set(target, expiration);\n    this.checkExpiry(target, expiration);\n    this.events.emit(EXPIRER_EVENTS.created, {\n      target,\n      expiration,\n    } as ExpirerTypes.Created);\n  };\n\n  public get: IExpirer[\"get\"] = (key) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    return this.getExpiration(target);\n  };\n\n  public del: IExpirer[\"del\"] = (key) => {\n    this.isInitialized();\n    const exists = this.has(key);\n    if (exists) {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      this.expirations.delete(target);\n      this.events.emit(EXPIRER_EVENTS.deleted, {\n        target,\n        expiration,\n      } as ExpirerTypes.Deleted);\n    }\n  };\n\n  public on: IExpirer[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IExpirer[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IExpirer[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IExpirer[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private formatTarget(key: string | number) {\n    if (typeof key === \"string\") {\n      return formatTopicTarget(key);\n    } else if (typeof key === \"number\") {\n      return formatIdTarget(key);\n    }\n    const { message } = getInternalError(\"UNKNOWN_TYPE\", `Target type: ${typeof key}`);\n    throw new Error(message);\n  }\n\n  private async setExpirations(expirations: ExpirerTypes.Expiration[]): Promise<void> {\n    await this.core.storage.setItem<ExpirerTypes.Expiration[]>(this.storageKey, expirations);\n  }\n\n  private async getExpirations(): Promise<ExpirerTypes.Expiration[] | undefined> {\n    const expirations = await this.core.storage.getItem<ExpirerTypes.Expiration[]>(this.storageKey);\n    return expirations;\n  }\n\n  private async persist() {\n    await this.setExpirations(this.values);\n    this.events.emit(EXPIRER_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getExpirations();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.expirations.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored expirations for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", expirations: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore expirations for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private getExpiration(target: string): ExpirerTypes.Expiration {\n    const expiration = this.expirations.get(target);\n    if (!expiration) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${target}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return expiration;\n  }\n\n  private checkExpiry(target: string, expiration: ExpirerTypes.Expiration): void {\n    const { expiry } = expiration;\n    const msToTimeout = toMiliseconds(expiry) - Date.now();\n    if (msToTimeout <= 0) this.expire(target, expiration);\n  }\n\n  private expire(target: string, expiration: ExpirerTypes.Expiration): void {\n    this.expirations.delete(target);\n    this.events.emit(EXPIRER_EVENTS.expired, {\n      target,\n      expiration,\n    } as ExpirerTypes.Expired);\n  }\n\n  private checkExpirations(): void {\n    // avoid auto expiring if the relayer is not connected\n    if (!this.core.relayer.connected) return;\n    this.expirations.forEach((expiration, target) => this.checkExpiry(target, expiration));\n  }\n\n  private registerEventListeners(): void {\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => this.checkExpirations());\n    this.events.on(EXPIRER_EVENTS.created, (createdEvent: ExpirerTypes.Created) => {\n      const eventName = EXPIRER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.expired, (expiredEvent: ExpirerTypes.Expired) => {\n      const eventName = EXPIRER_EVENTS.expired;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: expiredEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.deleted, (deletedEvent: ExpirerTypes.Deleted) => {\n      const eventName = EXPIRER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { IVerify } from \"@walletconnect/types\";\nimport { isBrowser, isNode, isReactNative } from \"@walletconnect/utils\";\nimport { FIVE_SECONDS, ONE_SECOND, toMiliseconds } from \"@walletconnect/time\";\n\nimport { VERIFY_CONTEXT, VERIFY_FALLBACK_SERVER, VERIFY_SERVER } from \"../constants\";\n\nexport class Verify extends IVerify {\n  public name = VERIFY_CONTEXT;\n  private verifyUrl: string;\n  private iframe?: HTMLIFrameElement;\n  private initialized = false;\n  private abortController: AbortController;\n  private isDevEnv;\n  // the queue is only used during the loading phase of the iframe to ensure all attestations are posted\n  private queue: string[] = [];\n  // flag to disable verify when the iframe fails to load on main & fallback urls.\n  // this means Verify API is not enabled for the current projectId and there's no point in trying to initialize it again.\n  private verifyDisabled = false;\n\n  constructor(public projectId: string, public logger: Logger) {\n    super(projectId, logger);\n    this.logger = generateChildLogger(logger, this.name);\n    this.verifyUrl = VERIFY_SERVER;\n    this.abortController = new AbortController();\n    this.isDevEnv = isNode() && process.env.IS_VITEST;\n  }\n\n  public init: IVerify[\"init\"] = async () => {\n    if (this.verifyDisabled) return;\n\n    // ignore on non browser environments\n    if (isReactNative() || !isBrowser()) return;\n\n    const verifyUrl = VERIFY_SERVER;\n    // if init is called again with a different url, remove the iframe and start over\n    if (this.verifyUrl !== verifyUrl) {\n      this.removeIframe();\n    }\n    this.verifyUrl = verifyUrl;\n\n    try {\n      await this.createIframe();\n    } catch (error) {\n      this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`);\n      this.logger.info(error);\n    }\n\n    if (this.initialized) return;\n\n    this.removeIframe();\n    this.verifyUrl = VERIFY_FALLBACK_SERVER;\n\n    try {\n      await this.createIframe();\n    } catch (error) {\n      this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`);\n      this.logger.info(error);\n      // if the fallback url fails to load as well, disable verify\n      this.verifyDisabled = true;\n    }\n  };\n\n  public register: IVerify[\"register\"] = async (params) => {\n    if (!this.initialized) {\n      this.addToQueue(params.attestationId);\n      await this.init();\n    } else {\n      this.sendPost(params.attestationId);\n    }\n  };\n\n  public resolve: IVerify[\"resolve\"] = async (params) => {\n    if (this.isDevEnv) return \"\";\n    const mainUrl = params?.verifyUrl || VERIFY_SERVER;\n    let result;\n    try {\n      result = await this.fetchAttestation(params.attestationId, mainUrl);\n    } catch (error) {\n      this.logger.info(\n        `failed to resolve attestation: ${params.attestationId} from url: ${mainUrl}`,\n      );\n      this.logger.info(error);\n      result = await this.fetchAttestation(params.attestationId, VERIFY_FALLBACK_SERVER);\n    }\n    return result;\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  private fetchAttestation = async (attestationId: string, url: string) => {\n    this.logger.info(`resolving attestation: ${attestationId} from url: ${url}`);\n    // set artificial timeout to prevent hanging\n    const timeout = this.startAbortTimer(ONE_SECOND * 2);\n    const result = await fetch(`${url}/attestation/${attestationId}`, {\n      signal: this.abortController.signal,\n    });\n    clearTimeout(timeout);\n    return result.status === 200 ? await result.json() : undefined;\n  };\n\n  private addToQueue = (attestationId: string) => {\n    this.queue.push(attestationId);\n  };\n\n  private processQueue = () => {\n    if (this.queue.length === 0) return;\n    this.queue.forEach((attestationId) => this.sendPost(attestationId));\n    this.queue = [];\n  };\n\n  private sendPost = (attestationId: string) => {\n    try {\n      if (!this.iframe) return;\n      this.iframe.contentWindow?.postMessage(attestationId, \"*\"); // setting targetOrigin to \"*\" fixes the `Failed to execute 'postMessage' on 'DOMWindow': The target origin provided...` while the iframe is still loading\n      this.logger.info(`postMessage sent: ${attestationId} ${this.verifyUrl}`);\n    } catch (e) {}\n  };\n\n  private createIframe = async () => {\n    let iframeOnLoadResolve: () => void;\n    const onMessage = (event: MessageEvent) => {\n      if (event.data === \"verify_ready\") {\n        this.initialized = true;\n        this.processQueue();\n        window.removeEventListener(\"message\", onMessage);\n        iframeOnLoadResolve();\n      }\n    };\n    await Promise.race([\n      new Promise<void>((resolve) => {\n        const exists = document.getElementById(VERIFY_CONTEXT);\n        if (exists) return resolve();\n\n        window.addEventListener(\"message\", onMessage);\n        const iframe = document.createElement(\"iframe\");\n        iframe.id = VERIFY_CONTEXT;\n        iframe.src = `${this.verifyUrl}/${this.projectId}`;\n        iframe.style.display = \"none\";\n        document.body.append(iframe);\n        this.iframe = iframe;\n        iframeOnLoadResolve = resolve;\n      }),\n      new Promise((_, reject) =>\n        setTimeout(() => {\n          window.removeEventListener(\"message\", onMessage);\n          reject(\"verify iframe load timeout\");\n        }, toMiliseconds(FIVE_SECONDS)),\n      ),\n    ]);\n  };\n\n  private startAbortTimer(timer: number) {\n    this.abortController = new AbortController();\n    return setTimeout(() => this.abortController.abort(), toMiliseconds(timer));\n  }\n\n  private removeIframe = () => {\n    if (!this.iframe) return;\n    this.iframe.remove();\n    this.iframe = undefined;\n    this.initialized = false;\n  };\n}\n","import { EventEmitter } from \"events\";\n\nimport KeyValueStorage from \"@walletconnect/keyvaluestorage\";\nimport { HeartBeat } from \"@walletconnect/heartbeat\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n} from \"@walletconnect/logger\";\nimport { CoreTypes, ICore } from \"@walletconnect/types\";\n\nimport { Crypto, Relayer, Pairing, JsonRpcHistory, Expirer, Verify } from \"./controllers\";\nimport {\n  CORE_CONTEXT,\n  CORE_DEFAULT,\n  CORE_PROTOCOL,\n  CORE_STORAGE_OPTIONS,\n  CORE_VERSION,\n  RELAYER_DEFAULT_RELAY_URL,\n  WALLETCONNECT_CLIENT_ID,\n} from \"./constants\";\n\nexport class Core extends ICore {\n  public readonly protocol = CORE_PROTOCOL;\n  public readonly version = CORE_VERSION;\n\n  public readonly name: ICore[\"name\"] = CORE_CONTEXT;\n  public readonly relayUrl: ICore[\"relayUrl\"];\n  public readonly projectId: ICore[\"projectId\"];\n  public readonly customStoragePrefix: ICore[\"customStoragePrefix\"];\n  public events: ICore[\"events\"] = new EventEmitter();\n  public logger: ICore[\"logger\"];\n  public heartbeat: ICore[\"heartbeat\"];\n  public relayer: ICore[\"relayer\"];\n  public crypto: ICore[\"crypto\"];\n  public storage: ICore[\"storage\"];\n  public history: ICore[\"history\"];\n  public expirer: ICore[\"expirer\"];\n  public pairing: ICore[\"pairing\"];\n  public verify: ICore[\"verify\"];\n\n  private initialized = false;\n\n  static async init(opts?: CoreTypes.Options) {\n    const core = new Core(opts);\n    await core.initialize();\n    const clientId = await core.crypto.getClientId();\n    await core.storage.setItem(WALLETCONNECT_CLIENT_ID, clientId);\n\n    return core;\n  }\n\n  constructor(opts?: CoreTypes.Options) {\n    super(opts);\n\n    this.projectId = opts?.projectId;\n    this.relayUrl = opts?.relayUrl || RELAYER_DEFAULT_RELAY_URL;\n    this.customStoragePrefix = opts?.customStoragePrefix ? `:${opts.customStoragePrefix}` : \"\";\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || CORE_DEFAULT.logger }));\n    this.logger = generateChildLogger(logger, this.name);\n    this.heartbeat = new HeartBeat();\n    this.crypto = new Crypto(this, this.logger, opts?.keychain);\n    this.history = new JsonRpcHistory(this, this.logger);\n    this.expirer = new Expirer(this, this.logger);\n    this.storage = opts?.storage\n      ? opts.storage\n      : new KeyValueStorage({ ...CORE_STORAGE_OPTIONS, ...opts?.storageOptions });\n    this.relayer = new Relayer({\n      core: this,\n      logger: this.logger,\n      relayUrl: this.relayUrl,\n      projectId: this.projectId,\n    });\n    this.pairing = new Pairing(this, this.logger);\n    this.verify = new Verify(this.projectId || \"\", this.logger);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  // ---------- Public ----------------------------------------------- //\n\n  public async start() {\n    if (this.initialized) return;\n    await this.initialize();\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on = (name: any, listener: any) => {\n    return this.events.on(name, listener);\n  };\n\n  public once = (name: any, listener: any) => {\n    return this.events.once(name, listener);\n  };\n\n  public off = (name: any, listener: any) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener = (name: any, listener: any) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.crypto.init();\n      await this.history.init();\n      await this.expirer.init();\n      await this.relayer.init();\n      await this.heartbeat.init();\n      await this.pairing.init();\n      this.initialized = true;\n      this.logger.info(`Core Initialization Success`);\n    } catch (error) {\n      this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, error);\n      this.logger.error((error as any).message);\n      throw error;\n    }\n  }\n}\n","import { Core as WalletConnectCore } from \"./core\";\n\nexport * from \"./constants\";\nexport * from \"./controllers\";\n\nexport const Core = WalletConnectCore;\nexport default WalletConnectCore;\n"],"names":["fromString","from","basex","decode","encode","identity","varint","varint.encodingLength","varint.encodeTo","Digest.create","base2","base8","base10","base16","base32","base36","base64","base256emoji","bases","ONE_DAY","SIX_HOURS","ONE_SECOND","THIRTY_DAYS","FIVE_SECONDS","THIRTY_SECONDS","core","logger","KEYCHAIN_CONTEXT","KEYCHAIN_STORAGE_VERSION","CORE_STORAGE_PREFIX","keychain","tag","key","message","getInternalError","generateChildLogger","getLoggerContext","mapToObj","objToMap","CRYPTO_CONTEXT","seed","keyPair","relayAuth","generateKeyPairUtil","aud","sub","generateRandomBytes32","ttl","CRYPTO_JWT_TTL","selfPublicKey","peerPublicKey","overrideTopic","selfPrivateKey","symKey","deriveSymKey","topic","hashKey","publicKey","payload","opts","params","validateEncoding","safeJsonStringify","isTypeOneEnvelope","type","senderPublicKey","encrypt","encoded","validateDecoding","decrypt","safeJsonParse","error","deserialized","deserialize","decodeTypeByte","toString","BASE16","KeyChain","privateKey","CRYPTO_CLIENT_SEED","e","IMessageTracker","MESSAGES_CONTEXT","MESSAGES_STORAGE_VERSION","messages","hash","hashMessage","IPublisher","relayer","EventEmitter","PUBLISHER_CONTEXT","toMiliseconds","TEN_SECONDS","_a","PUBLISHER_DEFAULT_TTL","relay","getRelayProtocolName","prompt","id","getBigIntRpcId","queueTimeout","createExpiringPromise","RELAYER_EVENTS","err","event","listener","_b","_c","_d","request","getRelayProtocolApi","isUndefined","HEARTBEAT_EVENTS","ids","remaining","x","ISubscriber","SubscriberTopicMap","SUBSCRIBER_CONTEXT","SUBSCRIBER_STORAGE_VERSION","resolve","reject","watch","Watch","interval","PENDING_SUB_RESOLUTION_TIMEOUT","result","reason","getSdkError","subscriptions","s","__spreadProps","__spreadValues","subscription","SUBSCRIBER_EVENTS","batches","i","batch","persisted","isValidArray","pendingSubscriptions","createdEvent","eventName","deletedEvent","g","d","u","IRelayer","RELAYER_CONTEXT","RELAYER_PROVIDER_EVENTS","pino","getDefaultLoggerOptions","RELAYER_DEFAULT_LOGGER","MessageTracker","Subscriber","Publisher","RELAYER_DEFAULT_RELAY_URL","RELAYER_FAILOVER_RELAY_URL","RELAYER_TRANSPORT_CUTOFF","resolvePromise","onSubCreated","relayUrl","isOnline","auth","JsonRpcProvider","WsConnection","formatRelayRpcUrl","RELAYER_SDK_VERSION","messageEvent","exists","isJsonRpcRequest","RELAYER_SUBSCRIBER_SUFFIX","publishedAt","isJsonRpcResponse","response","formatJsonRpcResult","lastConnectedState","subscribeToNetworkChange","connected","RELAYER_RECONNECT_TIMEOUT","c","n","IStore","name","storagePrefix","getKey","STORE_STORAGE_VERSION","value","isProposalStruct","isSessionStruct","filter","isEqual","update","PAIRING_CONTEXT","PAIRING_STORAGE_VERSION","TYPE_1","methods","expiry","calcExpiry","FIVE_MINUTES","RELAYER_DEFAULT_PROTOCOL","pairing","uri","formatUri","parseUri","existingPairing","PAIRING_EVENTS","done","createDelayedPromise","engineEvent","metadata","method","formatJsonRpcRequest","PAIRING_RPC_OPTS","record","formatJsonRpcError","expirerHasDeleted","expiredPairings","isExpired","resMethod","_topic","isJsonRpcResult","isJsonRpcError","isValidParams","isValidUrl","isValidString","Store","EXPIRER_EVENTS","parseExpirerTarget","IJsonRpcHistory","HISTORY_CONTEXT","HISTORY_STORAGE_VERSION","chainId","HISTORY_EVENTS","requests","requestEvent","records","IExpirer","EXPIRER_CONTEXT","EXPIRER_STORAGE_VERSION","expiration","target","formatTopicTarget","formatIdTarget","expirations","expiredEvent","IVerify","projectId","VERIFY_CONTEXT","isReactNative","isBrowser","verifyUrl","VERIFY_SERVER","VERIFY_FALLBACK_SERVER","mainUrl","attestationId","url","timeout","iframeOnLoadResolve","onMessage","iframe","_","isNode","timer","Core","ICore","CORE_PROTOCOL","CORE_VERSION","CORE_CONTEXT","CORE_DEFAULT","HeartBeat","Crypto","JsonRpcHistory","Expirer","KeyValueStorage","CORE_STORAGE_OPTIONS","Relayer","Pairing","Verify","clientId","WALLETCONNECT_CLIENT_ID","WalletConnectCore"],"mappings":"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"}